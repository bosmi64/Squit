ARM GAS  C:\Users\Graziano\AppData\Local\Temp\ccxs7yXP.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"PWM_MOTOR_TILT.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.PWM_MOTOR_TILT_Enable,"ax",%progbits
  19              		.align	1
  20              		.global	PWM_MOTOR_TILT_Enable
  21              		.thumb
  22              		.thumb_func
  23              		.type	PWM_MOTOR_TILT_Enable, %function
  24              	PWM_MOTOR_TILT_Enable:
  25              	.LFB2:
  26              		.file 1 ".\\Generated_Source\\PSoC5\\PWM_MOTOR_TILT.c"
   1:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** * File Name: PWM_MOTOR_TILT.c  
   3:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** * Version 3.0
   4:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** *
   5:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** * Description:
   6:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** *  comparitors. Each instance of this user module is capable of generating
   8:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks. 
  10:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** *  The compare value output may be configured to be active when the present 
  11:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** *  counter is less than or less than/equal to the compare value.
  12:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** *  width wide when the counter is equal to zero.
  14:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** *
  15:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** * Note:
  16:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** *
  17:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** *******************************************************************************
  18:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  19:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** * You may use this file only in accordance with the license, terms, conditions, 
  20:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** * disclaimers, and limitations in the end user license agreement accompanying 
  21:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** * the software package with which this file was provided.
  22:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** ********************************************************************************/
  23:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 
  24:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** #include "cytypes.h"
  25:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** #include "PWM_MOTOR_TILT.h"
  26:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 
  27:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** uint8 PWM_MOTOR_TILT_initVar = 0u;
  28:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 
  29:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 
  30:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** /*******************************************************************************
  31:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** * Function Name: PWM_MOTOR_TILT_Start
ARM GAS  C:\Users\Graziano\AppData\Local\Temp\ccxs7yXP.s 			page 2


  32:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** ********************************************************************************
  33:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** *
  34:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** * Summary:
  35:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** *  The start function initializes the pwm with the default values, the 
  36:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  37:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** *  the EnableInt command should be called if interrupt generation is required.
  38:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** *
  39:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** * Parameters:  
  40:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** *  None  
  41:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** *
  42:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** * Return: 
  43:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** *  None
  44:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** *
  45:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** * Global variables:
  46:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** *  PWM_MOTOR_TILT_initVar: Is modified when this function is called for the 
  47:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** *   first time. Is used to ensure that initialization happens only once.
  48:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** *
  49:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** *******************************************************************************/
  50:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** void PWM_MOTOR_TILT_Start(void) 
  51:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** {
  52:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     /* If not Initialized then initialize all required hardware and software */
  53:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     if(PWM_MOTOR_TILT_initVar == 0u)
  54:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     {
  55:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         PWM_MOTOR_TILT_Init();
  56:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         PWM_MOTOR_TILT_initVar = 1u;
  57:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     }
  58:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     PWM_MOTOR_TILT_Enable();
  59:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 
  60:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** }
  61:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 
  62:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 
  63:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** /*******************************************************************************
  64:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** * Function Name: PWM_MOTOR_TILT_Init
  65:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** ********************************************************************************
  66:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** *
  67:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** * Summary:
  68:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** *  Initialize component's parameters to the parameters set by user in the 
  69:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** *  customizer of the component placed onto schematic. Usually called in 
  70:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** *  PWM_MOTOR_TILT_Start().
  71:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** *
  72:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** * Parameters:  
  73:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** *  None
  74:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** *
  75:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** * Return: 
  76:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** *  None
  77:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** *
  78:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** *******************************************************************************/
  79:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** void PWM_MOTOR_TILT_Init(void) 
  80:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** {
  81:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     #if (PWM_MOTOR_TILT_UsingFixedFunction || PWM_MOTOR_TILT_UseControl)
  82:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         uint8 ctrl;
  83:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     #endif /* (PWM_MOTOR_TILT_UsingFixedFunction || PWM_MOTOR_TILT_UseControl) */
  84:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     
  85:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     #if(!PWM_MOTOR_TILT_UsingFixedFunction) 
  86:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         #if(PWM_MOTOR_TILT_UseStatus)
  87:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****             /* Interrupt State Backup for Critical Region*/
  88:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****             uint8 PWM_MOTOR_TILT_interruptState;
ARM GAS  C:\Users\Graziano\AppData\Local\Temp\ccxs7yXP.s 			page 3


  89:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         #endif /* (PWM_MOTOR_TILT_UseStatus) */
  90:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     #endif /* (!PWM_MOTOR_TILT_UsingFixedFunction) */
  91:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     
  92:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     #if (PWM_MOTOR_TILT_UsingFixedFunction)
  93:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         /* You are allowed to write the compare value (FF only) */
  94:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         PWM_MOTOR_TILT_CONTROL |= PWM_MOTOR_TILT_CFG0_MODE;
  95:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         #if (PWM_MOTOR_TILT_DeadBand2_4)
  96:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****             PWM_MOTOR_TILT_CONTROL |= PWM_MOTOR_TILT_CFG0_DB;
  97:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         #endif /* (PWM_MOTOR_TILT_DeadBand2_4) */
  98:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****                 
  99:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         ctrl = PWM_MOTOR_TILT_CONTROL3 & ((uint8 )(~PWM_MOTOR_TILT_CTRL_CMPMODE1_MASK));
 100:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         PWM_MOTOR_TILT_CONTROL3 = ctrl | PWM_MOTOR_TILT_DEFAULT_COMPARE1_MODE;
 101:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         
 102:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 103:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         PWM_MOTOR_TILT_RT1 &= ((uint8)(~PWM_MOTOR_TILT_RT1_MASK));
 104:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         PWM_MOTOR_TILT_RT1 |= PWM_MOTOR_TILT_SYNC;     
 105:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****                 
 106:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 107:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         PWM_MOTOR_TILT_RT1 &= ((uint8)(~PWM_MOTOR_TILT_SYNCDSI_MASK));
 108:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         PWM_MOTOR_TILT_RT1 |= PWM_MOTOR_TILT_SYNCDSI_EN;
 109:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****        
 110:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     #elif (PWM_MOTOR_TILT_UseControl)
 111:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         /* Set the default compare mode defined in the parameter */
 112:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         ctrl = PWM_MOTOR_TILT_CONTROL & ((uint8)(~PWM_MOTOR_TILT_CTRL_CMPMODE2_MASK)) & ((uint8)(~P
 113:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         PWM_MOTOR_TILT_CONTROL = ctrl | PWM_MOTOR_TILT_DEFAULT_COMPARE2_MODE | 
 114:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****                                    PWM_MOTOR_TILT_DEFAULT_COMPARE1_MODE;
 115:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     #endif /* (PWM_MOTOR_TILT_UsingFixedFunction) */
 116:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         
 117:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     #if (!PWM_MOTOR_TILT_UsingFixedFunction)
 118:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         #if (PWM_MOTOR_TILT_Resolution == 8)
 119:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****             /* Set FIFO 0 to 1 byte register for period*/
 120:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****             PWM_MOTOR_TILT_AUX_CONTROLDP0 |= (PWM_MOTOR_TILT_AUX_CTRL_FIFO0_CLR);
 121:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         #else /* (PWM_MOTOR_TILT_Resolution == 16)*/
 122:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****             /* Set FIFO 0 to 1 byte register for period */
 123:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****             PWM_MOTOR_TILT_AUX_CONTROLDP0 |= (PWM_MOTOR_TILT_AUX_CTRL_FIFO0_CLR);
 124:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****             PWM_MOTOR_TILT_AUX_CONTROLDP1 |= (PWM_MOTOR_TILT_AUX_CTRL_FIFO0_CLR);
 125:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         #endif /* (PWM_MOTOR_TILT_Resolution == 8) */
 126:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 
 127:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         PWM_MOTOR_TILT_WriteCounter(PWM_MOTOR_TILT_INIT_PERIOD_VALUE);
 128:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     #endif /* (!PWM_MOTOR_TILT_UsingFixedFunction) */
 129:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         
 130:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     PWM_MOTOR_TILT_WritePeriod(PWM_MOTOR_TILT_INIT_PERIOD_VALUE);
 131:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 
 132:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         #if (PWM_MOTOR_TILT_UseOneCompareMode)
 133:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****             PWM_MOTOR_TILT_WriteCompare(PWM_MOTOR_TILT_INIT_COMPARE_VALUE1);
 134:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         #else
 135:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****             PWM_MOTOR_TILT_WriteCompare1(PWM_MOTOR_TILT_INIT_COMPARE_VALUE1);
 136:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****             PWM_MOTOR_TILT_WriteCompare2(PWM_MOTOR_TILT_INIT_COMPARE_VALUE2);
 137:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         #endif /* (PWM_MOTOR_TILT_UseOneCompareMode) */
 138:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         
 139:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         #if (PWM_MOTOR_TILT_KillModeMinTime)
 140:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****             PWM_MOTOR_TILT_WriteKillTime(PWM_MOTOR_TILT_MinimumKillTime);
 141:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         #endif /* (PWM_MOTOR_TILT_KillModeMinTime) */
 142:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         
 143:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         #if (PWM_MOTOR_TILT_DeadBandUsed)
 144:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****             PWM_MOTOR_TILT_WriteDeadTime(PWM_MOTOR_TILT_INIT_DEAD_TIME);
 145:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         #endif /* (PWM_MOTOR_TILT_DeadBandUsed) */
ARM GAS  C:\Users\Graziano\AppData\Local\Temp\ccxs7yXP.s 			page 4


 146:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 
 147:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     #if (PWM_MOTOR_TILT_UseStatus || PWM_MOTOR_TILT_UsingFixedFunction)
 148:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         PWM_MOTOR_TILT_SetInterruptMode(PWM_MOTOR_TILT_INIT_INTERRUPTS_MODE);
 149:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     #endif /* (PWM_MOTOR_TILT_UseStatus || PWM_MOTOR_TILT_UsingFixedFunction) */
 150:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         
 151:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     #if (PWM_MOTOR_TILT_UsingFixedFunction)
 152:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         /* Globally Enable the Fixed Function Block chosen */
 153:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         PWM_MOTOR_TILT_GLOBAL_ENABLE |= PWM_MOTOR_TILT_BLOCK_EN_MASK;
 154:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         /* Set the Interrupt source to come from the status register */
 155:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         PWM_MOTOR_TILT_CONTROL2 |= PWM_MOTOR_TILT_CTRL2_IRQ_SEL;
 156:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     #else
 157:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         #if(PWM_MOTOR_TILT_UseStatus)
 158:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****             
 159:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 160:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****             /* Enter Critical Region*/
 161:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****             PWM_MOTOR_TILT_interruptState = CyEnterCriticalSection();
 162:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****             /* Use the interrupt output of the status register for IRQ output */
 163:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****             PWM_MOTOR_TILT_STATUS_AUX_CTRL |= PWM_MOTOR_TILT_STATUS_ACTL_INT_EN_MASK;
 164:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****             
 165:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****              /* Exit Critical Region*/
 166:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****             CyExitCriticalSection(PWM_MOTOR_TILT_interruptState);
 167:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****             
 168:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****             /* Clear the FIFO to enable the PWM_MOTOR_TILT_STATUS_FIFOFULL
 169:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****                    bit to be set on FIFO full. */
 170:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****             PWM_MOTOR_TILT_ClearFIFO();
 171:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         #endif /* (PWM_MOTOR_TILT_UseStatus) */
 172:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     #endif /* (PWM_MOTOR_TILT_UsingFixedFunction) */
 173:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** }
 174:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 
 175:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 
 176:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** /*******************************************************************************
 177:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** * Function Name: PWM_MOTOR_TILT_Enable
 178:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** ********************************************************************************
 179:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** *
 180:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** * Summary: 
 181:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** *  Enables the PWM block operation
 182:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** *
 183:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** * Parameters:  
 184:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** *  None
 185:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** *
 186:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** * Return: 
 187:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** *  None
 188:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** *
 189:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** * Side Effects: 
 190:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** *  This works only if software enable mode is chosen
 191:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** *
 192:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** *******************************************************************************/
 193:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** void PWM_MOTOR_TILT_Enable(void) 
 194:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** {
  27              		.loc 1 194 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 195:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     /* Globally Enable the Fixed Function Block chosen */
 196:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     #if (PWM_MOTOR_TILT_UsingFixedFunction)
 197:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         PWM_MOTOR_TILT_GLOBAL_ENABLE |= PWM_MOTOR_TILT_BLOCK_EN_MASK;
ARM GAS  C:\Users\Graziano\AppData\Local\Temp\ccxs7yXP.s 			page 5


  32              		.loc 1 197 0
  33 0000 074B     		ldr	r3, .L2
  34 0002 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
  35 0004 42F00400 		orr	r0, r2, #4
  36 0008 1870     		strb	r0, [r3, #0]
 198:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         PWM_MOTOR_TILT_GLOBAL_STBY_ENABLE |= PWM_MOTOR_TILT_BLOCK_STBY_EN_MASK;
  37              		.loc 1 198 0
  38 000a 197C     		ldrb	r1, [r3, #16]	@ zero_extendqisi2
  39 000c 41F00402 		orr	r2, r1, #4
  40 0010 1A74     		strb	r2, [r3, #16]
 199:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     #endif /* (PWM_MOTOR_TILT_UsingFixedFunction) */
 200:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     
 201:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     /* Enable the PWM from the control register  */
 202:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     #if (PWM_MOTOR_TILT_UseControl || PWM_MOTOR_TILT_UsingFixedFunction)
 203:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         PWM_MOTOR_TILT_CONTROL |= PWM_MOTOR_TILT_CTRL_ENABLE;
  41              		.loc 1 203 0
  42 0012 044B     		ldr	r3, .L2+4
  43 0014 1878     		ldrb	r0, [r3, #0]	@ zero_extendqisi2
  44 0016 40F00101 		orr	r1, r0, #1
  45 001a 1970     		strb	r1, [r3, #0]
  46 001c 7047     		bx	lr
  47              	.L3:
  48 001e 00BF     		.align	2
  49              	.L2:
  50 0020 A3430040 		.word	1073759139
  51 0024 184F0040 		.word	1073762072
  52              		.cfi_endproc
  53              	.LFE2:
  54              		.size	PWM_MOTOR_TILT_Enable, .-PWM_MOTOR_TILT_Enable
  55              		.section	.text.PWM_MOTOR_TILT_Stop,"ax",%progbits
  56              		.align	1
  57              		.global	PWM_MOTOR_TILT_Stop
  58              		.thumb
  59              		.thumb_func
  60              		.type	PWM_MOTOR_TILT_Stop, %function
  61              	PWM_MOTOR_TILT_Stop:
  62              	.LFB3:
 204:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     #endif /* (PWM_MOTOR_TILT_UseControl || PWM_MOTOR_TILT_UsingFixedFunction) */
 205:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** }
 206:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 
 207:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 
 208:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** /*******************************************************************************
 209:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** * Function Name: PWM_MOTOR_TILT_Stop
 210:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** ********************************************************************************
 211:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** *
 212:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** * Summary:
 213:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** *  The stop function halts the PWM, but does not change any modes or disable
 214:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** *  interrupts.
 215:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** *
 216:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** * Parameters:  
 217:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** *  None  
 218:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** *
 219:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** * Return: 
 220:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** *  None
 221:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** *
 222:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** * Side Effects:
 223:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** *  If the Enable mode is set to Hardware only then this function
ARM GAS  C:\Users\Graziano\AppData\Local\Temp\ccxs7yXP.s 			page 6


 224:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** *  has no effect on the operation of the PWM
 225:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** *
 226:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** *******************************************************************************/
 227:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** void PWM_MOTOR_TILT_Stop(void) 
 228:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** {
  63              		.loc 1 228 0
  64              		.cfi_startproc
  65              		@ args = 0, pretend = 0, frame = 0
  66              		@ frame_needed = 0, uses_anonymous_args = 0
  67              		@ link register save eliminated.
 229:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     #if (PWM_MOTOR_TILT_UseControl || PWM_MOTOR_TILT_UsingFixedFunction)
 230:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         PWM_MOTOR_TILT_CONTROL &= ((uint8)(~PWM_MOTOR_TILT_CTRL_ENABLE));
  68              		.loc 1 230 0
  69 0000 074B     		ldr	r3, .L5
 231:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     #endif /* (PWM_MOTOR_TILT_UseControl || PWM_MOTOR_TILT_UsingFixedFunction) */
 232:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     
 233:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     /* Globally disable the Fixed Function Block chosen */
 234:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     #if (PWM_MOTOR_TILT_UsingFixedFunction)
 235:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         PWM_MOTOR_TILT_GLOBAL_ENABLE &= ((uint8)(~PWM_MOTOR_TILT_BLOCK_EN_MASK));
  70              		.loc 1 235 0
  71 0002 0849     		ldr	r1, .L5+4
 230:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         PWM_MOTOR_TILT_CONTROL &= ((uint8)(~PWM_MOTOR_TILT_CTRL_ENABLE));
  72              		.loc 1 230 0
  73 0004 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
  74 0006 02F0FE00 		and	r0, r2, #254
  75 000a 1870     		strb	r0, [r3, #0]
  76              		.loc 1 235 0
  77 000c 0B78     		ldrb	r3, [r1, #0]	@ zero_extendqisi2
  78 000e 03F0FB02 		and	r2, r3, #251
  79 0012 0A70     		strb	r2, [r1, #0]
 236:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         PWM_MOTOR_TILT_GLOBAL_STBY_ENABLE &= ((uint8)(~PWM_MOTOR_TILT_BLOCK_STBY_EN_MASK));
  80              		.loc 1 236 0
  81 0014 087C     		ldrb	r0, [r1, #16]	@ zero_extendqisi2
  82 0016 00F0FB03 		and	r3, r0, #251
  83 001a 0B74     		strb	r3, [r1, #16]
  84 001c 7047     		bx	lr
  85              	.L6:
  86 001e 00BF     		.align	2
  87              	.L5:
  88 0020 184F0040 		.word	1073762072
  89 0024 A3430040 		.word	1073759139
  90              		.cfi_endproc
  91              	.LFE3:
  92              		.size	PWM_MOTOR_TILT_Stop, .-PWM_MOTOR_TILT_Stop
  93              		.section	.text.PWM_MOTOR_TILT_WritePeriod,"ax",%progbits
  94              		.align	1
  95              		.global	PWM_MOTOR_TILT_WritePeriod
  96              		.thumb
  97              		.thumb_func
  98              		.type	PWM_MOTOR_TILT_WritePeriod, %function
  99              	PWM_MOTOR_TILT_WritePeriod:
 100              	.LFB4:
 237:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     #endif /* (PWM_MOTOR_TILT_UsingFixedFunction) */
 238:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** }
 239:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 
 240:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 
 241:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** #if (PWM_MOTOR_TILT_UseOneCompareMode)
ARM GAS  C:\Users\Graziano\AppData\Local\Temp\ccxs7yXP.s 			page 7


 242:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 	#if (PWM_MOTOR_TILT_CompareMode1SW)
 243:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 
 244:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 
 245:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 		/*******************************************************************************
 246:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 		* Function Name: PWM_MOTOR_TILT_SetCompareMode
 247:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 		********************************************************************************
 248:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 		* 
 249:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 		* Summary:
 250:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 		*  This function writes the Compare Mode for the pwm output when in Dither mode,
 251:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 		*  Center Align Mode or One Output Mode.
 252:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 		*
 253:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 		* Parameters:
 254:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 		*  comparemode:  The new compare mode for the PWM output. Use the compare types
 255:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 		*                defined in the H file as input arguments.
 256:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 		*
 257:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 		* Return:
 258:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 		*  None
 259:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 		*
 260:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 		*******************************************************************************/
 261:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 		void PWM_MOTOR_TILT_SetCompareMode(uint8 comparemode) 
 262:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 		{
 263:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 		    #if(PWM_MOTOR_TILT_UsingFixedFunction)
 264:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****             
 265:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****                 #if(0 != PWM_MOTOR_TILT_CTRL_CMPMODE1_SHIFT)
 266:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_MOTOR_TILT_CTRL_CM
 267:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****                 #else
 268:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****                     uint8 comparemodemasked = comparemode;
 269:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****                 #endif /* (0 != PWM_MOTOR_TILT_CTRL_CMPMODE1_SHIFT) */
 270:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****             
 271:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 	            PWM_MOTOR_TILT_CONTROL3 &= ((uint8)(~PWM_MOTOR_TILT_CTRL_CMPMODE1_MASK)); /*Clear Exis
 272:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 	            PWM_MOTOR_TILT_CONTROL3 |= comparemodemasked;     
 273:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 		                
 274:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 		    #elif (PWM_MOTOR_TILT_UseControl)
 275:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 		        
 276:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****                 #if(0 != PWM_MOTOR_TILT_CTRL_CMPMODE1_SHIFT)
 277:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << PWM_MOTOR_TILT_CTRL_C
 278:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     		                                    PWM_MOTOR_TILT_CTRL_CMPMODE1_MASK;
 279:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****                 #else
 280:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****                     uint8 comparemode1masked = comparemode & PWM_MOTOR_TILT_CTRL_CMPMODE1_MASK;    
 281:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****                 #endif /* (0 != PWM_MOTOR_TILT_CTRL_CMPMODE1_SHIFT) */
 282:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****                 
 283:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****                 #if(0 != PWM_MOTOR_TILT_CTRL_CMPMODE2_SHIFT)                            
 284:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     		        uint8 comparemode2masked = ((uint8)((uint8)comparemode << PWM_MOTOR_TILT_CTRL_CMPMODE
 285:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     		                                   PWM_MOTOR_TILT_CTRL_CMPMODE2_MASK;
 286:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****                 #else
 287:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     		        uint8 comparemode2masked = comparemode & PWM_MOTOR_TILT_CTRL_CMPMODE2_MASK;          
 288:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****                 #endif /* (0 != PWM_MOTOR_TILT_CTRL_CMPMODE2_SHIFT) */
 289:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****                 
 290:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 		        /*Clear existing mode */
 291:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 		        PWM_MOTOR_TILT_CONTROL &= ((uint8)(~(PWM_MOTOR_TILT_CTRL_CMPMODE1_MASK | PWM_MOTOR_TILT_C
 292:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 		        PWM_MOTOR_TILT_CONTROL |= (comparemode1masked | comparemode2masked);
 293:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 		        
 294:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 		    #else
 295:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 		        uint8 temp = comparemode;
 296:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 		    #endif /* (PWM_MOTOR_TILT_UsingFixedFunction) */
 297:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 		}
 298:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 	#endif /* PWM_MOTOR_TILT_CompareMode1SW */
ARM GAS  C:\Users\Graziano\AppData\Local\Temp\ccxs7yXP.s 			page 8


 299:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 
 300:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** #else /* UseOneCompareMode */
 301:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 
 302:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 	#if (PWM_MOTOR_TILT_CompareMode1SW)
 303:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 
 304:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 
 305:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 		/*******************************************************************************
 306:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 		* Function Name: PWM_MOTOR_TILT_SetCompareMode1
 307:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 		********************************************************************************
 308:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 		* 
 309:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 		* Summary:
 310:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 		*  This function writes the Compare Mode for the pwm or pwm1 output
 311:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 		*
 312:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 		* Parameters:  
 313:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 		*  comparemode:  The new compare mode for the PWM output. Use the compare types
 314:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 		*                defined in the H file as input arguments.
 315:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 		*
 316:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 		* Return: 
 317:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 		*  None
 318:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 		*
 319:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 		*******************************************************************************/
 320:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 		void PWM_MOTOR_TILT_SetCompareMode1(uint8 comparemode) 
 321:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 		{
 322:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 		    #if(0 != PWM_MOTOR_TILT_CTRL_CMPMODE1_SHIFT)
 323:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_MOTOR_TILT_CTRL_CMPMOD
 324:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     		                               PWM_MOTOR_TILT_CTRL_CMPMODE1_MASK;
 325:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 		    #else
 326:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****                 uint8 comparemodemasked = comparemode & PWM_MOTOR_TILT_CTRL_CMPMODE1_MASK;         
 327:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****             #endif /* (0 != PWM_MOTOR_TILT_CTRL_CMPMODE1_SHIFT) */
 328:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****                    
 329:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 		    #if (PWM_MOTOR_TILT_UseControl)
 330:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 		        PWM_MOTOR_TILT_CONTROL &= ((uint8)(~PWM_MOTOR_TILT_CTRL_CMPMODE1_MASK)); /*Clear existing
 331:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 		        PWM_MOTOR_TILT_CONTROL |= comparemodemasked;
 332:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 		    #endif /* (PWM_MOTOR_TILT_UseControl) */
 333:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 		}
 334:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 	#endif /* PWM_MOTOR_TILT_CompareMode1SW */
 335:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 
 336:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** #if (PWM_MOTOR_TILT_CompareMode2SW)
 337:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 
 338:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 
 339:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     /*******************************************************************************
 340:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     * Function Name: PWM_MOTOR_TILT_SetCompareMode2
 341:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     ********************************************************************************
 342:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     * 
 343:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     * Summary:
 344:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 345:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *
 346:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     * Parameters:  
 347:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 348:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *                defined in the H file as input arguments.
 349:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *
 350:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     * Return: 
 351:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *  None
 352:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *
 353:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *******************************************************************************/
 354:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     void PWM_MOTOR_TILT_SetCompareMode2(uint8 comparemode) 
 355:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     {
ARM GAS  C:\Users\Graziano\AppData\Local\Temp\ccxs7yXP.s 			page 9


 356:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 
 357:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         #if(0 != PWM_MOTOR_TILT_CTRL_CMPMODE2_SHIFT)
 358:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_MOTOR_TILT_CTRL_CMPMODE2_S
 359:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****                                                  PWM_MOTOR_TILT_CTRL_CMPMODE2_MASK;
 360:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         #else
 361:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****             uint8 comparemodemasked = comparemode & PWM_MOTOR_TILT_CTRL_CMPMODE2_MASK;            
 362:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         #endif /* (0 != PWM_MOTOR_TILT_CTRL_CMPMODE2_SHIFT) */
 363:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         
 364:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         #if (PWM_MOTOR_TILT_UseControl)
 365:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****             PWM_MOTOR_TILT_CONTROL &= ((uint8)(~PWM_MOTOR_TILT_CTRL_CMPMODE2_MASK)); /*Clear existi
 366:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****             PWM_MOTOR_TILT_CONTROL |= comparemodemasked;
 367:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         #endif /* (PWM_MOTOR_TILT_UseControl) */
 368:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     }
 369:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     #endif /*PWM_MOTOR_TILT_CompareMode2SW */
 370:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 
 371:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** #endif /* UseOneCompareMode */
 372:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 
 373:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 
 374:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** #if (!PWM_MOTOR_TILT_UsingFixedFunction)
 375:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 
 376:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 
 377:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     /*******************************************************************************
 378:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     * Function Name: PWM_MOTOR_TILT_WriteCounter
 379:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     ********************************************************************************
 380:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     * 
 381:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     * Summary:
 382:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *  Writes a new counter value directly to the counter register. This will be 
 383:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *  implemented for that currently running period and only that period. This API 
 384:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *  is valid only for UDB implementation and not available for fixed function 
 385:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *  PWM implementation.    
 386:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *
 387:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     * Parameters:  
 388:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *  counter:  The period new period counter value.
 389:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *
 390:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     * Return: 
 391:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *  None
 392:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *
 393:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     * Side Effects: 
 394:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
 395:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *
 396:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *******************************************************************************/
 397:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     void PWM_MOTOR_TILT_WriteCounter(uint16 counter) \
 398:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****                                        
 399:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     {
 400:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         CY_SET_REG16(PWM_MOTOR_TILT_COUNTER_LSB_PTR, counter);
 401:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     }
 402:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 
 403:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 
 404:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     /*******************************************************************************
 405:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     * Function Name: PWM_MOTOR_TILT_ReadCounter
 406:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     ********************************************************************************
 407:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     * 
 408:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     * Summary:
 409:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *  This function returns the current value of the counter.  It doesn't matter
 410:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *  if the counter is enabled or running.
 411:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *
 412:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     * Parameters:  
ARM GAS  C:\Users\Graziano\AppData\Local\Temp\ccxs7yXP.s 			page 10


 413:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *  None  
 414:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *
 415:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     * Return: 
 416:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *  The current value of the counter.
 417:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *
 418:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *******************************************************************************/
 419:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     uint16 PWM_MOTOR_TILT_ReadCounter(void) 
 420:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     {
 421:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         /* Force capture by reading Accumulator */
 422:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         /* Must first do a software capture to be able to read the counter */
 423:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 424:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         (void)PWM_MOTOR_TILT_COUNTERCAP_LSB;
 425:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         
 426:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         /* Read the data from the FIFO (or capture register for Fixed Function)*/
 427:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         return (CY_GET_REG16(PWM_MOTOR_TILT_CAPTURE_LSB_PTR));
 428:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     }
 429:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 
 430:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         #if (PWM_MOTOR_TILT_UseStatus)
 431:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 
 432:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 
 433:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****             /*******************************************************************************
 434:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****             * Function Name: PWM_MOTOR_TILT_ClearFIFO
 435:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****             ********************************************************************************
 436:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****             * 
 437:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****             * Summary:
 438:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****             *  This function clears all capture data from the capture FIFO
 439:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****             *
 440:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****             * Parameters:  
 441:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****             *  None
 442:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****             *
 443:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****             * Return: 
 444:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****             *  None
 445:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****             *
 446:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****             *******************************************************************************/
 447:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****             void PWM_MOTOR_TILT_ClearFIFO(void) 
 448:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****             {
 449:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****                 while(0u != (PWM_MOTOR_TILT_ReadStatusRegister() & PWM_MOTOR_TILT_STATUS_FIFONEMPTY
 450:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****                 {
 451:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****                     (void)PWM_MOTOR_TILT_ReadCapture();
 452:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****                 }
 453:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****             }
 454:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 
 455:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         #endif /* PWM_MOTOR_TILT_UseStatus */
 456:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 
 457:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** #endif /* !PWM_MOTOR_TILT_UsingFixedFunction */
 458:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 
 459:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 
 460:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** /*******************************************************************************
 461:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** * Function Name: PWM_MOTOR_TILT_WritePeriod
 462:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** ********************************************************************************
 463:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** * 
 464:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** * Summary:
 465:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** *  This function is used to change the period of the counter.  The new period 
 466:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** *  will be loaded the next time terminal count is detected.
 467:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** *
 468:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** * Parameters:  
 469:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0 
ARM GAS  C:\Users\Graziano\AppData\Local\Temp\ccxs7yXP.s 			page 11


 470:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** *           will result in the counter remaining at zero.
 471:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** *
 472:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** * Return: 
 473:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** *  None
 474:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** *
 475:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** *******************************************************************************/
 476:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** void PWM_MOTOR_TILT_WritePeriod(uint16 period) 
 477:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** {
 101              		.loc 1 477 0
 102              		.cfi_startproc
 103              		@ args = 0, pretend = 0, frame = 0
 104              		@ frame_needed = 0, uses_anonymous_args = 0
 105              		@ link register save eliminated.
 106              	.LVL0:
 478:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     #if(PWM_MOTOR_TILT_UsingFixedFunction)
 479:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         CY_SET_REG16(PWM_MOTOR_TILT_PERIOD_LSB_PTR, (uint16)period);
 107              		.loc 1 479 0
 108 0000 014B     		ldr	r3, .L8
 109 0002 1880     		strh	r0, [r3, #0]	@ movhi
 110 0004 7047     		bx	lr
 111              	.L9:
 112 0006 00BF     		.align	2
 113              	.L8:
 114 0008 1C4F0040 		.word	1073762076
 115              		.cfi_endproc
 116              	.LFE4:
 117              		.size	PWM_MOTOR_TILT_WritePeriod, .-PWM_MOTOR_TILT_WritePeriod
 118              		.section	.text.PWM_MOTOR_TILT_WriteCompare,"ax",%progbits
 119              		.align	1
 120              		.global	PWM_MOTOR_TILT_WriteCompare
 121              		.thumb
 122              		.thumb_func
 123              		.type	PWM_MOTOR_TILT_WriteCompare, %function
 124              	PWM_MOTOR_TILT_WriteCompare:
 125              	.LFB5:
 480:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     #else
 481:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         CY_SET_REG16(PWM_MOTOR_TILT_PERIOD_LSB_PTR, period);
 482:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     #endif /* (PWM_MOTOR_TILT_UsingFixedFunction) */
 483:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** }
 484:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 
 485:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** #if (PWM_MOTOR_TILT_UseOneCompareMode)
 486:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 
 487:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 
 488:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     /*******************************************************************************
 489:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     * Function Name: PWM_MOTOR_TILT_WriteCompare
 490:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     ********************************************************************************
 491:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     * 
 492:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     * Summary:
 493:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 494:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *  mode. The compare output will reflect the new value on the next UDB clock. 
 495:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *  The compare output will be driven high when the present counter value is 
 496:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *  compared to the compare value based on the compare mode defined in 
 497:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *  Dither Mode.
 498:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *
 499:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     * Parameters:  
 500:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *  compare:  New compare value.  
 501:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *
ARM GAS  C:\Users\Graziano\AppData\Local\Temp\ccxs7yXP.s 			page 12


 502:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     * Return: 
 503:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *  None
 504:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *
 505:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     * Side Effects:
 506:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *  This function is only available if the PWM mode parameter is set to
 507:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 508:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *
 509:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *******************************************************************************/
 510:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     void PWM_MOTOR_TILT_WriteCompare(uint16 compare) \
 511:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****                                        
 512:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     {	
 126              		.loc 1 512 0
 127              		.cfi_startproc
 128              		@ args = 0, pretend = 0, frame = 0
 129              		@ frame_needed = 0, uses_anonymous_args = 0
 130              		@ link register save eliminated.
 131              	.LVL1:
 513:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 		#if(PWM_MOTOR_TILT_UsingFixedFunction)
 514:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 			CY_SET_REG16(PWM_MOTOR_TILT_COMPARE1_LSB_PTR, (uint16)compare);
 132              		.loc 1 514 0
 133 0000 014B     		ldr	r3, .L11
 134 0002 1880     		strh	r0, [r3, #0]	@ movhi
 135 0004 7047     		bx	lr
 136              	.L12:
 137 0006 00BF     		.align	2
 138              	.L11:
 139 0008 1E4F0040 		.word	1073762078
 140              		.cfi_endproc
 141              	.LFE5:
 142              		.size	PWM_MOTOR_TILT_WriteCompare, .-PWM_MOTOR_TILT_WriteCompare
 143              		.section	.text.PWM_MOTOR_TILT_WriteDeadTime,"ax",%progbits
 144              		.align	1
 145              		.global	PWM_MOTOR_TILT_WriteDeadTime
 146              		.thumb
 147              		.thumb_func
 148              		.type	PWM_MOTOR_TILT_WriteDeadTime, %function
 149              	PWM_MOTOR_TILT_WriteDeadTime:
 150              	.LFB6:
 515:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 		#else
 516:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 	        CY_SET_REG16(PWM_MOTOR_TILT_COMPARE1_LSB_PTR, compare);	
 517:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 		#endif /* (PWM_MOTOR_TILT_UsingFixedFunction) */
 518:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         
 519:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         #if (PWM_MOTOR_TILT_PWMMode == PWM_MOTOR_TILT__B_PWM__DITHER)
 520:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****             #if(PWM_MOTOR_TILT_UsingFixedFunction)
 521:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     			CY_SET_REG16(PWM_MOTOR_TILT_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 522:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     		#else
 523:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     	        CY_SET_REG16(PWM_MOTOR_TILT_COMPARE2_LSB_PTR, (compare + 1u));	
 524:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     		#endif /* (PWM_MOTOR_TILT_UsingFixedFunction) */
 525:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         #endif /* (PWM_MOTOR_TILT_PWMMode == PWM_MOTOR_TILT__B_PWM__DITHER) */
 526:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     }
 527:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 
 528:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 
 529:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** #else
 530:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 
 531:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 
 532:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     /*******************************************************************************
 533:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     * Function Name: PWM_MOTOR_TILT_WriteCompare1
ARM GAS  C:\Users\Graziano\AppData\Local\Temp\ccxs7yXP.s 			page 13


 534:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     ********************************************************************************
 535:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     * 
 536:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     * Summary:
 537:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *  This funtion is used to change the compare1 value.  The compare output will 
 538:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *  reflect the new value on the next UDB clock.  The compare output will be 
 539:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *  driven high when the present counter value is less than or less than or 
 540:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *  equal to the compare register, depending on the mode.
 541:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *
 542:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     * Parameters:  
 543:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *  compare:  New compare value.  
 544:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *
 545:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     * Return: 
 546:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *  None
 547:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *
 548:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *******************************************************************************/
 549:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     void PWM_MOTOR_TILT_WriteCompare1(uint16 compare) \
 550:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****                                         
 551:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     {
 552:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         #if(PWM_MOTOR_TILT_UsingFixedFunction)
 553:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****             CY_SET_REG16(PWM_MOTOR_TILT_COMPARE1_LSB_PTR, (uint16)compare);
 554:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         #else
 555:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****             CY_SET_REG16(PWM_MOTOR_TILT_COMPARE1_LSB_PTR, compare);
 556:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         #endif /* (PWM_MOTOR_TILT_UsingFixedFunction) */
 557:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     }
 558:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 
 559:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 
 560:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     /*******************************************************************************
 561:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     * Function Name: PWM_MOTOR_TILT_WriteCompare2
 562:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     ********************************************************************************
 563:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     * 
 564:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     * Summary:
 565:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *  This funtion is used to change the compare value, for compare1 output.  
 566:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *  The compare output will reflect the new value on the next UDB clock.  
 567:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *  The compare output will be driven high when the present counter value is 
 568:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *  less than or less than or equal to the compare register, depending on the 
 569:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *  mode.
 570:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *
 571:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     * Parameters:  
 572:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *  compare:  New compare value.  
 573:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *
 574:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     * Return: 
 575:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *  None
 576:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *
 577:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *******************************************************************************/
 578:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     void PWM_MOTOR_TILT_WriteCompare2(uint16 compare) \
 579:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****                                         
 580:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     {
 581:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         #if(PWM_MOTOR_TILT_UsingFixedFunction)
 582:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****             CY_SET_REG16(PWM_MOTOR_TILT_COMPARE2_LSB_PTR, compare);
 583:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         #else
 584:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****             CY_SET_REG16(PWM_MOTOR_TILT_COMPARE2_LSB_PTR, compare);
 585:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         #endif /* (PWM_MOTOR_TILT_UsingFixedFunction) */
 586:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     }
 587:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** #endif /* UseOneCompareMode */
 588:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 
 589:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** #if (PWM_MOTOR_TILT_DeadBandUsed)
 590:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 
ARM GAS  C:\Users\Graziano\AppData\Local\Temp\ccxs7yXP.s 			page 14


 591:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 
 592:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     /*******************************************************************************
 593:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     * Function Name: PWM_MOTOR_TILT_WriteDeadTime
 594:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     ********************************************************************************
 595:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     * 
 596:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     * Summary:
 597:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *  This function writes the dead-band counts to the corresponding register
 598:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *
 599:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     * Parameters:  
 600:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *  deadtime:  Number of counts for dead time 
 601:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *
 602:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     * Return: 
 603:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *  None
 604:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *
 605:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *******************************************************************************/
 606:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     void PWM_MOTOR_TILT_WriteDeadTime(uint8 deadtime) 
 607:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     {
 151              		.loc 1 607 0
 152              		.cfi_startproc
 153              		@ args = 0, pretend = 0, frame = 0
 154              		@ frame_needed = 0, uses_anonymous_args = 0
 155              		@ link register save eliminated.
 156              	.LVL2:
 608:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 609:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         #if(!PWM_MOTOR_TILT_DeadBand2_4)
 610:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****             CY_SET_REG8(PWM_MOTOR_TILT_DEADBAND_COUNT_PTR, deadtime);
 611:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         #else
 612:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****             /* Otherwise the data has to be masked and offset */        
 613:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****             /* Clear existing data */
 614:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****             PWM_MOTOR_TILT_DEADBAND_COUNT &= ((uint8)(~PWM_MOTOR_TILT_DEADBAND_COUNT_MASK));
 157              		.loc 1 614 0
 158 0000 054B     		ldr	r3, .L14
 159 0002 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 160 0004 02F03F01 		and	r1, r2, #63
 161 0008 1970     		strb	r1, [r3, #0]
 615:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****             
 616:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****             /* Set new dead time */
 617:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****             #if(PWM_MOTOR_TILT_DEADBAND_COUNT_SHIFT)        
 618:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****                 PWM_MOTOR_TILT_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << PWM_MOTOR_TILT_DEADBAN
 162              		.loc 1 618 0
 163 000a 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 164 000c 42EA8010 		orr	r0, r2, r0, lsl #6
 165              	.LVL3:
 166 0010 C1B2     		uxtb	r1, r0
 167 0012 1970     		strb	r1, [r3, #0]
 168 0014 7047     		bx	lr
 169              	.L15:
 170 0016 00BF     		.align	2
 171              	.L14:
 172 0018 184F0040 		.word	1073762072
 173              		.cfi_endproc
 174              	.LFE6:
 175              		.size	PWM_MOTOR_TILT_WriteDeadTime, .-PWM_MOTOR_TILT_WriteDeadTime
 176              		.section	.text.PWM_MOTOR_TILT_Init,"ax",%progbits
 177              		.align	1
 178              		.global	PWM_MOTOR_TILT_Init
 179              		.thumb
ARM GAS  C:\Users\Graziano\AppData\Local\Temp\ccxs7yXP.s 			page 15


 180              		.thumb_func
 181              		.type	PWM_MOTOR_TILT_Init, %function
 182              	PWM_MOTOR_TILT_Init:
 183              	.LFB1:
  80:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** {
 184              		.loc 1 80 0
 185              		.cfi_startproc
 186              		@ args = 0, pretend = 0, frame = 0
 187              		@ frame_needed = 0, uses_anonymous_args = 0
 188 0000 08B5     		push	{r3, lr}
 189              	.LCFI0:
 190              		.cfi_def_cfa_offset 8
 191              		.cfi_offset 3, -8
 192              		.cfi_offset 14, -4
  94:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         PWM_MOTOR_TILT_CONTROL |= PWM_MOTOR_TILT_CFG0_MODE;
 193              		.loc 1 94 0
 194 0002 1B4B     		ldr	r3, .L17
 195 0004 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 196 0006 42F00200 		orr	r0, r2, #2
 197 000a 1870     		strb	r0, [r3, #0]
  96:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****             PWM_MOTOR_TILT_CONTROL |= PWM_MOTOR_TILT_CFG0_DB;
 198              		.loc 1 96 0
 199 000c 1978     		ldrb	r1, [r3, #0]	@ zero_extendqisi2
 200 000e 41F02002 		orr	r2, r1, #32
 201 0012 1A70     		strb	r2, [r3, #0]
  99:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         ctrl = PWM_MOTOR_TILT_CONTROL3 & ((uint8 )(~PWM_MOTOR_TILT_CTRL_CMPMODE1_MASK));
 202              		.loc 1 99 0
 203 0014 9878     		ldrb	r0, [r3, #2]	@ zero_extendqisi2
 204              	.LVL4:
 205 0016 00F08F01 		and	r1, r0, #143
 100:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         PWM_MOTOR_TILT_CONTROL3 = ctrl | PWM_MOTOR_TILT_DEFAULT_COMPARE1_MODE;
 206              		.loc 1 100 0
 207 001a 41F01002 		orr	r2, r1, #16
 208 001e 9A70     		strb	r2, [r3, #2]
 103:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         PWM_MOTOR_TILT_RT1 &= ((uint8)(~PWM_MOTOR_TILT_RT1_MASK));
 209              		.loc 1 103 0
 210 0020 D87A     		ldrb	r0, [r3, #11]	@ zero_extendqisi2
 211              	.LVL5:
 212 0022 00F0CF01 		and	r1, r0, #207
 213 0026 D972     		strb	r1, [r3, #11]
 104:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         PWM_MOTOR_TILT_RT1 |= PWM_MOTOR_TILT_SYNC;     
 214              		.loc 1 104 0
 215 0028 DA7A     		ldrb	r2, [r3, #11]	@ zero_extendqisi2
 216 002a 42F03000 		orr	r0, r2, #48
 217 002e D872     		strb	r0, [r3, #11]
 107:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         PWM_MOTOR_TILT_RT1 &= ((uint8)(~PWM_MOTOR_TILT_SYNCDSI_MASK));
 218              		.loc 1 107 0
 219 0030 D97A     		ldrb	r1, [r3, #11]	@ zero_extendqisi2
 220 0032 01F0F002 		and	r2, r1, #240
 221 0036 DA72     		strb	r2, [r3, #11]
 108:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         PWM_MOTOR_TILT_RT1 |= PWM_MOTOR_TILT_SYNCDSI_EN;
 222              		.loc 1 108 0
 223 0038 D87A     		ldrb	r0, [r3, #11]	@ zero_extendqisi2
 224              	.LBB8:
 225              	.LBB9:
 479:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         CY_SET_REG16(PWM_MOTOR_TILT_PERIOD_LSB_PTR, (uint16)period);
 226              		.loc 1 479 0
ARM GAS  C:\Users\Graziano\AppData\Local\Temp\ccxs7yXP.s 			page 16


 227 003a 4FF40062 		mov	r2, #2048
 228              	.LBE9:
 229              	.LBE8:
 108:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         PWM_MOTOR_TILT_RT1 |= PWM_MOTOR_TILT_SYNCDSI_EN;
 230              		.loc 1 108 0
 231 003e 40F00F01 		orr	r1, r0, #15
 232              	.LBB11:
 233              	.LBB12:
 514:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 			CY_SET_REG16(PWM_MOTOR_TILT_COMPARE1_LSB_PTR, (uint16)compare);
 234              		.loc 1 514 0
 235 0042 A2F50970 		sub	r0, r2, #548
 236              	.LBE12:
 237              	.LBE11:
 108:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         PWM_MOTOR_TILT_RT1 |= PWM_MOTOR_TILT_SYNCDSI_EN;
 238              		.loc 1 108 0
 239 0046 D972     		strb	r1, [r3, #11]
 240              	.LVL6:
 241              	.LBB14:
 242              	.LBB10:
 479:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         CY_SET_REG16(PWM_MOTOR_TILT_PERIOD_LSB_PTR, (uint16)period);
 243              		.loc 1 479 0
 244 0048 9A80     		strh	r2, [r3, #4]	@ movhi
 245              	.LVL7:
 246              	.LBE10:
 247              	.LBE14:
 248              	.LBB15:
 249              	.LBB13:
 514:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 			CY_SET_REG16(PWM_MOTOR_TILT_COMPARE1_LSB_PTR, (uint16)compare);
 250              		.loc 1 514 0
 251 004a D880     		strh	r0, [r3, #6]	@ movhi
 252              	.LBE13:
 253              	.LBE15:
 144:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****             PWM_MOTOR_TILT_WriteDeadTime(PWM_MOTOR_TILT_INIT_DEAD_TIME);
 254              		.loc 1 144 0
 255 004c 0320     		movs	r0, #3
 256 004e FFF7FEFF 		bl	PWM_MOTOR_TILT_WriteDeadTime
 257              	.LVL8:
 258              	.LBB16:
 259              	.LBB17:
 619:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****                                                     PWM_MOTOR_TILT_DEADBAND_COUNT_MASK;
 620:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****             #else
 621:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****                 PWM_MOTOR_TILT_DEADBAND_COUNT |= deadtime & PWM_MOTOR_TILT_DEADBAND_COUNT_MASK;    
 622:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****             #endif /* (PWM_MOTOR_TILT_DEADBAND_COUNT_SHIFT) */
 623:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         
 624:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         #endif /* (!PWM_MOTOR_TILT_DeadBand2_4) */
 625:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     }
 626:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 
 627:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 
 628:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     /*******************************************************************************
 629:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     * Function Name: PWM_MOTOR_TILT_ReadDeadTime
 630:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     ********************************************************************************
 631:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     * 
 632:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     * Summary:
 633:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *  This function reads the dead-band counts from the corresponding register
 634:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *
 635:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     * Parameters:  
 636:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *  None
ARM GAS  C:\Users\Graziano\AppData\Local\Temp\ccxs7yXP.s 			page 17


 637:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *
 638:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     * Return: 
 639:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *  Dead Band Counts
 640:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *
 641:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *******************************************************************************/
 642:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     uint8 PWM_MOTOR_TILT_ReadDeadTime(void) 
 643:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     {
 644:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 645:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         #if(!PWM_MOTOR_TILT_DeadBand2_4)
 646:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****             return (CY_GET_REG8(PWM_MOTOR_TILT_DEADBAND_COUNT_PTR));
 647:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         #else
 648:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         
 649:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****             /* Otherwise the data has to be masked and offset */
 650:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****             #if(PWM_MOTOR_TILT_DEADBAND_COUNT_SHIFT)      
 651:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****                 return ((uint8)(((uint8)(PWM_MOTOR_TILT_DEADBAND_COUNT & PWM_MOTOR_TILT_DEADBAND_CO
 652:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****                                                                            PWM_MOTOR_TILT_DEADBAND_
 653:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****             #else
 654:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****                 return (PWM_MOTOR_TILT_DEADBAND_COUNT & PWM_MOTOR_TILT_DEADBAND_COUNT_MASK);
 655:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****             #endif /* (PWM_MOTOR_TILT_DEADBAND_COUNT_SHIFT) */
 656:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         #endif /* (!PWM_MOTOR_TILT_DeadBand2_4) */
 657:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     }
 658:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** #endif /* DeadBandUsed */
 659:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 
 660:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** #if (PWM_MOTOR_TILT_UseStatus || PWM_MOTOR_TILT_UsingFixedFunction)
 661:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 
 662:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 
 663:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     /*******************************************************************************
 664:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     * Function Name: PWM_MOTOR_TILT_SetInterruptMode
 665:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     ********************************************************************************
 666:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     * 
 667:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     * Summary:
 668:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *  This function configures the interrupts mask control of theinterrupt 
 669:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *  source status register.
 670:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *
 671:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     * Parameters:  
 672:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled 
 673:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *
 674:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     * Return: 
 675:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *  None
 676:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *
 677:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *******************************************************************************/
 678:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     void PWM_MOTOR_TILT_SetInterruptMode(uint8 interruptMode)  
 679:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     {
 680:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     	CY_SET_REG8(PWM_MOTOR_TILT_STATUS_MASK_PTR, interruptMode);
 260              		.loc 1 680 0
 261 0052 084B     		ldr	r3, .L17+4
 262              	.LBE17:
 263              	.LBE16:
 153:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         PWM_MOTOR_TILT_GLOBAL_ENABLE |= PWM_MOTOR_TILT_BLOCK_EN_MASK;
 264              		.loc 1 153 0
 265 0054 0848     		ldr	r0, .L17+8
 266              	.LBB19:
 267              	.LBB18:
 268              		.loc 1 680 0
 269 0056 0021     		movs	r1, #0
 270 0058 1970     		strb	r1, [r3, #0]
 271              	.LBE18:
ARM GAS  C:\Users\Graziano\AppData\Local\Temp\ccxs7yXP.s 			page 18


 272              	.LBE19:
 153:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         PWM_MOTOR_TILT_GLOBAL_ENABLE |= PWM_MOTOR_TILT_BLOCK_EN_MASK;
 273              		.loc 1 153 0
 274 005a 0278     		ldrb	r2, [r0, #0]	@ zero_extendqisi2
 155:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         PWM_MOTOR_TILT_CONTROL2 |= PWM_MOTOR_TILT_CTRL2_IRQ_SEL;
 275              		.loc 1 155 0
 276 005c 074B     		ldr	r3, .L17+12
 153:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         PWM_MOTOR_TILT_GLOBAL_ENABLE |= PWM_MOTOR_TILT_BLOCK_EN_MASK;
 277              		.loc 1 153 0
 278 005e 42F00401 		orr	r1, r2, #4
 279 0062 0170     		strb	r1, [r0, #0]
 155:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         PWM_MOTOR_TILT_CONTROL2 |= PWM_MOTOR_TILT_CTRL2_IRQ_SEL;
 280              		.loc 1 155 0
 281 0064 1878     		ldrb	r0, [r3, #0]	@ zero_extendqisi2
 282 0066 40F00102 		orr	r2, r0, #1
 283 006a 1A70     		strb	r2, [r3, #0]
 284 006c 08BD     		pop	{r3, pc}
 285              	.L18:
 286 006e 00BF     		.align	2
 287              	.L17:
 288 0070 184F0040 		.word	1073762072
 289 0074 1B4F0040 		.word	1073762075
 290 0078 A3430040 		.word	1073759139
 291 007c 194F0040 		.word	1073762073
 292              		.cfi_endproc
 293              	.LFE1:
 294              		.size	PWM_MOTOR_TILT_Init, .-PWM_MOTOR_TILT_Init
 295              		.section	.text.PWM_MOTOR_TILT_Start,"ax",%progbits
 296              		.align	1
 297              		.global	PWM_MOTOR_TILT_Start
 298              		.thumb
 299              		.thumb_func
 300              		.type	PWM_MOTOR_TILT_Start, %function
 301              	PWM_MOTOR_TILT_Start:
 302              	.LFB0:
  51:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** {
 303              		.loc 1 51 0
 304              		.cfi_startproc
 305              		@ args = 0, pretend = 0, frame = 0
 306              		@ frame_needed = 0, uses_anonymous_args = 0
 307 0000 10B5     		push	{r4, lr}
 308              	.LCFI1:
 309              		.cfi_def_cfa_offset 8
 310              		.cfi_offset 4, -8
 311              		.cfi_offset 14, -4
  53:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     if(PWM_MOTOR_TILT_initVar == 0u)
 312              		.loc 1 53 0
 313 0002 054C     		ldr	r4, .L22
 314 0004 2378     		ldrb	r3, [r4, #0]	@ zero_extendqisi2
 315 0006 1BB9     		cbnz	r3, .L20
  55:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         PWM_MOTOR_TILT_Init();
 316              		.loc 1 55 0
 317 0008 FFF7FEFF 		bl	PWM_MOTOR_TILT_Init
 318              	.LVL9:
  56:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         PWM_MOTOR_TILT_initVar = 1u;
 319              		.loc 1 56 0
 320 000c 0120     		movs	r0, #1
ARM GAS  C:\Users\Graziano\AppData\Local\Temp\ccxs7yXP.s 			page 19


 321 000e 2070     		strb	r0, [r4, #0]
 322              	.L20:
  60:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** }
 323              		.loc 1 60 0
 324 0010 BDE81040 		pop	{r4, lr}
  58:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     PWM_MOTOR_TILT_Enable();
 325              		.loc 1 58 0
 326 0014 FFF7FEBF 		b	PWM_MOTOR_TILT_Enable
 327              	.LVL10:
 328              	.L23:
 329              		.align	2
 330              	.L22:
 331 0018 00000000 		.word	.LANCHOR0
 332              		.cfi_endproc
 333              	.LFE0:
 334              		.size	PWM_MOTOR_TILT_Start, .-PWM_MOTOR_TILT_Start
 335              		.section	.text.PWM_MOTOR_TILT_ReadDeadTime,"ax",%progbits
 336              		.align	1
 337              		.global	PWM_MOTOR_TILT_ReadDeadTime
 338              		.thumb
 339              		.thumb_func
 340              		.type	PWM_MOTOR_TILT_ReadDeadTime, %function
 341              	PWM_MOTOR_TILT_ReadDeadTime:
 342              	.LFB7:
 643:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     {
 343              		.loc 1 643 0
 344              		.cfi_startproc
 345              		@ args = 0, pretend = 0, frame = 0
 346              		@ frame_needed = 0, uses_anonymous_args = 0
 347              		@ link register save eliminated.
 651:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****                 return ((uint8)(((uint8)(PWM_MOTOR_TILT_DEADBAND_COUNT & PWM_MOTOR_TILT_DEADBAND_CO
 348              		.loc 1 651 0
 349 0000 014B     		ldr	r3, .L25
 350 0002 1878     		ldrb	r0, [r3, #0]	@ zero_extendqisi2
 657:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     }
 351              		.loc 1 657 0
 352 0004 8009     		lsrs	r0, r0, #6
 353 0006 7047     		bx	lr
 354              	.L26:
 355              		.align	2
 356              	.L25:
 357 0008 184F0040 		.word	1073762072
 358              		.cfi_endproc
 359              	.LFE7:
 360              		.size	PWM_MOTOR_TILT_ReadDeadTime, .-PWM_MOTOR_TILT_ReadDeadTime
 361              		.section	.text.PWM_MOTOR_TILT_SetInterruptMode,"ax",%progbits
 362              		.align	1
 363              		.global	PWM_MOTOR_TILT_SetInterruptMode
 364              		.thumb
 365              		.thumb_func
 366              		.type	PWM_MOTOR_TILT_SetInterruptMode, %function
 367              	PWM_MOTOR_TILT_SetInterruptMode:
 368              	.LFB8:
 679:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     {
 369              		.loc 1 679 0
 370              		.cfi_startproc
 371              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Graziano\AppData\Local\Temp\ccxs7yXP.s 			page 20


 372              		@ frame_needed = 0, uses_anonymous_args = 0
 373              		@ link register save eliminated.
 374              	.LVL11:
 375              		.loc 1 680 0
 376 0000 014B     		ldr	r3, .L28
 377 0002 1870     		strb	r0, [r3, #0]
 378 0004 7047     		bx	lr
 379              	.L29:
 380 0006 00BF     		.align	2
 381              	.L28:
 382 0008 1B4F0040 		.word	1073762075
 383              		.cfi_endproc
 384              	.LFE8:
 385              		.size	PWM_MOTOR_TILT_SetInterruptMode, .-PWM_MOTOR_TILT_SetInterruptMode
 386              		.section	.text.PWM_MOTOR_TILT_ReadStatusRegister,"ax",%progbits
 387              		.align	1
 388              		.global	PWM_MOTOR_TILT_ReadStatusRegister
 389              		.thumb
 390              		.thumb_func
 391              		.type	PWM_MOTOR_TILT_ReadStatusRegister, %function
 392              	PWM_MOTOR_TILT_ReadStatusRegister:
 393              	.LFB9:
 681:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     }
 682:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 
 683:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 
 684:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     /*******************************************************************************
 685:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     * Function Name: PWM_MOTOR_TILT_ReadStatusRegister
 686:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     ********************************************************************************
 687:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     * 
 688:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     * Summary:
 689:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *  This function returns the current state of the status register. 
 690:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *
 691:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     * Parameters:  
 692:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *  None
 693:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *
 694:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     * Return: 
 695:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *  uint8 : Current status register value. The status register bits are:
 696:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *  [7:6] : Unused(0)
 697:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *  [5]   : Kill event output
 698:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *  [4]   : FIFO not empty
 699:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *  [3]   : FIFO full
 700:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *  [2]   : Terminal count
 701:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *  [1]   : Compare output 2
 702:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *  [0]   : Compare output 1
 703:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *
 704:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *******************************************************************************/
 705:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     uint8 PWM_MOTOR_TILT_ReadStatusRegister(void)   
 706:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     {
 394              		.loc 1 706 0
 395              		.cfi_startproc
 396              		@ args = 0, pretend = 0, frame = 0
 397              		@ frame_needed = 0, uses_anonymous_args = 0
 398              		@ link register save eliminated.
 707:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     	uint8 result;
 708:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     	
 709:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     	result = CY_GET_REG8(PWM_MOTOR_TILT_STATUS_PTR);
 399              		.loc 1 709 0
ARM GAS  C:\Users\Graziano\AppData\Local\Temp\ccxs7yXP.s 			page 21


 400 0000 014B     		ldr	r3, .L31
 401 0002 1878     		ldrb	r0, [r3, #0]	@ zero_extendqisi2
 402              	.LVL12:
 710:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     	return (result);
 711:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     }
 403              		.loc 1 711 0
 404 0004 7047     		bx	lr
 405              	.L32:
 406 0006 00BF     		.align	2
 407              	.L31:
 408 0008 1B4F0040 		.word	1073762075
 409              		.cfi_endproc
 410              	.LFE9:
 411              		.size	PWM_MOTOR_TILT_ReadStatusRegister, .-PWM_MOTOR_TILT_ReadStatusRegister
 412              		.section	.text.PWM_MOTOR_TILT_ReadControlRegister,"ax",%progbits
 413              		.align	1
 414              		.global	PWM_MOTOR_TILT_ReadControlRegister
 415              		.thumb
 416              		.thumb_func
 417              		.type	PWM_MOTOR_TILT_ReadControlRegister, %function
 418              	PWM_MOTOR_TILT_ReadControlRegister:
 419              	.LFB10:
 712:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 
 713:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** #endif /* (PWM_MOTOR_TILT_UseStatus || PWM_MOTOR_TILT_UsingFixedFunction) */
 714:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 
 715:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 
 716:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** #if (PWM_MOTOR_TILT_UseControl)
 717:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 
 718:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 
 719:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     /*******************************************************************************
 720:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     * Function Name: PWM_MOTOR_TILT_ReadControlRegister
 721:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     ********************************************************************************
 722:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     * 
 723:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     * Summary:
 724:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *  Returns the current state of the control register. This API is available 
 725:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *  only if the control register is not removed.
 726:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *
 727:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     * Parameters:  
 728:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *  None 
 729:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *
 730:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     * Return: 
 731:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *  uint8 : Current control register value
 732:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *
 733:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *******************************************************************************/    
 734:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     uint8 PWM_MOTOR_TILT_ReadControlRegister(void) 
 735:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     {
 420              		.loc 1 735 0
 421              		.cfi_startproc
 422              		@ args = 0, pretend = 0, frame = 0
 423              		@ frame_needed = 0, uses_anonymous_args = 0
 424              		@ link register save eliminated.
 736:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     	uint8 result;
 737:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     	
 738:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     	result = CY_GET_REG8(PWM_MOTOR_TILT_CONTROL_PTR);
 425              		.loc 1 738 0
 426 0000 014B     		ldr	r3, .L34
 427 0002 1878     		ldrb	r0, [r3, #0]	@ zero_extendqisi2
ARM GAS  C:\Users\Graziano\AppData\Local\Temp\ccxs7yXP.s 			page 22


 428              	.LVL13:
 739:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     	return (result);
 740:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     }
 429              		.loc 1 740 0
 430 0004 7047     		bx	lr
 431              	.L35:
 432 0006 00BF     		.align	2
 433              	.L34:
 434 0008 184F0040 		.word	1073762072
 435              		.cfi_endproc
 436              	.LFE10:
 437              		.size	PWM_MOTOR_TILT_ReadControlRegister, .-PWM_MOTOR_TILT_ReadControlRegister
 438              		.section	.text.PWM_MOTOR_TILT_WriteControlRegister,"ax",%progbits
 439              		.align	1
 440              		.global	PWM_MOTOR_TILT_WriteControlRegister
 441              		.thumb
 442              		.thumb_func
 443              		.type	PWM_MOTOR_TILT_WriteControlRegister, %function
 444              	PWM_MOTOR_TILT_WriteControlRegister:
 445              	.LFB11:
 741:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 
 742:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 
 743:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     /*******************************************************************************
 744:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     * Function Name: PWM_MOTOR_TILT_WriteControlRegister
 745:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     ********************************************************************************
 746:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     * 
 747:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     * Summary:
 748:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *  Sets the bit field of the control register. This API is available only if 
 749:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *  the control register is not removed.
 750:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *
 751:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     * Parameters:  
 752:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *  uint8 control: Control register bit field, The status register bits are:
 753:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *  [7]   : PWM Enable
 754:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *  [6]   : Reset
 755:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *  [5:3] : Compare Mode2
 756:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *  [2:0] : Compare Mode2
 757:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *
 758:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     * Return: 
 759:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *  None
 760:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *
 761:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *******************************************************************************/  
 762:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     void PWM_MOTOR_TILT_WriteControlRegister(uint8 control) 
 763:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     {
 446              		.loc 1 763 0
 447              		.cfi_startproc
 448              		@ args = 0, pretend = 0, frame = 0
 449              		@ frame_needed = 0, uses_anonymous_args = 0
 450              		@ link register save eliminated.
 451              	.LVL14:
 764:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     	CY_SET_REG8(PWM_MOTOR_TILT_CONTROL_PTR, control);
 452              		.loc 1 764 0
 453 0000 014B     		ldr	r3, .L37
 454 0002 1870     		strb	r0, [r3, #0]
 455 0004 7047     		bx	lr
 456              	.L38:
 457 0006 00BF     		.align	2
 458              	.L37:
ARM GAS  C:\Users\Graziano\AppData\Local\Temp\ccxs7yXP.s 			page 23


 459 0008 184F0040 		.word	1073762072
 460              		.cfi_endproc
 461              	.LFE11:
 462              		.size	PWM_MOTOR_TILT_WriteControlRegister, .-PWM_MOTOR_TILT_WriteControlRegister
 463              		.section	.text.PWM_MOTOR_TILT_ReadCompare,"ax",%progbits
 464              		.align	1
 465              		.global	PWM_MOTOR_TILT_ReadCompare
 466              		.thumb
 467              		.thumb_func
 468              		.type	PWM_MOTOR_TILT_ReadCompare, %function
 469              	PWM_MOTOR_TILT_ReadCompare:
 470              	.LFB12:
 765:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     }
 766:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 	
 767:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** #endif /* (PWM_MOTOR_TILT_UseControl) */
 768:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 
 769:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 
 770:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** #if (!PWM_MOTOR_TILT_UsingFixedFunction)
 771:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 
 772:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 
 773:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     /*******************************************************************************
 774:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     * Function Name: PWM_MOTOR_TILT_ReadCapture
 775:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     ********************************************************************************
 776:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     * 
 777:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     * Summary:
 778:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *  Reads the capture value from the capture FIFO.
 779:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *
 780:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     * Parameters:  
 781:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *  None
 782:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *
 783:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     * Return: 
 784:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *  uint8/uint16: The current capture value
 785:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *
 786:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *******************************************************************************/  
 787:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     uint16 PWM_MOTOR_TILT_ReadCapture(void)  
 788:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     {
 789:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     	return (CY_GET_REG16(PWM_MOTOR_TILT_CAPTURE_LSB_PTR));
 790:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     }
 791:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 	
 792:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** #endif /* (!PWM_MOTOR_TILT_UsingFixedFunction) */
 793:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 
 794:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 
 795:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** #if (PWM_MOTOR_TILT_UseOneCompareMode)
 796:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 
 797:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 
 798:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     /*******************************************************************************
 799:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     * Function Name: PWM_MOTOR_TILT_ReadCompare
 800:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     ********************************************************************************
 801:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     * 
 802:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     * Summary:
 803:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is 
 804:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 805:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *
 806:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     * Parameters:  
 807:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *  None
 808:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *
 809:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     * Return: 
ARM GAS  C:\Users\Graziano\AppData\Local\Temp\ccxs7yXP.s 			page 24


 810:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *  uint8/uint16: Current compare value
 811:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *
 812:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *******************************************************************************/  
 813:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     uint16 PWM_MOTOR_TILT_ReadCompare(void)  
 814:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     {
 471              		.loc 1 814 0
 472              		.cfi_startproc
 473              		@ args = 0, pretend = 0, frame = 0
 474              		@ frame_needed = 0, uses_anonymous_args = 0
 475              		@ link register save eliminated.
 815:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 		#if(PWM_MOTOR_TILT_UsingFixedFunction)
 816:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****             return ((uint16)CY_GET_REG16(PWM_MOTOR_TILT_COMPARE1_LSB_PTR));
 476              		.loc 1 816 0
 477 0000 014B     		ldr	r3, .L40
 478 0002 1888     		ldrh	r0, [r3, #0]
 817:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         #else
 818:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****             return (CY_GET_REG16(PWM_MOTOR_TILT_COMPARE1_LSB_PTR));
 819:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         #endif /* (PWM_MOTOR_TILT_UsingFixedFunction) */
 820:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     }
 479              		.loc 1 820 0
 480 0004 80B2     		uxth	r0, r0
 481 0006 7047     		bx	lr
 482              	.L41:
 483              		.align	2
 484              	.L40:
 485 0008 1E4F0040 		.word	1073762078
 486              		.cfi_endproc
 487              	.LFE12:
 488              		.size	PWM_MOTOR_TILT_ReadCompare, .-PWM_MOTOR_TILT_ReadCompare
 489              		.section	.text.PWM_MOTOR_TILT_ReadPeriod,"ax",%progbits
 490              		.align	1
 491              		.global	PWM_MOTOR_TILT_ReadPeriod
 492              		.thumb
 493              		.thumb_func
 494              		.type	PWM_MOTOR_TILT_ReadPeriod, %function
 495              	PWM_MOTOR_TILT_ReadPeriod:
 496              	.LFB13:
 821:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 
 822:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** #else
 823:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 
 824:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 
 825:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     /*******************************************************************************
 826:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     * Function Name: PWM_MOTOR_TILT_ReadCompare1
 827:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     ********************************************************************************
 828:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     * 
 829:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     * Summary:
 830:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *  Reads the compare value for the compare1 output.
 831:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *
 832:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     * Parameters:  
 833:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *  None
 834:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *
 835:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     * Return: 
 836:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *  uint8/uint16: Current compare value.
 837:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *
 838:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *******************************************************************************/  
 839:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     uint16 PWM_MOTOR_TILT_ReadCompare1(void) 
 840:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     {
ARM GAS  C:\Users\Graziano\AppData\Local\Temp\ccxs7yXP.s 			page 25


 841:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 		return (CY_GET_REG16(PWM_MOTOR_TILT_COMPARE1_LSB_PTR));
 842:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     }
 843:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 
 844:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 
 845:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     /*******************************************************************************
 846:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     * Function Name: PWM_MOTOR_TILT_ReadCompare2
 847:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     ********************************************************************************
 848:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     * 
 849:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     * Summary:
 850:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *  Reads the compare value for the compare2 output.
 851:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *
 852:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     * Parameters:  
 853:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *  None
 854:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *
 855:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     * Return: 
 856:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *  uint8/uint16: Current compare value.
 857:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *
 858:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     *******************************************************************************/  
 859:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     uint16 PWM_MOTOR_TILT_ReadCompare2(void)  
 860:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     {
 861:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 		return (CY_GET_REG16(PWM_MOTOR_TILT_COMPARE2_LSB_PTR));
 862:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     }
 863:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 
 864:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** #endif /* (PWM_MOTOR_TILT_UseOneCompareMode) */
 865:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 
 866:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 
 867:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** /*******************************************************************************
 868:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** * Function Name: PWM_MOTOR_TILT_ReadPeriod
 869:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** ********************************************************************************
 870:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** * 
 871:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** * Summary:
 872:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** *  Reads the period value used by the PWM hardware.
 873:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** *
 874:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** * Parameters:  
 875:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** *  None
 876:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** *
 877:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** * Return: 
 878:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** *  uint8/16: Period value
 879:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** *
 880:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** *******************************************************************************/ 
 881:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** uint16 PWM_MOTOR_TILT_ReadPeriod(void) 
 882:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** {
 497              		.loc 1 882 0
 498              		.cfi_startproc
 499              		@ args = 0, pretend = 0, frame = 0
 500              		@ frame_needed = 0, uses_anonymous_args = 0
 501              		@ link register save eliminated.
 883:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** 	#if(PWM_MOTOR_TILT_UsingFixedFunction)
 884:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         return ((uint16)CY_GET_REG16(PWM_MOTOR_TILT_PERIOD_LSB_PTR));
 502              		.loc 1 884 0
 503 0000 014B     		ldr	r3, .L43
 504 0002 1888     		ldrh	r0, [r3, #0]
 885:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     #else
 886:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****         return (CY_GET_REG16(PWM_MOTOR_TILT_PERIOD_LSB_PTR));
 887:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c ****     #endif /* (PWM_MOTOR_TILT_UsingFixedFunction) */
 888:.\Generated_Source\PSoC5/PWM_MOTOR_TILT.c **** }
 505              		.loc 1 888 0
ARM GAS  C:\Users\Graziano\AppData\Local\Temp\ccxs7yXP.s 			page 26


 506 0004 80B2     		uxth	r0, r0
 507 0006 7047     		bx	lr
 508              	.L44:
 509              		.align	2
 510              	.L43:
 511 0008 1C4F0040 		.word	1073762076
 512              		.cfi_endproc
 513              	.LFE13:
 514              		.size	PWM_MOTOR_TILT_ReadPeriod, .-PWM_MOTOR_TILT_ReadPeriod
 515              		.global	PWM_MOTOR_TILT_initVar
 516              		.bss
 517              		.set	.LANCHOR0,. + 0
 518              		.type	PWM_MOTOR_TILT_initVar, %object
 519              		.size	PWM_MOTOR_TILT_initVar, 1
 520              	PWM_MOTOR_TILT_initVar:
 521 0000 00       		.space	1
 522              		.text
 523              	.Letext0:
 524              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 525              		.section	.debug_info,"",%progbits
 526              	.Ldebug_info0:
 527 0000 58030000 		.4byte	0x358
 528 0004 0200     		.2byte	0x2
 529 0006 00000000 		.4byte	.Ldebug_abbrev0
 530 000a 04       		.byte	0x4
 531 000b 01       		.uleb128 0x1
 532 000c E2020000 		.4byte	.LASF38
 533 0010 01       		.byte	0x1
 534 0011 87010000 		.4byte	.LASF39
 535 0015 B7000000 		.4byte	.LASF40
 536 0019 48000000 		.4byte	.Ldebug_ranges0+0x48
 537 001d 00000000 		.4byte	0
 538 0021 00000000 		.4byte	0
 539 0025 00000000 		.4byte	.Ldebug_line0
 540 0029 02       		.uleb128 0x2
 541 002a 01       		.byte	0x1
 542 002b 06       		.byte	0x6
 543 002c 4D030000 		.4byte	.LASF0
 544 0030 02       		.uleb128 0x2
 545 0031 01       		.byte	0x1
 546 0032 08       		.byte	0x8
 547 0033 72000000 		.4byte	.LASF1
 548 0037 02       		.uleb128 0x2
 549 0038 02       		.byte	0x2
 550 0039 05       		.byte	0x5
 551 003a B5020000 		.4byte	.LASF2
 552 003e 02       		.uleb128 0x2
 553 003f 02       		.byte	0x2
 554 0040 07       		.byte	0x7
 555 0041 28000000 		.4byte	.LASF3
 556 0045 02       		.uleb128 0x2
 557 0046 04       		.byte	0x4
 558 0047 05       		.byte	0x5
 559 0048 3F030000 		.4byte	.LASF4
 560 004c 02       		.uleb128 0x2
 561 004d 04       		.byte	0x4
 562 004e 07       		.byte	0x7
ARM GAS  C:\Users\Graziano\AppData\Local\Temp\ccxs7yXP.s 			page 27


 563 004f A5000000 		.4byte	.LASF5
 564 0053 02       		.uleb128 0x2
 565 0054 08       		.byte	0x8
 566 0055 05       		.byte	0x5
 567 0056 77020000 		.4byte	.LASF6
 568 005a 02       		.uleb128 0x2
 569 005b 08       		.byte	0x8
 570 005c 07       		.byte	0x7
 571 005d E6010000 		.4byte	.LASF7
 572 0061 03       		.uleb128 0x3
 573 0062 04       		.byte	0x4
 574 0063 05       		.byte	0x5
 575 0064 696E7400 		.ascii	"int\000"
 576 0068 02       		.uleb128 0x2
 577 0069 04       		.byte	0x4
 578 006a 07       		.byte	0x7
 579 006b 3B000000 		.4byte	.LASF8
 580 006f 04       		.uleb128 0x4
 581 0070 DC020000 		.4byte	.LASF9
 582 0074 02       		.byte	0x2
 583 0075 5B       		.byte	0x5b
 584 0076 30000000 		.4byte	0x30
 585 007a 04       		.uleb128 0x4
 586 007b 6C010000 		.4byte	.LASF10
 587 007f 02       		.byte	0x2
 588 0080 5C       		.byte	0x5c
 589 0081 3E000000 		.4byte	0x3e
 590 0085 02       		.uleb128 0x2
 591 0086 04       		.byte	0x4
 592 0087 04       		.byte	0x4
 593 0088 48000000 		.4byte	.LASF11
 594 008c 02       		.uleb128 0x2
 595 008d 08       		.byte	0x8
 596 008e 04       		.byte	0x4
 597 008f 2D010000 		.4byte	.LASF12
 598 0093 02       		.uleb128 0x2
 599 0094 01       		.byte	0x1
 600 0095 08       		.byte	0x8
 601 0096 48030000 		.4byte	.LASF13
 602 009a 04       		.uleb128 0x4
 603 009b A0000000 		.4byte	.LASF14
 604 009f 02       		.byte	0x2
 605 00a0 F0       		.byte	0xf0
 606 00a1 A5000000 		.4byte	0xa5
 607 00a5 05       		.uleb128 0x5
 608 00a6 6F000000 		.4byte	0x6f
 609 00aa 04       		.uleb128 0x4
 610 00ab 00000000 		.4byte	.LASF15
 611 00af 02       		.byte	0x2
 612 00b0 F1       		.byte	0xf1
 613 00b1 B5000000 		.4byte	0xb5
 614 00b5 05       		.uleb128 0x5
 615 00b6 7A000000 		.4byte	0x7a
 616 00ba 02       		.uleb128 0x2
 617 00bb 04       		.byte	0x4
 618 00bc 07       		.byte	0x7
 619 00bd 6E020000 		.4byte	.LASF16
ARM GAS  C:\Users\Graziano\AppData\Local\Temp\ccxs7yXP.s 			page 28


 620 00c1 06       		.uleb128 0x6
 621 00c2 01       		.byte	0x1
 622 00c3 06000000 		.4byte	.LASF17
 623 00c7 01       		.byte	0x1
 624 00c8 DC01     		.2byte	0x1dc
 625 00ca 01       		.byte	0x1
 626 00cb 01       		.byte	0x1
 627 00cc DD000000 		.4byte	0xdd
 628 00d0 07       		.uleb128 0x7
 629 00d1 21000000 		.4byte	.LASF19
 630 00d5 01       		.byte	0x1
 631 00d6 DC01     		.2byte	0x1dc
 632 00d8 7A000000 		.4byte	0x7a
 633 00dc 00       		.byte	0
 634 00dd 06       		.uleb128 0x6
 635 00de 01       		.byte	0x1
 636 00df 31020000 		.4byte	.LASF18
 637 00e3 01       		.byte	0x1
 638 00e4 FE01     		.2byte	0x1fe
 639 00e6 01       		.byte	0x1
 640 00e7 01       		.byte	0x1
 641 00e8 F9000000 		.4byte	0xf9
 642 00ec 07       		.uleb128 0x7
 643 00ed 59030000 		.4byte	.LASF20
 644 00f1 01       		.byte	0x1
 645 00f2 FE01     		.2byte	0x1fe
 646 00f4 7A000000 		.4byte	0x7a
 647 00f8 00       		.byte	0
 648 00f9 06       		.uleb128 0x6
 649 00fa 01       		.byte	0x1
 650 00fb 80000000 		.4byte	.LASF21
 651 00ff 01       		.byte	0x1
 652 0100 A602     		.2byte	0x2a6
 653 0102 01       		.byte	0x1
 654 0103 01       		.byte	0x1
 655 0104 15010000 		.4byte	0x115
 656 0108 07       		.uleb128 0x7
 657 0109 85020000 		.4byte	.LASF22
 658 010d 01       		.byte	0x1
 659 010e A602     		.2byte	0x2a6
 660 0110 6F000000 		.4byte	0x6f
 661 0114 00       		.byte	0
 662 0115 08       		.uleb128 0x8
 663 0116 01       		.byte	0x1
 664 0117 14020000 		.4byte	.LASF23
 665 011b 01       		.byte	0x1
 666 011c C1       		.byte	0xc1
 667 011d 01       		.byte	0x1
 668 011e 00000000 		.4byte	.LFB2
 669 0122 28000000 		.4byte	.LFE2
 670 0126 02       		.byte	0x2
 671 0127 7D       		.byte	0x7d
 672 0128 00       		.sleb128 0
 673 0129 01       		.byte	0x1
 674 012a 08       		.uleb128 0x8
 675 012b 01       		.byte	0x1
 676 012c 2B030000 		.4byte	.LASF24
ARM GAS  C:\Users\Graziano\AppData\Local\Temp\ccxs7yXP.s 			page 29


 677 0130 01       		.byte	0x1
 678 0131 E3       		.byte	0xe3
 679 0132 01       		.byte	0x1
 680 0133 00000000 		.4byte	.LFB3
 681 0137 28000000 		.4byte	.LFE3
 682 013b 02       		.byte	0x2
 683 013c 7D       		.byte	0x7d
 684 013d 00       		.sleb128 0
 685 013e 01       		.byte	0x1
 686 013f 09       		.uleb128 0x9
 687 0140 C1000000 		.4byte	0xc1
 688 0144 00000000 		.4byte	.LFB4
 689 0148 0C000000 		.4byte	.LFE4
 690 014c 02       		.byte	0x2
 691 014d 7D       		.byte	0x7d
 692 014e 00       		.sleb128 0
 693 014f 01       		.byte	0x1
 694 0150 5C010000 		.4byte	0x15c
 695 0154 0A       		.uleb128 0xa
 696 0155 D0000000 		.4byte	0xd0
 697 0159 01       		.byte	0x1
 698 015a 50       		.byte	0x50
 699 015b 00       		.byte	0
 700 015c 09       		.uleb128 0x9
 701 015d DD000000 		.4byte	0xdd
 702 0161 00000000 		.4byte	.LFB5
 703 0165 0C000000 		.4byte	.LFE5
 704 0169 02       		.byte	0x2
 705 016a 7D       		.byte	0x7d
 706 016b 00       		.sleb128 0
 707 016c 01       		.byte	0x1
 708 016d 79010000 		.4byte	0x179
 709 0171 0A       		.uleb128 0xa
 710 0172 EC000000 		.4byte	0xec
 711 0176 01       		.byte	0x1
 712 0177 50       		.byte	0x50
 713 0178 00       		.byte	0
 714 0179 0B       		.uleb128 0xb
 715 017a 01       		.byte	0x1
 716 017b BF020000 		.4byte	.LASF25
 717 017f 01       		.byte	0x1
 718 0180 5E02     		.2byte	0x25e
 719 0182 01       		.byte	0x1
 720 0183 00000000 		.4byte	.LFB6
 721 0187 1C000000 		.4byte	.LFE6
 722 018b 02       		.byte	0x2
 723 018c 7D       		.byte	0x7d
 724 018d 00       		.sleb128 0
 725 018e 01       		.byte	0x1
 726 018f A4010000 		.4byte	0x1a4
 727 0193 0C       		.uleb128 0xc
 728 0194 61030000 		.4byte	.LASF33
 729 0198 01       		.byte	0x1
 730 0199 5E02     		.2byte	0x25e
 731 019b 6F000000 		.4byte	0x6f
 732 019f 00000000 		.4byte	.LLST0
 733 01a3 00       		.byte	0
ARM GAS  C:\Users\Graziano\AppData\Local\Temp\ccxs7yXP.s 			page 30


 734 01a4 0D       		.uleb128 0xd
 735 01a5 01       		.byte	0x1
 736 01a6 73010000 		.4byte	.LASF26
 737 01aa 01       		.byte	0x1
 738 01ab 4F       		.byte	0x4f
 739 01ac 01       		.byte	0x1
 740 01ad 00000000 		.4byte	.LFB1
 741 01b1 80000000 		.4byte	.LFE1
 742 01b5 21000000 		.4byte	.LLST1
 743 01b9 01       		.byte	0x1
 744 01ba 2D020000 		.4byte	0x22d
 745 01be 0E       		.uleb128 0xe
 746 01bf 69020000 		.4byte	.LASF28
 747 01c3 01       		.byte	0x1
 748 01c4 52       		.byte	0x52
 749 01c5 6F000000 		.4byte	0x6f
 750 01c9 41000000 		.4byte	.LLST2
 751 01cd 0F       		.uleb128 0xf
 752 01ce C1000000 		.4byte	0xc1
 753 01d2 3A000000 		.4byte	.LBB8
 754 01d6 00000000 		.4byte	.Ldebug_ranges0+0
 755 01da 01       		.byte	0x1
 756 01db 82       		.byte	0x82
 757 01dc E8010000 		.4byte	0x1e8
 758 01e0 10       		.uleb128 0x10
 759 01e1 D0000000 		.4byte	0xd0
 760 01e5 0008     		.2byte	0x800
 761 01e7 00       		.byte	0
 762 01e8 0F       		.uleb128 0xf
 763 01e9 DD000000 		.4byte	0xdd
 764 01ed 42000000 		.4byte	.LBB11
 765 01f1 18000000 		.4byte	.Ldebug_ranges0+0x18
 766 01f5 01       		.byte	0x1
 767 01f6 85       		.byte	0x85
 768 01f7 03020000 		.4byte	0x203
 769 01fb 10       		.uleb128 0x10
 770 01fc EC000000 		.4byte	0xec
 771 0200 DC05     		.2byte	0x5dc
 772 0202 00       		.byte	0
 773 0203 0F       		.uleb128 0xf
 774 0204 F9000000 		.4byte	0xf9
 775 0208 52000000 		.4byte	.LBB16
 776 020c 30000000 		.4byte	.Ldebug_ranges0+0x30
 777 0210 01       		.byte	0x1
 778 0211 94       		.byte	0x94
 779 0212 1D020000 		.4byte	0x21d
 780 0216 11       		.uleb128 0x11
 781 0217 08010000 		.4byte	0x108
 782 021b 00       		.byte	0
 783 021c 00       		.byte	0
 784 021d 12       		.uleb128 0x12
 785 021e 52000000 		.4byte	.LVL8
 786 0222 79010000 		.4byte	0x179
 787 0226 13       		.uleb128 0x13
 788 0227 01       		.byte	0x1
 789 0228 50       		.byte	0x50
 790 0229 01       		.byte	0x1
ARM GAS  C:\Users\Graziano\AppData\Local\Temp\ccxs7yXP.s 			page 31


 791 022a 33       		.byte	0x33
 792 022b 00       		.byte	0
 793 022c 00       		.byte	0
 794 022d 0D       		.uleb128 0xd
 795 022e 01       		.byte	0x1
 796 022f 34010000 		.4byte	.LASF27
 797 0233 01       		.byte	0x1
 798 0234 32       		.byte	0x32
 799 0235 01       		.byte	0x1
 800 0236 00000000 		.4byte	.LFB0
 801 023a 1C000000 		.4byte	.LFE0
 802 023e 59000000 		.4byte	.LLST3
 803 0242 01       		.byte	0x1
 804 0243 5B020000 		.4byte	0x25b
 805 0247 14       		.uleb128 0x14
 806 0248 0C000000 		.4byte	.LVL9
 807 024c A4010000 		.4byte	0x1a4
 808 0250 15       		.uleb128 0x15
 809 0251 18000000 		.4byte	.LVL10
 810 0255 01       		.byte	0x1
 811 0256 15010000 		.4byte	0x115
 812 025a 00       		.byte	0
 813 025b 16       		.uleb128 0x16
 814 025c 01       		.byte	0x1
 815 025d 4D020000 		.4byte	.LASF35
 816 0261 01       		.byte	0x1
 817 0262 8202     		.2byte	0x282
 818 0264 01       		.byte	0x1
 819 0265 6F000000 		.4byte	0x6f
 820 0269 00000000 		.4byte	.LFB7
 821 026d 0C000000 		.4byte	.LFE7
 822 0271 02       		.byte	0x2
 823 0272 7D       		.byte	0x7d
 824 0273 00       		.sleb128 0
 825 0274 01       		.byte	0x1
 826 0275 09       		.uleb128 0x9
 827 0276 F9000000 		.4byte	0xf9
 828 027a 00000000 		.4byte	.LFB8
 829 027e 0C000000 		.4byte	.LFE8
 830 0282 02       		.byte	0x2
 831 0283 7D       		.byte	0x7d
 832 0284 00       		.sleb128 0
 833 0285 01       		.byte	0x1
 834 0286 92020000 		.4byte	0x292
 835 028a 0A       		.uleb128 0xa
 836 028b 08010000 		.4byte	0x108
 837 028f 01       		.byte	0x1
 838 0290 50       		.byte	0x50
 839 0291 00       		.byte	0
 840 0292 17       		.uleb128 0x17
 841 0293 01       		.byte	0x1
 842 0294 93020000 		.4byte	.LASF30
 843 0298 01       		.byte	0x1
 844 0299 C102     		.2byte	0x2c1
 845 029b 01       		.byte	0x1
 846 029c 6F000000 		.4byte	0x6f
 847 02a0 00000000 		.4byte	.LFB9
ARM GAS  C:\Users\Graziano\AppData\Local\Temp\ccxs7yXP.s 			page 32


 848 02a4 0C000000 		.4byte	.LFE9
 849 02a8 02       		.byte	0x2
 850 02a9 7D       		.byte	0x7d
 851 02aa 00       		.sleb128 0
 852 02ab 01       		.byte	0x1
 853 02ac BF020000 		.4byte	0x2bf
 854 02b0 18       		.uleb128 0x18
 855 02b1 2A020000 		.4byte	.LASF29
 856 02b5 01       		.byte	0x1
 857 02b6 C302     		.2byte	0x2c3
 858 02b8 6F000000 		.4byte	0x6f
 859 02bc 01       		.byte	0x1
 860 02bd 50       		.byte	0x50
 861 02be 00       		.byte	0
 862 02bf 17       		.uleb128 0x17
 863 02c0 01       		.byte	0x1
 864 02c1 49010000 		.4byte	.LASF31
 865 02c5 01       		.byte	0x1
 866 02c6 DE02     		.2byte	0x2de
 867 02c8 01       		.byte	0x1
 868 02c9 6F000000 		.4byte	0x6f
 869 02cd 00000000 		.4byte	.LFB10
 870 02d1 0C000000 		.4byte	.LFE10
 871 02d5 02       		.byte	0x2
 872 02d6 7D       		.byte	0x7d
 873 02d7 00       		.sleb128 0
 874 02d8 01       		.byte	0x1
 875 02d9 EC020000 		.4byte	0x2ec
 876 02dd 18       		.uleb128 0x18
 877 02de 2A020000 		.4byte	.LASF29
 878 02e2 01       		.byte	0x1
 879 02e3 E002     		.2byte	0x2e0
 880 02e5 6F000000 		.4byte	0x6f
 881 02e9 01       		.byte	0x1
 882 02ea 50       		.byte	0x50
 883 02eb 00       		.byte	0
 884 02ec 0B       		.uleb128 0xb
 885 02ed 01       		.byte	0x1
 886 02ee 4E000000 		.4byte	.LASF32
 887 02f2 01       		.byte	0x1
 888 02f3 FA02     		.2byte	0x2fa
 889 02f5 01       		.byte	0x1
 890 02f6 00000000 		.4byte	.LFB11
 891 02fa 0C000000 		.4byte	.LFE11
 892 02fe 02       		.byte	0x2
 893 02ff 7D       		.byte	0x7d
 894 0300 00       		.sleb128 0
 895 0301 01       		.byte	0x1
 896 0302 15030000 		.4byte	0x315
 897 0306 19       		.uleb128 0x19
 898 0307 25010000 		.4byte	.LASF34
 899 030b 01       		.byte	0x1
 900 030c FA02     		.2byte	0x2fa
 901 030e 6F000000 		.4byte	0x6f
 902 0312 01       		.byte	0x1
 903 0313 50       		.byte	0x50
 904 0314 00       		.byte	0
ARM GAS  C:\Users\Graziano\AppData\Local\Temp\ccxs7yXP.s 			page 33


 905 0315 16       		.uleb128 0x16
 906 0316 01       		.byte	0x1
 907 0317 B1010000 		.4byte	.LASF36
 908 031b 01       		.byte	0x1
 909 031c 2D03     		.2byte	0x32d
 910 031e 01       		.byte	0x1
 911 031f 7A000000 		.4byte	0x7a
 912 0323 00000000 		.4byte	.LFB12
 913 0327 0C000000 		.4byte	.LFE12
 914 032b 02       		.byte	0x2
 915 032c 7D       		.byte	0x7d
 916 032d 00       		.sleb128 0
 917 032e 01       		.byte	0x1
 918 032f 16       		.uleb128 0x16
 919 0330 01       		.byte	0x1
 920 0331 CC010000 		.4byte	.LASF37
 921 0335 01       		.byte	0x1
 922 0336 7103     		.2byte	0x371
 923 0338 01       		.byte	0x1
 924 0339 7A000000 		.4byte	0x7a
 925 033d 00000000 		.4byte	.LFB13
 926 0341 0C000000 		.4byte	.LFE13
 927 0345 02       		.byte	0x2
 928 0346 7D       		.byte	0x7d
 929 0347 00       		.sleb128 0
 930 0348 01       		.byte	0x1
 931 0349 1A       		.uleb128 0x1a
 932 034a FD010000 		.4byte	.LASF41
 933 034e 01       		.byte	0x1
 934 034f 1B       		.byte	0x1b
 935 0350 6F000000 		.4byte	0x6f
 936 0354 01       		.byte	0x1
 937 0355 05       		.byte	0x5
 938 0356 03       		.byte	0x3
 939 0357 00000000 		.4byte	PWM_MOTOR_TILT_initVar
 940 035b 00       		.byte	0
 941              		.section	.debug_abbrev,"",%progbits
 942              	.Ldebug_abbrev0:
 943 0000 01       		.uleb128 0x1
 944 0001 11       		.uleb128 0x11
 945 0002 01       		.byte	0x1
 946 0003 25       		.uleb128 0x25
 947 0004 0E       		.uleb128 0xe
 948 0005 13       		.uleb128 0x13
 949 0006 0B       		.uleb128 0xb
 950 0007 03       		.uleb128 0x3
 951 0008 0E       		.uleb128 0xe
 952 0009 1B       		.uleb128 0x1b
 953 000a 0E       		.uleb128 0xe
 954 000b 55       		.uleb128 0x55
 955 000c 06       		.uleb128 0x6
 956 000d 11       		.uleb128 0x11
 957 000e 01       		.uleb128 0x1
 958 000f 52       		.uleb128 0x52
 959 0010 01       		.uleb128 0x1
 960 0011 10       		.uleb128 0x10
 961 0012 06       		.uleb128 0x6
ARM GAS  C:\Users\Graziano\AppData\Local\Temp\ccxs7yXP.s 			page 34


 962 0013 00       		.byte	0
 963 0014 00       		.byte	0
 964 0015 02       		.uleb128 0x2
 965 0016 24       		.uleb128 0x24
 966 0017 00       		.byte	0
 967 0018 0B       		.uleb128 0xb
 968 0019 0B       		.uleb128 0xb
 969 001a 3E       		.uleb128 0x3e
 970 001b 0B       		.uleb128 0xb
 971 001c 03       		.uleb128 0x3
 972 001d 0E       		.uleb128 0xe
 973 001e 00       		.byte	0
 974 001f 00       		.byte	0
 975 0020 03       		.uleb128 0x3
 976 0021 24       		.uleb128 0x24
 977 0022 00       		.byte	0
 978 0023 0B       		.uleb128 0xb
 979 0024 0B       		.uleb128 0xb
 980 0025 3E       		.uleb128 0x3e
 981 0026 0B       		.uleb128 0xb
 982 0027 03       		.uleb128 0x3
 983 0028 08       		.uleb128 0x8
 984 0029 00       		.byte	0
 985 002a 00       		.byte	0
 986 002b 04       		.uleb128 0x4
 987 002c 16       		.uleb128 0x16
 988 002d 00       		.byte	0
 989 002e 03       		.uleb128 0x3
 990 002f 0E       		.uleb128 0xe
 991 0030 3A       		.uleb128 0x3a
 992 0031 0B       		.uleb128 0xb
 993 0032 3B       		.uleb128 0x3b
 994 0033 0B       		.uleb128 0xb
 995 0034 49       		.uleb128 0x49
 996 0035 13       		.uleb128 0x13
 997 0036 00       		.byte	0
 998 0037 00       		.byte	0
 999 0038 05       		.uleb128 0x5
 1000 0039 35       		.uleb128 0x35
 1001 003a 00       		.byte	0
 1002 003b 49       		.uleb128 0x49
 1003 003c 13       		.uleb128 0x13
 1004 003d 00       		.byte	0
 1005 003e 00       		.byte	0
 1006 003f 06       		.uleb128 0x6
 1007 0040 2E       		.uleb128 0x2e
 1008 0041 01       		.byte	0x1
 1009 0042 3F       		.uleb128 0x3f
 1010 0043 0C       		.uleb128 0xc
 1011 0044 03       		.uleb128 0x3
 1012 0045 0E       		.uleb128 0xe
 1013 0046 3A       		.uleb128 0x3a
 1014 0047 0B       		.uleb128 0xb
 1015 0048 3B       		.uleb128 0x3b
 1016 0049 05       		.uleb128 0x5
 1017 004a 27       		.uleb128 0x27
 1018 004b 0C       		.uleb128 0xc
ARM GAS  C:\Users\Graziano\AppData\Local\Temp\ccxs7yXP.s 			page 35


 1019 004c 20       		.uleb128 0x20
 1020 004d 0B       		.uleb128 0xb
 1021 004e 01       		.uleb128 0x1
 1022 004f 13       		.uleb128 0x13
 1023 0050 00       		.byte	0
 1024 0051 00       		.byte	0
 1025 0052 07       		.uleb128 0x7
 1026 0053 05       		.uleb128 0x5
 1027 0054 00       		.byte	0
 1028 0055 03       		.uleb128 0x3
 1029 0056 0E       		.uleb128 0xe
 1030 0057 3A       		.uleb128 0x3a
 1031 0058 0B       		.uleb128 0xb
 1032 0059 3B       		.uleb128 0x3b
 1033 005a 05       		.uleb128 0x5
 1034 005b 49       		.uleb128 0x49
 1035 005c 13       		.uleb128 0x13
 1036 005d 00       		.byte	0
 1037 005e 00       		.byte	0
 1038 005f 08       		.uleb128 0x8
 1039 0060 2E       		.uleb128 0x2e
 1040 0061 00       		.byte	0
 1041 0062 3F       		.uleb128 0x3f
 1042 0063 0C       		.uleb128 0xc
 1043 0064 03       		.uleb128 0x3
 1044 0065 0E       		.uleb128 0xe
 1045 0066 3A       		.uleb128 0x3a
 1046 0067 0B       		.uleb128 0xb
 1047 0068 3B       		.uleb128 0x3b
 1048 0069 0B       		.uleb128 0xb
 1049 006a 27       		.uleb128 0x27
 1050 006b 0C       		.uleb128 0xc
 1051 006c 11       		.uleb128 0x11
 1052 006d 01       		.uleb128 0x1
 1053 006e 12       		.uleb128 0x12
 1054 006f 01       		.uleb128 0x1
 1055 0070 40       		.uleb128 0x40
 1056 0071 0A       		.uleb128 0xa
 1057 0072 9742     		.uleb128 0x2117
 1058 0074 0C       		.uleb128 0xc
 1059 0075 00       		.byte	0
 1060 0076 00       		.byte	0
 1061 0077 09       		.uleb128 0x9
 1062 0078 2E       		.uleb128 0x2e
 1063 0079 01       		.byte	0x1
 1064 007a 31       		.uleb128 0x31
 1065 007b 13       		.uleb128 0x13
 1066 007c 11       		.uleb128 0x11
 1067 007d 01       		.uleb128 0x1
 1068 007e 12       		.uleb128 0x12
 1069 007f 01       		.uleb128 0x1
 1070 0080 40       		.uleb128 0x40
 1071 0081 0A       		.uleb128 0xa
 1072 0082 9742     		.uleb128 0x2117
 1073 0084 0C       		.uleb128 0xc
 1074 0085 01       		.uleb128 0x1
 1075 0086 13       		.uleb128 0x13
ARM GAS  C:\Users\Graziano\AppData\Local\Temp\ccxs7yXP.s 			page 36


 1076 0087 00       		.byte	0
 1077 0088 00       		.byte	0
 1078 0089 0A       		.uleb128 0xa
 1079 008a 05       		.uleb128 0x5
 1080 008b 00       		.byte	0
 1081 008c 31       		.uleb128 0x31
 1082 008d 13       		.uleb128 0x13
 1083 008e 02       		.uleb128 0x2
 1084 008f 0A       		.uleb128 0xa
 1085 0090 00       		.byte	0
 1086 0091 00       		.byte	0
 1087 0092 0B       		.uleb128 0xb
 1088 0093 2E       		.uleb128 0x2e
 1089 0094 01       		.byte	0x1
 1090 0095 3F       		.uleb128 0x3f
 1091 0096 0C       		.uleb128 0xc
 1092 0097 03       		.uleb128 0x3
 1093 0098 0E       		.uleb128 0xe
 1094 0099 3A       		.uleb128 0x3a
 1095 009a 0B       		.uleb128 0xb
 1096 009b 3B       		.uleb128 0x3b
 1097 009c 05       		.uleb128 0x5
 1098 009d 27       		.uleb128 0x27
 1099 009e 0C       		.uleb128 0xc
 1100 009f 11       		.uleb128 0x11
 1101 00a0 01       		.uleb128 0x1
 1102 00a1 12       		.uleb128 0x12
 1103 00a2 01       		.uleb128 0x1
 1104 00a3 40       		.uleb128 0x40
 1105 00a4 0A       		.uleb128 0xa
 1106 00a5 9742     		.uleb128 0x2117
 1107 00a7 0C       		.uleb128 0xc
 1108 00a8 01       		.uleb128 0x1
 1109 00a9 13       		.uleb128 0x13
 1110 00aa 00       		.byte	0
 1111 00ab 00       		.byte	0
 1112 00ac 0C       		.uleb128 0xc
 1113 00ad 05       		.uleb128 0x5
 1114 00ae 00       		.byte	0
 1115 00af 03       		.uleb128 0x3
 1116 00b0 0E       		.uleb128 0xe
 1117 00b1 3A       		.uleb128 0x3a
 1118 00b2 0B       		.uleb128 0xb
 1119 00b3 3B       		.uleb128 0x3b
 1120 00b4 05       		.uleb128 0x5
 1121 00b5 49       		.uleb128 0x49
 1122 00b6 13       		.uleb128 0x13
 1123 00b7 02       		.uleb128 0x2
 1124 00b8 06       		.uleb128 0x6
 1125 00b9 00       		.byte	0
 1126 00ba 00       		.byte	0
 1127 00bb 0D       		.uleb128 0xd
 1128 00bc 2E       		.uleb128 0x2e
 1129 00bd 01       		.byte	0x1
 1130 00be 3F       		.uleb128 0x3f
 1131 00bf 0C       		.uleb128 0xc
 1132 00c0 03       		.uleb128 0x3
ARM GAS  C:\Users\Graziano\AppData\Local\Temp\ccxs7yXP.s 			page 37


 1133 00c1 0E       		.uleb128 0xe
 1134 00c2 3A       		.uleb128 0x3a
 1135 00c3 0B       		.uleb128 0xb
 1136 00c4 3B       		.uleb128 0x3b
 1137 00c5 0B       		.uleb128 0xb
 1138 00c6 27       		.uleb128 0x27
 1139 00c7 0C       		.uleb128 0xc
 1140 00c8 11       		.uleb128 0x11
 1141 00c9 01       		.uleb128 0x1
 1142 00ca 12       		.uleb128 0x12
 1143 00cb 01       		.uleb128 0x1
 1144 00cc 40       		.uleb128 0x40
 1145 00cd 06       		.uleb128 0x6
 1146 00ce 9742     		.uleb128 0x2117
 1147 00d0 0C       		.uleb128 0xc
 1148 00d1 01       		.uleb128 0x1
 1149 00d2 13       		.uleb128 0x13
 1150 00d3 00       		.byte	0
 1151 00d4 00       		.byte	0
 1152 00d5 0E       		.uleb128 0xe
 1153 00d6 34       		.uleb128 0x34
 1154 00d7 00       		.byte	0
 1155 00d8 03       		.uleb128 0x3
 1156 00d9 0E       		.uleb128 0xe
 1157 00da 3A       		.uleb128 0x3a
 1158 00db 0B       		.uleb128 0xb
 1159 00dc 3B       		.uleb128 0x3b
 1160 00dd 0B       		.uleb128 0xb
 1161 00de 49       		.uleb128 0x49
 1162 00df 13       		.uleb128 0x13
 1163 00e0 02       		.uleb128 0x2
 1164 00e1 06       		.uleb128 0x6
 1165 00e2 00       		.byte	0
 1166 00e3 00       		.byte	0
 1167 00e4 0F       		.uleb128 0xf
 1168 00e5 1D       		.uleb128 0x1d
 1169 00e6 01       		.byte	0x1
 1170 00e7 31       		.uleb128 0x31
 1171 00e8 13       		.uleb128 0x13
 1172 00e9 52       		.uleb128 0x52
 1173 00ea 01       		.uleb128 0x1
 1174 00eb 55       		.uleb128 0x55
 1175 00ec 06       		.uleb128 0x6
 1176 00ed 58       		.uleb128 0x58
 1177 00ee 0B       		.uleb128 0xb
 1178 00ef 59       		.uleb128 0x59
 1179 00f0 0B       		.uleb128 0xb
 1180 00f1 01       		.uleb128 0x1
 1181 00f2 13       		.uleb128 0x13
 1182 00f3 00       		.byte	0
 1183 00f4 00       		.byte	0
 1184 00f5 10       		.uleb128 0x10
 1185 00f6 05       		.uleb128 0x5
 1186 00f7 00       		.byte	0
 1187 00f8 31       		.uleb128 0x31
 1188 00f9 13       		.uleb128 0x13
 1189 00fa 1C       		.uleb128 0x1c
ARM GAS  C:\Users\Graziano\AppData\Local\Temp\ccxs7yXP.s 			page 38


 1190 00fb 05       		.uleb128 0x5
 1191 00fc 00       		.byte	0
 1192 00fd 00       		.byte	0
 1193 00fe 11       		.uleb128 0x11
 1194 00ff 05       		.uleb128 0x5
 1195 0100 00       		.byte	0
 1196 0101 31       		.uleb128 0x31
 1197 0102 13       		.uleb128 0x13
 1198 0103 1C       		.uleb128 0x1c
 1199 0104 0B       		.uleb128 0xb
 1200 0105 00       		.byte	0
 1201 0106 00       		.byte	0
 1202 0107 12       		.uleb128 0x12
 1203 0108 898201   		.uleb128 0x4109
 1204 010b 01       		.byte	0x1
 1205 010c 11       		.uleb128 0x11
 1206 010d 01       		.uleb128 0x1
 1207 010e 31       		.uleb128 0x31
 1208 010f 13       		.uleb128 0x13
 1209 0110 00       		.byte	0
 1210 0111 00       		.byte	0
 1211 0112 13       		.uleb128 0x13
 1212 0113 8A8201   		.uleb128 0x410a
 1213 0116 00       		.byte	0
 1214 0117 02       		.uleb128 0x2
 1215 0118 0A       		.uleb128 0xa
 1216 0119 9142     		.uleb128 0x2111
 1217 011b 0A       		.uleb128 0xa
 1218 011c 00       		.byte	0
 1219 011d 00       		.byte	0
 1220 011e 14       		.uleb128 0x14
 1221 011f 898201   		.uleb128 0x4109
 1222 0122 00       		.byte	0
 1223 0123 11       		.uleb128 0x11
 1224 0124 01       		.uleb128 0x1
 1225 0125 31       		.uleb128 0x31
 1226 0126 13       		.uleb128 0x13
 1227 0127 00       		.byte	0
 1228 0128 00       		.byte	0
 1229 0129 15       		.uleb128 0x15
 1230 012a 898201   		.uleb128 0x4109
 1231 012d 00       		.byte	0
 1232 012e 11       		.uleb128 0x11
 1233 012f 01       		.uleb128 0x1
 1234 0130 9542     		.uleb128 0x2115
 1235 0132 0C       		.uleb128 0xc
 1236 0133 31       		.uleb128 0x31
 1237 0134 13       		.uleb128 0x13
 1238 0135 00       		.byte	0
 1239 0136 00       		.byte	0
 1240 0137 16       		.uleb128 0x16
 1241 0138 2E       		.uleb128 0x2e
 1242 0139 00       		.byte	0
 1243 013a 3F       		.uleb128 0x3f
 1244 013b 0C       		.uleb128 0xc
 1245 013c 03       		.uleb128 0x3
 1246 013d 0E       		.uleb128 0xe
ARM GAS  C:\Users\Graziano\AppData\Local\Temp\ccxs7yXP.s 			page 39


 1247 013e 3A       		.uleb128 0x3a
 1248 013f 0B       		.uleb128 0xb
 1249 0140 3B       		.uleb128 0x3b
 1250 0141 05       		.uleb128 0x5
 1251 0142 27       		.uleb128 0x27
 1252 0143 0C       		.uleb128 0xc
 1253 0144 49       		.uleb128 0x49
 1254 0145 13       		.uleb128 0x13
 1255 0146 11       		.uleb128 0x11
 1256 0147 01       		.uleb128 0x1
 1257 0148 12       		.uleb128 0x12
 1258 0149 01       		.uleb128 0x1
 1259 014a 40       		.uleb128 0x40
 1260 014b 0A       		.uleb128 0xa
 1261 014c 9742     		.uleb128 0x2117
 1262 014e 0C       		.uleb128 0xc
 1263 014f 00       		.byte	0
 1264 0150 00       		.byte	0
 1265 0151 17       		.uleb128 0x17
 1266 0152 2E       		.uleb128 0x2e
 1267 0153 01       		.byte	0x1
 1268 0154 3F       		.uleb128 0x3f
 1269 0155 0C       		.uleb128 0xc
 1270 0156 03       		.uleb128 0x3
 1271 0157 0E       		.uleb128 0xe
 1272 0158 3A       		.uleb128 0x3a
 1273 0159 0B       		.uleb128 0xb
 1274 015a 3B       		.uleb128 0x3b
 1275 015b 05       		.uleb128 0x5
 1276 015c 27       		.uleb128 0x27
 1277 015d 0C       		.uleb128 0xc
 1278 015e 49       		.uleb128 0x49
 1279 015f 13       		.uleb128 0x13
 1280 0160 11       		.uleb128 0x11
 1281 0161 01       		.uleb128 0x1
 1282 0162 12       		.uleb128 0x12
 1283 0163 01       		.uleb128 0x1
 1284 0164 40       		.uleb128 0x40
 1285 0165 0A       		.uleb128 0xa
 1286 0166 9742     		.uleb128 0x2117
 1287 0168 0C       		.uleb128 0xc
 1288 0169 01       		.uleb128 0x1
 1289 016a 13       		.uleb128 0x13
 1290 016b 00       		.byte	0
 1291 016c 00       		.byte	0
 1292 016d 18       		.uleb128 0x18
 1293 016e 34       		.uleb128 0x34
 1294 016f 00       		.byte	0
 1295 0170 03       		.uleb128 0x3
 1296 0171 0E       		.uleb128 0xe
 1297 0172 3A       		.uleb128 0x3a
 1298 0173 0B       		.uleb128 0xb
 1299 0174 3B       		.uleb128 0x3b
 1300 0175 05       		.uleb128 0x5
 1301 0176 49       		.uleb128 0x49
 1302 0177 13       		.uleb128 0x13
 1303 0178 02       		.uleb128 0x2
ARM GAS  C:\Users\Graziano\AppData\Local\Temp\ccxs7yXP.s 			page 40


 1304 0179 0A       		.uleb128 0xa
 1305 017a 00       		.byte	0
 1306 017b 00       		.byte	0
 1307 017c 19       		.uleb128 0x19
 1308 017d 05       		.uleb128 0x5
 1309 017e 00       		.byte	0
 1310 017f 03       		.uleb128 0x3
 1311 0180 0E       		.uleb128 0xe
 1312 0181 3A       		.uleb128 0x3a
 1313 0182 0B       		.uleb128 0xb
 1314 0183 3B       		.uleb128 0x3b
 1315 0184 05       		.uleb128 0x5
 1316 0185 49       		.uleb128 0x49
 1317 0186 13       		.uleb128 0x13
 1318 0187 02       		.uleb128 0x2
 1319 0188 0A       		.uleb128 0xa
 1320 0189 00       		.byte	0
 1321 018a 00       		.byte	0
 1322 018b 1A       		.uleb128 0x1a
 1323 018c 34       		.uleb128 0x34
 1324 018d 00       		.byte	0
 1325 018e 03       		.uleb128 0x3
 1326 018f 0E       		.uleb128 0xe
 1327 0190 3A       		.uleb128 0x3a
 1328 0191 0B       		.uleb128 0xb
 1329 0192 3B       		.uleb128 0x3b
 1330 0193 0B       		.uleb128 0xb
 1331 0194 49       		.uleb128 0x49
 1332 0195 13       		.uleb128 0x13
 1333 0196 3F       		.uleb128 0x3f
 1334 0197 0C       		.uleb128 0xc
 1335 0198 02       		.uleb128 0x2
 1336 0199 0A       		.uleb128 0xa
 1337 019a 00       		.byte	0
 1338 019b 00       		.byte	0
 1339 019c 00       		.byte	0
 1340              		.section	.debug_loc,"",%progbits
 1341              	.Ldebug_loc0:
 1342              	.LLST0:
 1343 0000 00000000 		.4byte	.LVL2
 1344 0004 10000000 		.4byte	.LVL3
 1345 0008 0100     		.2byte	0x1
 1346 000a 50       		.byte	0x50
 1347 000b 10000000 		.4byte	.LVL3
 1348 000f 1C000000 		.4byte	.LFE6
 1349 0013 0400     		.2byte	0x4
 1350 0015 F3       		.byte	0xf3
 1351 0016 01       		.uleb128 0x1
 1352 0017 50       		.byte	0x50
 1353 0018 9F       		.byte	0x9f
 1354 0019 00000000 		.4byte	0
 1355 001d 00000000 		.4byte	0
 1356              	.LLST1:
 1357 0021 00000000 		.4byte	.LFB1
 1358 0025 02000000 		.4byte	.LCFI0
 1359 0029 0200     		.2byte	0x2
 1360 002b 7D       		.byte	0x7d
ARM GAS  C:\Users\Graziano\AppData\Local\Temp\ccxs7yXP.s 			page 41


 1361 002c 00       		.sleb128 0
 1362 002d 02000000 		.4byte	.LCFI0
 1363 0031 80000000 		.4byte	.LFE1
 1364 0035 0200     		.2byte	0x2
 1365 0037 7D       		.byte	0x7d
 1366 0038 08       		.sleb128 8
 1367 0039 00000000 		.4byte	0
 1368 003d 00000000 		.4byte	0
 1369              	.LLST2:
 1370 0041 16000000 		.4byte	.LVL4
 1371 0045 22000000 		.4byte	.LVL5
 1372 0049 0600     		.2byte	0x6
 1373 004b 70       		.byte	0x70
 1374 004c 00       		.sleb128 0
 1375 004d 09       		.byte	0x9
 1376 004e 8F       		.byte	0x8f
 1377 004f 1A       		.byte	0x1a
 1378 0050 9F       		.byte	0x9f
 1379 0051 00000000 		.4byte	0
 1380 0055 00000000 		.4byte	0
 1381              	.LLST3:
 1382 0059 00000000 		.4byte	.LFB0
 1383 005d 02000000 		.4byte	.LCFI1
 1384 0061 0200     		.2byte	0x2
 1385 0063 7D       		.byte	0x7d
 1386 0064 00       		.sleb128 0
 1387 0065 02000000 		.4byte	.LCFI1
 1388 0069 1C000000 		.4byte	.LFE0
 1389 006d 0200     		.2byte	0x2
 1390 006f 7D       		.byte	0x7d
 1391 0070 08       		.sleb128 8
 1392 0071 00000000 		.4byte	0
 1393 0075 00000000 		.4byte	0
 1394              		.section	.debug_aranges,"",%progbits
 1395 0000 84000000 		.4byte	0x84
 1396 0004 0200     		.2byte	0x2
 1397 0006 00000000 		.4byte	.Ldebug_info0
 1398 000a 04       		.byte	0x4
 1399 000b 00       		.byte	0
 1400 000c 0000     		.2byte	0
 1401 000e 0000     		.2byte	0
 1402 0010 00000000 		.4byte	.LFB2
 1403 0014 28000000 		.4byte	.LFE2-.LFB2
 1404 0018 00000000 		.4byte	.LFB3
 1405 001c 28000000 		.4byte	.LFE3-.LFB3
 1406 0020 00000000 		.4byte	.LFB4
 1407 0024 0C000000 		.4byte	.LFE4-.LFB4
 1408 0028 00000000 		.4byte	.LFB5
 1409 002c 0C000000 		.4byte	.LFE5-.LFB5
 1410 0030 00000000 		.4byte	.LFB6
 1411 0034 1C000000 		.4byte	.LFE6-.LFB6
 1412 0038 00000000 		.4byte	.LFB1
 1413 003c 80000000 		.4byte	.LFE1-.LFB1
 1414 0040 00000000 		.4byte	.LFB0
 1415 0044 1C000000 		.4byte	.LFE0-.LFB0
 1416 0048 00000000 		.4byte	.LFB7
 1417 004c 0C000000 		.4byte	.LFE7-.LFB7
ARM GAS  C:\Users\Graziano\AppData\Local\Temp\ccxs7yXP.s 			page 42


 1418 0050 00000000 		.4byte	.LFB8
 1419 0054 0C000000 		.4byte	.LFE8-.LFB8
 1420 0058 00000000 		.4byte	.LFB9
 1421 005c 0C000000 		.4byte	.LFE9-.LFB9
 1422 0060 00000000 		.4byte	.LFB10
 1423 0064 0C000000 		.4byte	.LFE10-.LFB10
 1424 0068 00000000 		.4byte	.LFB11
 1425 006c 0C000000 		.4byte	.LFE11-.LFB11
 1426 0070 00000000 		.4byte	.LFB12
 1427 0074 0C000000 		.4byte	.LFE12-.LFB12
 1428 0078 00000000 		.4byte	.LFB13
 1429 007c 0C000000 		.4byte	.LFE13-.LFB13
 1430 0080 00000000 		.4byte	0
 1431 0084 00000000 		.4byte	0
 1432              		.section	.debug_ranges,"",%progbits
 1433              	.Ldebug_ranges0:
 1434 0000 3A000000 		.4byte	.LBB8
 1435 0004 3E000000 		.4byte	.LBE8
 1436 0008 48000000 		.4byte	.LBB14
 1437 000c 4A000000 		.4byte	.LBE14
 1438 0010 00000000 		.4byte	0
 1439 0014 00000000 		.4byte	0
 1440 0018 42000000 		.4byte	.LBB11
 1441 001c 46000000 		.4byte	.LBE11
 1442 0020 4A000000 		.4byte	.LBB15
 1443 0024 4C000000 		.4byte	.LBE15
 1444 0028 00000000 		.4byte	0
 1445 002c 00000000 		.4byte	0
 1446 0030 52000000 		.4byte	.LBB16
 1447 0034 54000000 		.4byte	.LBE16
 1448 0038 56000000 		.4byte	.LBB19
 1449 003c 5A000000 		.4byte	.LBE19
 1450 0040 00000000 		.4byte	0
 1451 0044 00000000 		.4byte	0
 1452 0048 00000000 		.4byte	.LFB2
 1453 004c 28000000 		.4byte	.LFE2
 1454 0050 00000000 		.4byte	.LFB3
 1455 0054 28000000 		.4byte	.LFE3
 1456 0058 00000000 		.4byte	.LFB4
 1457 005c 0C000000 		.4byte	.LFE4
 1458 0060 00000000 		.4byte	.LFB5
 1459 0064 0C000000 		.4byte	.LFE5
 1460 0068 00000000 		.4byte	.LFB6
 1461 006c 1C000000 		.4byte	.LFE6
 1462 0070 00000000 		.4byte	.LFB1
 1463 0074 80000000 		.4byte	.LFE1
 1464 0078 00000000 		.4byte	.LFB0
 1465 007c 1C000000 		.4byte	.LFE0
 1466 0080 00000000 		.4byte	.LFB7
 1467 0084 0C000000 		.4byte	.LFE7
 1468 0088 00000000 		.4byte	.LFB8
 1469 008c 0C000000 		.4byte	.LFE8
 1470 0090 00000000 		.4byte	.LFB9
 1471 0094 0C000000 		.4byte	.LFE9
 1472 0098 00000000 		.4byte	.LFB10
 1473 009c 0C000000 		.4byte	.LFE10
 1474 00a0 00000000 		.4byte	.LFB11
ARM GAS  C:\Users\Graziano\AppData\Local\Temp\ccxs7yXP.s 			page 43


 1475 00a4 0C000000 		.4byte	.LFE11
 1476 00a8 00000000 		.4byte	.LFB12
 1477 00ac 0C000000 		.4byte	.LFE12
 1478 00b0 00000000 		.4byte	.LFB13
 1479 00b4 0C000000 		.4byte	.LFE13
 1480 00b8 00000000 		.4byte	0
 1481 00bc 00000000 		.4byte	0
 1482              		.section	.debug_line,"",%progbits
 1483              	.Ldebug_line0:
 1484 0000 87010000 		.section	.debug_str,"MS",%progbits,1
 1484      02004D00 
 1484      00000201 
 1484      FB0E0D00 
 1484      01010101 
 1485              	.LASF15:
 1486 0000 72656731 		.ascii	"reg16\000"
 1486      3600
 1487              	.LASF17:
 1488 0006 50574D5F 		.ascii	"PWM_MOTOR_TILT_WritePeriod\000"
 1488      4D4F544F 
 1488      525F5449 
 1488      4C545F57 
 1488      72697465 
 1489              	.LASF19:
 1490 0021 70657269 		.ascii	"period\000"
 1490      6F6400
 1491              	.LASF3:
 1492 0028 73686F72 		.ascii	"short unsigned int\000"
 1492      7420756E 
 1492      7369676E 
 1492      65642069 
 1492      6E7400
 1493              	.LASF8:
 1494 003b 756E7369 		.ascii	"unsigned int\000"
 1494      676E6564 
 1494      20696E74 
 1494      00
 1495              	.LASF11:
 1496 0048 666C6F61 		.ascii	"float\000"
 1496      7400
 1497              	.LASF32:
 1498 004e 50574D5F 		.ascii	"PWM_MOTOR_TILT_WriteControlRegister\000"
 1498      4D4F544F 
 1498      525F5449 
 1498      4C545F57 
 1498      72697465 
 1499              	.LASF1:
 1500 0072 756E7369 		.ascii	"unsigned char\000"
 1500      676E6564 
 1500      20636861 
 1500      7200
 1501              	.LASF21:
 1502 0080 50574D5F 		.ascii	"PWM_MOTOR_TILT_SetInterruptMode\000"
 1502      4D4F544F 
 1502      525F5449 
 1502      4C545F53 
 1502      6574496E 
ARM GAS  C:\Users\Graziano\AppData\Local\Temp\ccxs7yXP.s 			page 44


 1503              	.LASF14:
 1504 00a0 72656738 		.ascii	"reg8\000"
 1504      00
 1505              	.LASF5:
 1506 00a5 6C6F6E67 		.ascii	"long unsigned int\000"
 1506      20756E73 
 1506      69676E65 
 1506      6420696E 
 1506      7400
 1507              	.LASF40:
 1508 00b7 433A5C55 		.ascii	"C:\\Users\\Graziano\\Desktop\\PSOC CODES\\GOBEE DIR"
 1508      73657273 
 1508      5C477261 
 1508      7A69616E 
 1508      6F5C4465 
 1509 00e5 4543544F 		.ascii	"ECTOR\\Vers.0.0-T05 2017-0201 C3.0 (test board V)\\"
 1509      525C5665 
 1509      72732E30 
 1509      2E302D54 
 1509      30352032 
 1510 0116 476F6265 		.ascii	"GobeeDir.cydsn\000"
 1510      65446972 
 1510      2E637964 
 1510      736E00
 1511              	.LASF34:
 1512 0125 636F6E74 		.ascii	"control\000"
 1512      726F6C00 
 1513              	.LASF12:
 1514 012d 646F7562 		.ascii	"double\000"
 1514      6C6500
 1515              	.LASF27:
 1516 0134 50574D5F 		.ascii	"PWM_MOTOR_TILT_Start\000"
 1516      4D4F544F 
 1516      525F5449 
 1516      4C545F53 
 1516      74617274 
 1517              	.LASF31:
 1518 0149 50574D5F 		.ascii	"PWM_MOTOR_TILT_ReadControlRegister\000"
 1518      4D4F544F 
 1518      525F5449 
 1518      4C545F52 
 1518      65616443 
 1519              	.LASF10:
 1520 016c 75696E74 		.ascii	"uint16\000"
 1520      313600
 1521              	.LASF26:
 1522 0173 50574D5F 		.ascii	"PWM_MOTOR_TILT_Init\000"
 1522      4D4F544F 
 1522      525F5449 
 1522      4C545F49 
 1522      6E697400 
 1523              	.LASF39:
 1524 0187 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\PWM_MOTOR_TILT.c\000"
 1524      6E657261 
 1524      7465645F 
 1524      536F7572 
 1524      63655C50 
ARM GAS  C:\Users\Graziano\AppData\Local\Temp\ccxs7yXP.s 			page 45


 1525              	.LASF36:
 1526 01b1 50574D5F 		.ascii	"PWM_MOTOR_TILT_ReadCompare\000"
 1526      4D4F544F 
 1526      525F5449 
 1526      4C545F52 
 1526      65616443 
 1527              	.LASF37:
 1528 01cc 50574D5F 		.ascii	"PWM_MOTOR_TILT_ReadPeriod\000"
 1528      4D4F544F 
 1528      525F5449 
 1528      4C545F52 
 1528      65616450 
 1529              	.LASF7:
 1530 01e6 6C6F6E67 		.ascii	"long long unsigned int\000"
 1530      206C6F6E 
 1530      6720756E 
 1530      7369676E 
 1530      65642069 
 1531              	.LASF41:
 1532 01fd 50574D5F 		.ascii	"PWM_MOTOR_TILT_initVar\000"
 1532      4D4F544F 
 1532      525F5449 
 1532      4C545F69 
 1532      6E697456 
 1533              	.LASF23:
 1534 0214 50574D5F 		.ascii	"PWM_MOTOR_TILT_Enable\000"
 1534      4D4F544F 
 1534      525F5449 
 1534      4C545F45 
 1534      6E61626C 
 1535              	.LASF29:
 1536 022a 72657375 		.ascii	"result\000"
 1536      6C7400
 1537              	.LASF18:
 1538 0231 50574D5F 		.ascii	"PWM_MOTOR_TILT_WriteCompare\000"
 1538      4D4F544F 
 1538      525F5449 
 1538      4C545F57 
 1538      72697465 
 1539              	.LASF35:
 1540 024d 50574D5F 		.ascii	"PWM_MOTOR_TILT_ReadDeadTime\000"
 1540      4D4F544F 
 1540      525F5449 
 1540      4C545F52 
 1540      65616444 
 1541              	.LASF28:
 1542 0269 6374726C 		.ascii	"ctrl\000"
 1542      00
 1543              	.LASF16:
 1544 026e 73697A65 		.ascii	"sizetype\000"
 1544      74797065 
 1544      00
 1545              	.LASF6:
 1546 0277 6C6F6E67 		.ascii	"long long int\000"
 1546      206C6F6E 
 1546      6720696E 
 1546      7400
ARM GAS  C:\Users\Graziano\AppData\Local\Temp\ccxs7yXP.s 			page 46


 1547              	.LASF22:
 1548 0285 696E7465 		.ascii	"interruptMode\000"
 1548      72727570 
 1548      744D6F64 
 1548      6500
 1549              	.LASF30:
 1550 0293 50574D5F 		.ascii	"PWM_MOTOR_TILT_ReadStatusRegister\000"
 1550      4D4F544F 
 1550      525F5449 
 1550      4C545F52 
 1550      65616453 
 1551              	.LASF2:
 1552 02b5 73686F72 		.ascii	"short int\000"
 1552      7420696E 
 1552      7400
 1553              	.LASF25:
 1554 02bf 50574D5F 		.ascii	"PWM_MOTOR_TILT_WriteDeadTime\000"
 1554      4D4F544F 
 1554      525F5449 
 1554      4C545F57 
 1554      72697465 
 1555              	.LASF9:
 1556 02dc 75696E74 		.ascii	"uint8\000"
 1556      3800
 1557              	.LASF38:
 1558 02e2 474E5520 		.ascii	"GNU C 4.7.3 20130312 (release) [ARM/embedded-4_7-br"
 1558      4320342E 
 1558      372E3320 
 1558      32303133 
 1558      30333132 
 1559 0315 616E6368 		.ascii	"anch revision 196615]\000"
 1559      20726576 
 1559      6973696F 
 1559      6E203139 
 1559      36363135 
 1560              	.LASF24:
 1561 032b 50574D5F 		.ascii	"PWM_MOTOR_TILT_Stop\000"
 1561      4D4F544F 
 1561      525F5449 
 1561      4C545F53 
 1561      746F7000 
 1562              	.LASF4:
 1563 033f 6C6F6E67 		.ascii	"long int\000"
 1563      20696E74 
 1563      00
 1564              	.LASF13:
 1565 0348 63686172 		.ascii	"char\000"
 1565      00
 1566              	.LASF0:
 1567 034d 7369676E 		.ascii	"signed char\000"
 1567      65642063 
 1567      68617200 
 1568              	.LASF20:
 1569 0359 636F6D70 		.ascii	"compare\000"
 1569      61726500 
 1570              	.LASF33:
 1571 0361 64656164 		.ascii	"deadtime\000"
ARM GAS  C:\Users\Graziano\AppData\Local\Temp\ccxs7yXP.s 			page 47


 1571      74696D65 
 1571      00
 1572              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.7.3 20130312 (release) [ARM/embedded-4_7-br

ARM GAS  C:\Users\GRAZIA~1.RAV\AppData\Local\Temp\ccBCmqGf.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"UART_4D_LCD.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	UART_4D_LCD_initVar
  19              		.bss
  20              		.type	UART_4D_LCD_initVar, %object
  21              		.size	UART_4D_LCD_initVar, 1
  22              	UART_4D_LCD_initVar:
  23 0000 00       		.space	1
  24              		.section	.text.UART_4D_LCD_Start,"ax",%progbits
  25              		.align	2
  26              		.global	UART_4D_LCD_Start
  27              		.thumb
  28              		.thumb_func
  29              		.type	UART_4D_LCD_Start, %function
  30              	UART_4D_LCD_Start:
  31              	.LFB0:
  32              		.file 1 ".\\Generated_Source\\PSoC5\\UART_4D_LCD.c"
   1:.\Generated_Source\PSoC5/UART_4D_LCD.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/UART_4D_LCD.c **** * File Name: UART_4D_LCD.c
   3:.\Generated_Source\PSoC5/UART_4D_LCD.c **** * Version 2.30
   4:.\Generated_Source\PSoC5/UART_4D_LCD.c **** *
   5:.\Generated_Source\PSoC5/UART_4D_LCD.c **** * Description:
   6:.\Generated_Source\PSoC5/UART_4D_LCD.c **** *  This file provides all API functionality of the UART component
   7:.\Generated_Source\PSoC5/UART_4D_LCD.c **** *
   8:.\Generated_Source\PSoC5/UART_4D_LCD.c **** * Note:
   9:.\Generated_Source\PSoC5/UART_4D_LCD.c **** *
  10:.\Generated_Source\PSoC5/UART_4D_LCD.c **** ********************************************************************************
  11:.\Generated_Source\PSoC5/UART_4D_LCD.c **** * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  12:.\Generated_Source\PSoC5/UART_4D_LCD.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:.\Generated_Source\PSoC5/UART_4D_LCD.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:.\Generated_Source\PSoC5/UART_4D_LCD.c **** * the software package with which this file was provided.
  15:.\Generated_Source\PSoC5/UART_4D_LCD.c **** *******************************************************************************/
  16:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
  17:.\Generated_Source\PSoC5/UART_4D_LCD.c **** #include "UART_4D_LCD.h"
  18:.\Generated_Source\PSoC5/UART_4D_LCD.c **** #include "CyLib.h"
  19:.\Generated_Source\PSoC5/UART_4D_LCD.c **** #if(UART_4D_LCD_INTERNAL_CLOCK_USED)
  20:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     #include "UART_4D_LCD_IntClock.h"
  21:.\Generated_Source\PSoC5/UART_4D_LCD.c **** #endif /* End UART_4D_LCD_INTERNAL_CLOCK_USED */
  22:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
  23:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
  24:.\Generated_Source\PSoC5/UART_4D_LCD.c **** /***************************************
  25:.\Generated_Source\PSoC5/UART_4D_LCD.c **** * Global data allocation
ARM GAS  C:\Users\GRAZIA~1.RAV\AppData\Local\Temp\ccBCmqGf.s 			page 2


  26:.\Generated_Source\PSoC5/UART_4D_LCD.c **** ***************************************/
  27:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
  28:.\Generated_Source\PSoC5/UART_4D_LCD.c **** uint8 UART_4D_LCD_initVar = 0u;
  29:.\Generated_Source\PSoC5/UART_4D_LCD.c **** #if( UART_4D_LCD_TX_ENABLED && (UART_4D_LCD_TXBUFFERSIZE > UART_4D_LCD_FIFO_LENGTH))
  30:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     volatile uint8 UART_4D_LCD_txBuffer[UART_4D_LCD_TXBUFFERSIZE];
  31:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     volatile uint8 UART_4D_LCD_txBufferRead = 0u;
  32:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     uint8 UART_4D_LCD_txBufferWrite = 0u;
  33:.\Generated_Source\PSoC5/UART_4D_LCD.c **** #endif /* End UART_4D_LCD_TX_ENABLED */
  34:.\Generated_Source\PSoC5/UART_4D_LCD.c **** #if( ( UART_4D_LCD_RX_ENABLED || UART_4D_LCD_HD_ENABLED ) && \
  35:.\Generated_Source\PSoC5/UART_4D_LCD.c ****      (UART_4D_LCD_RXBUFFERSIZE > UART_4D_LCD_FIFO_LENGTH) )
  36:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     volatile uint8 UART_4D_LCD_rxBuffer[UART_4D_LCD_RXBUFFERSIZE];
  37:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     volatile uint8 UART_4D_LCD_rxBufferRead = 0u;
  38:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     volatile uint8 UART_4D_LCD_rxBufferWrite = 0u;
  39:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     volatile uint8 UART_4D_LCD_rxBufferLoopDetect = 0u;
  40:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     volatile uint8 UART_4D_LCD_rxBufferOverflow = 0u;
  41:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     #if (UART_4D_LCD_RXHW_ADDRESS_ENABLED)
  42:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         volatile uint8 UART_4D_LCD_rxAddressMode = UART_4D_LCD_RXADDRESSMODE;
  43:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         volatile uint8 UART_4D_LCD_rxAddressDetected = 0u;
  44:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     #endif /* End EnableHWAddress */
  45:.\Generated_Source\PSoC5/UART_4D_LCD.c **** #endif /* End UART_4D_LCD_RX_ENABLED */
  46:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
  47:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
  48:.\Generated_Source\PSoC5/UART_4D_LCD.c **** /*******************************************************************************
  49:.\Generated_Source\PSoC5/UART_4D_LCD.c **** * Function Name: UART_4D_LCD_Start
  50:.\Generated_Source\PSoC5/UART_4D_LCD.c **** ********************************************************************************
  51:.\Generated_Source\PSoC5/UART_4D_LCD.c **** *
  52:.\Generated_Source\PSoC5/UART_4D_LCD.c **** * Summary:
  53:.\Generated_Source\PSoC5/UART_4D_LCD.c **** *  Initialize and Enable the UART component.
  54:.\Generated_Source\PSoC5/UART_4D_LCD.c **** *  Enable the clock input to enable operation.
  55:.\Generated_Source\PSoC5/UART_4D_LCD.c **** *
  56:.\Generated_Source\PSoC5/UART_4D_LCD.c **** * Parameters:
  57:.\Generated_Source\PSoC5/UART_4D_LCD.c **** *  None.
  58:.\Generated_Source\PSoC5/UART_4D_LCD.c **** *
  59:.\Generated_Source\PSoC5/UART_4D_LCD.c **** * Return:
  60:.\Generated_Source\PSoC5/UART_4D_LCD.c **** *  None.
  61:.\Generated_Source\PSoC5/UART_4D_LCD.c **** *
  62:.\Generated_Source\PSoC5/UART_4D_LCD.c **** * Global variables:
  63:.\Generated_Source\PSoC5/UART_4D_LCD.c **** *  The UART_4D_LCD_intiVar variable is used to indicate initial
  64:.\Generated_Source\PSoC5/UART_4D_LCD.c **** *  configuration of this component. The variable is initialized to zero (0u)
  65:.\Generated_Source\PSoC5/UART_4D_LCD.c **** *  and set to one (1u) the first time UART_Start() is called. This allows for
  66:.\Generated_Source\PSoC5/UART_4D_LCD.c **** *  component initialization without re-initialization in all subsequent calls
  67:.\Generated_Source\PSoC5/UART_4D_LCD.c **** *  to the UART_4D_LCD_Start() routine.
  68:.\Generated_Source\PSoC5/UART_4D_LCD.c **** *
  69:.\Generated_Source\PSoC5/UART_4D_LCD.c **** * Reentrant:
  70:.\Generated_Source\PSoC5/UART_4D_LCD.c **** *  No.
  71:.\Generated_Source\PSoC5/UART_4D_LCD.c **** *
  72:.\Generated_Source\PSoC5/UART_4D_LCD.c **** *******************************************************************************/
  73:.\Generated_Source\PSoC5/UART_4D_LCD.c **** void UART_4D_LCD_Start(void) 
  74:.\Generated_Source\PSoC5/UART_4D_LCD.c **** {
  33              		.loc 1 74 0
  34              		.cfi_startproc
  35              		@ args = 0, pretend = 0, frame = 0
  36              		@ frame_needed = 1, uses_anonymous_args = 0
  37 0000 80B5     		push	{r7, lr}
  38              	.LCFI0:
  39              		.cfi_def_cfa_offset 8
  40              		.cfi_offset 7, -8
ARM GAS  C:\Users\GRAZIA~1.RAV\AppData\Local\Temp\ccBCmqGf.s 			page 3


  41              		.cfi_offset 14, -4
  42 0002 00AF     		add	r7, sp, #0
  43              	.LCFI1:
  44              		.cfi_def_cfa_register 7
  75:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     /* If not Initialized then initialize all required hardware and software */
  76:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     if(UART_4D_LCD_initVar == 0u)
  45              		.loc 1 76 0
  46 0004 40F20003 		movw	r3, #:lower16:UART_4D_LCD_initVar
  47 0008 C0F20003 		movt	r3, #:upper16:UART_4D_LCD_initVar
  48 000c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
  49 000e 002B     		cmp	r3, #0
  50 0010 08D1     		bne	.L2
  77:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     {
  78:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         UART_4D_LCD_Init();
  51              		.loc 1 78 0
  52 0012 FFF7FEFF 		bl	UART_4D_LCD_Init
  79:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         UART_4D_LCD_initVar = 1u;
  53              		.loc 1 79 0
  54 0016 40F20003 		movw	r3, #:lower16:UART_4D_LCD_initVar
  55 001a C0F20003 		movt	r3, #:upper16:UART_4D_LCD_initVar
  56 001e 4FF00102 		mov	r2, #1
  57 0022 1A70     		strb	r2, [r3, #0]
  58              	.L2:
  80:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     }
  81:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     UART_4D_LCD_Enable();
  59              		.loc 1 81 0
  60 0024 FFF7FEFF 		bl	UART_4D_LCD_Enable
  82:.\Generated_Source\PSoC5/UART_4D_LCD.c **** }
  61              		.loc 1 82 0
  62 0028 80BD     		pop	{r7, pc}
  63              		.cfi_endproc
  64              	.LFE0:
  65              		.size	UART_4D_LCD_Start, .-UART_4D_LCD_Start
  66 002a 00BF     		.section	.text.UART_4D_LCD_Init,"ax",%progbits
  67              		.align	2
  68              		.global	UART_4D_LCD_Init
  69              		.thumb
  70              		.thumb_func
  71              		.type	UART_4D_LCD_Init, %function
  72              	UART_4D_LCD_Init:
  73              	.LFB1:
  83:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
  84:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
  85:.\Generated_Source\PSoC5/UART_4D_LCD.c **** /*******************************************************************************
  86:.\Generated_Source\PSoC5/UART_4D_LCD.c **** * Function Name: UART_4D_LCD_Init
  87:.\Generated_Source\PSoC5/UART_4D_LCD.c **** ********************************************************************************
  88:.\Generated_Source\PSoC5/UART_4D_LCD.c **** *
  89:.\Generated_Source\PSoC5/UART_4D_LCD.c **** * Summary:
  90:.\Generated_Source\PSoC5/UART_4D_LCD.c **** *  Initialize component's parameters to the parameters set by user in the
  91:.\Generated_Source\PSoC5/UART_4D_LCD.c **** *  customizer of the component placed onto schematic. Usually called in
  92:.\Generated_Source\PSoC5/UART_4D_LCD.c **** *  UART_4D_LCD_Start().
  93:.\Generated_Source\PSoC5/UART_4D_LCD.c **** *
  94:.\Generated_Source\PSoC5/UART_4D_LCD.c **** * Parameters:
  95:.\Generated_Source\PSoC5/UART_4D_LCD.c **** *  None.
  96:.\Generated_Source\PSoC5/UART_4D_LCD.c **** *
  97:.\Generated_Source\PSoC5/UART_4D_LCD.c **** * Return:
  98:.\Generated_Source\PSoC5/UART_4D_LCD.c **** *  None.
ARM GAS  C:\Users\GRAZIA~1.RAV\AppData\Local\Temp\ccBCmqGf.s 			page 4


  99:.\Generated_Source\PSoC5/UART_4D_LCD.c **** *
 100:.\Generated_Source\PSoC5/UART_4D_LCD.c **** *******************************************************************************/
 101:.\Generated_Source\PSoC5/UART_4D_LCD.c **** void UART_4D_LCD_Init(void) 
 102:.\Generated_Source\PSoC5/UART_4D_LCD.c **** {
  74              		.loc 1 102 0
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 1, uses_anonymous_args = 0
  78              		@ link register save eliminated.
  79 0000 80B4     		push	{r7}
  80              	.LCFI2:
  81              		.cfi_def_cfa_offset 4
  82              		.cfi_offset 7, -4
  83 0002 00AF     		add	r7, sp, #0
  84              	.LCFI3:
  85              		.cfi_def_cfa_register 7
 103:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     #if(UART_4D_LCD_RX_ENABLED || UART_4D_LCD_HD_ENABLED)
 104:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 105:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         #if(UART_4D_LCD_RX_INTERRUPT_ENABLED && (UART_4D_LCD_RXBUFFERSIZE > UART_4D_LCD_FIFO_LENGTH
 106:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             /* Set the RX Interrupt. */
 107:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             (void)CyIntSetVector(UART_4D_LCD_RX_VECT_NUM, &UART_4D_LCD_RXISR);
 108:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             CyIntSetPriority(UART_4D_LCD_RX_VECT_NUM, UART_4D_LCD_RX_PRIOR_NUM);
 109:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         #endif /* End UART_4D_LCD_RX_INTERRUPT_ENABLED */
 110:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 111:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         #if (UART_4D_LCD_RXHW_ADDRESS_ENABLED)
 112:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             UART_4D_LCD_SetRxAddressMode(UART_4D_LCD_RXAddressMode);
 113:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             UART_4D_LCD_SetRxAddress1(UART_4D_LCD_RXHWADDRESS1);
 114:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             UART_4D_LCD_SetRxAddress2(UART_4D_LCD_RXHWADDRESS2);
 115:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         #endif /* End UART_4D_LCD_RXHW_ADDRESS_ENABLED */
 116:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 117:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         /* Init Count7 period */
 118:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         UART_4D_LCD_RXBITCTR_PERIOD_REG = UART_4D_LCD_RXBITCTR_INIT;
  86              		.loc 1 118 0
  87 0004 46F28B53 		movw	r3, #25995
  88 0008 C4F20003 		movt	r3, 16384
  89 000c 4FF07202 		mov	r2, #114
  90 0010 1A70     		strb	r2, [r3, #0]
 119:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         /* Configure the Initial RX interrupt mask */
 120:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         UART_4D_LCD_RXSTATUS_MASK_REG  = UART_4D_LCD_INIT_RX_INTERRUPTS_MASK;
  91              		.loc 1 120 0
  92 0012 46F28A53 		movw	r3, #25994
  93 0016 C4F20003 		movt	r3, 16384
  94 001a 4FF02002 		mov	r2, #32
  95 001e 1A70     		strb	r2, [r3, #0]
 121:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     #endif /* End UART_4D_LCD_RX_ENABLED || UART_4D_LCD_HD_ENABLED*/
 122:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 123:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     #if(UART_4D_LCD_TX_ENABLED)
 124:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         #if(UART_4D_LCD_TX_INTERRUPT_ENABLED && (UART_4D_LCD_TXBUFFERSIZE > UART_4D_LCD_FIFO_LENGTH
 125:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             /* Set the TX Interrupt. */
 126:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             (void)CyIntSetVector(UART_4D_LCD_TX_VECT_NUM, &UART_4D_LCD_TXISR);
 127:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             CyIntSetPriority(UART_4D_LCD_TX_VECT_NUM, UART_4D_LCD_TX_PRIOR_NUM);
 128:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         #endif /* End UART_4D_LCD_TX_INTERRUPT_ENABLED */
 129:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 130:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         /* Write Counter Value for TX Bit Clk Generator*/
 131:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         #if(UART_4D_LCD_TXCLKGEN_DP)
 132:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             UART_4D_LCD_TXBITCLKGEN_CTR_REG = UART_4D_LCD_BIT_CENTER;
 133:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             UART_4D_LCD_TXBITCLKTX_COMPLETE_REG = (UART_4D_LCD_NUMBER_OF_DATA_BITS +
ARM GAS  C:\Users\GRAZIA~1.RAV\AppData\Local\Temp\ccBCmqGf.s 			page 5


 134:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                         UART_4D_LCD_NUMBER_OF_START_BIT) * UART_4D_LCD_OVER_SAMPLE_COUNT;
 135:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         #else
 136:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             UART_4D_LCD_TXBITCTR_PERIOD_REG = ((UART_4D_LCD_NUMBER_OF_DATA_BITS +
 137:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                         UART_4D_LCD_NUMBER_OF_START_BIT) * UART_4D_LCD_OVER_SAMPLE_8) - 1u;
 138:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         #endif /* End UART_4D_LCD_TXCLKGEN_DP */
 139:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 140:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         /* Configure the Initial TX interrupt mask */
 141:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         #if(UART_4D_LCD_TX_INTERRUPT_ENABLED && (UART_4D_LCD_TXBUFFERSIZE > UART_4D_LCD_FIFO_LENGTH
 142:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             UART_4D_LCD_TXSTATUS_MASK_REG = UART_4D_LCD_TX_STS_FIFO_EMPTY;
 143:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         #else
 144:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             UART_4D_LCD_TXSTATUS_MASK_REG = UART_4D_LCD_INIT_TX_INTERRUPTS_MASK;
 145:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         #endif /*End UART_4D_LCD_TX_INTERRUPT_ENABLED*/
 146:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 147:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     #endif /* End UART_4D_LCD_TX_ENABLED */
 148:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 149:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     #if(UART_4D_LCD_PARITY_TYPE_SW)  /* Write Parity to Control Register */
 150:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         UART_4D_LCD_WriteControlRegister( \
 151:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             (UART_4D_LCD_ReadControlRegister() & (uint8)~UART_4D_LCD_CTRL_PARITY_TYPE_MASK) | \
 152:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             (uint8)(UART_4D_LCD_PARITY_TYPE << UART_4D_LCD_CTRL_PARITY_TYPE0_SHIFT) );
 153:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     #endif /* End UART_4D_LCD_PARITY_TYPE_SW */
 154:.\Generated_Source\PSoC5/UART_4D_LCD.c **** }
  96              		.loc 1 154 0
  97 0020 BD46     		mov	sp, r7
  98 0022 80BC     		pop	{r7}
  99 0024 7047     		bx	lr
 100              		.cfi_endproc
 101              	.LFE1:
 102              		.size	UART_4D_LCD_Init, .-UART_4D_LCD_Init
 103 0026 00BF     		.section	.text.UART_4D_LCD_Enable,"ax",%progbits
 104              		.align	2
 105              		.global	UART_4D_LCD_Enable
 106              		.thumb
 107              		.thumb_func
 108              		.type	UART_4D_LCD_Enable, %function
 109              	UART_4D_LCD_Enable:
 110              	.LFB2:
 155:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 156:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 157:.\Generated_Source\PSoC5/UART_4D_LCD.c **** /*******************************************************************************
 158:.\Generated_Source\PSoC5/UART_4D_LCD.c **** * Function Name: UART_4D_LCD_Enable
 159:.\Generated_Source\PSoC5/UART_4D_LCD.c **** ********************************************************************************
 160:.\Generated_Source\PSoC5/UART_4D_LCD.c **** *
 161:.\Generated_Source\PSoC5/UART_4D_LCD.c **** * Summary:
 162:.\Generated_Source\PSoC5/UART_4D_LCD.c **** *  Enables the UART block operation
 163:.\Generated_Source\PSoC5/UART_4D_LCD.c **** *
 164:.\Generated_Source\PSoC5/UART_4D_LCD.c **** * Parameters:
 165:.\Generated_Source\PSoC5/UART_4D_LCD.c **** *  None.
 166:.\Generated_Source\PSoC5/UART_4D_LCD.c **** *
 167:.\Generated_Source\PSoC5/UART_4D_LCD.c **** * Return:
 168:.\Generated_Source\PSoC5/UART_4D_LCD.c **** *  None.
 169:.\Generated_Source\PSoC5/UART_4D_LCD.c **** *
 170:.\Generated_Source\PSoC5/UART_4D_LCD.c **** * Global Variables:
 171:.\Generated_Source\PSoC5/UART_4D_LCD.c **** *  UART_4D_LCD_rxAddressDetected - set to initial state (0).
 172:.\Generated_Source\PSoC5/UART_4D_LCD.c **** *
 173:.\Generated_Source\PSoC5/UART_4D_LCD.c **** *******************************************************************************/
 174:.\Generated_Source\PSoC5/UART_4D_LCD.c **** void UART_4D_LCD_Enable(void) 
 175:.\Generated_Source\PSoC5/UART_4D_LCD.c **** {
ARM GAS  C:\Users\GRAZIA~1.RAV\AppData\Local\Temp\ccBCmqGf.s 			page 6


 111              		.loc 1 175 0
 112              		.cfi_startproc
 113              		@ args = 0, pretend = 0, frame = 8
 114              		@ frame_needed = 1, uses_anonymous_args = 0
 115 0000 80B5     		push	{r7, lr}
 116              	.LCFI4:
 117              		.cfi_def_cfa_offset 8
 118              		.cfi_offset 7, -8
 119              		.cfi_offset 14, -4
 120 0002 82B0     		sub	sp, sp, #8
 121              	.LCFI5:
 122              		.cfi_def_cfa_offset 16
 123 0004 00AF     		add	r7, sp, #0
 124              	.LCFI6:
 125              		.cfi_def_cfa_register 7
 176:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     uint8 enableInterrupts;
 177:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     enableInterrupts = CyEnterCriticalSection();
 126              		.loc 1 177 0
 127 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 128 000a 0346     		mov	r3, r0
 129 000c FB71     		strb	r3, [r7, #7]
 178:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 179:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     #if(UART_4D_LCD_RX_ENABLED || UART_4D_LCD_HD_ENABLED)
 180:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         /*RX Counter (Count7) Enable */
 181:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         UART_4D_LCD_RXBITCTR_CONTROL_REG |= UART_4D_LCD_CNTR_ENABLE;
 130              		.loc 1 181 0
 131 000e 46F29B53 		movw	r3, #26011
 132 0012 C4F20003 		movt	r3, 16384
 133 0016 46F29B52 		movw	r2, #26011
 134 001a C4F20002 		movt	r2, 16384
 135 001e 1278     		ldrb	r2, [r2, #0]
 136 0020 D2B2     		uxtb	r2, r2
 137 0022 42F02002 		orr	r2, r2, #32
 138 0026 D2B2     		uxtb	r2, r2
 139 0028 1A70     		strb	r2, [r3, #0]
 182:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         /* Enable the RX Interrupt. */
 183:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         UART_4D_LCD_RXSTATUS_ACTL_REG  |= UART_4D_LCD_INT_ENABLE;
 140              		.loc 1 183 0
 141 002a 46F29A53 		movw	r3, #26010
 142 002e C4F20003 		movt	r3, 16384
 143 0032 46F29A52 		movw	r2, #26010
 144 0036 C4F20002 		movt	r2, 16384
 145 003a 1278     		ldrb	r2, [r2, #0]
 146 003c D2B2     		uxtb	r2, r2
 147 003e 42F01002 		orr	r2, r2, #16
 148 0042 D2B2     		uxtb	r2, r2
 149 0044 1A70     		strb	r2, [r3, #0]
 184:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         #if(UART_4D_LCD_RX_INTERRUPT_ENABLED && (UART_4D_LCD_RXBUFFERSIZE > UART_4D_LCD_FIFO_LENGTH
 185:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             CyIntEnable(UART_4D_LCD_RX_VECT_NUM);
 186:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             #if (UART_4D_LCD_RXHW_ADDRESS_ENABLED)
 187:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 UART_4D_LCD_rxAddressDetected = 0u;
 188:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             #endif /* End UART_4D_LCD_RXHW_ADDRESS_ENABLED */
 189:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         #endif /* End UART_4D_LCD_RX_INTERRUPT_ENABLED */
 190:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     #endif /* End UART_4D_LCD_RX_ENABLED || UART_4D_LCD_HD_ENABLED*/
 191:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 192:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     #if(UART_4D_LCD_TX_ENABLED)
 193:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         /*TX Counter (DP/Count7) Enable */
ARM GAS  C:\Users\GRAZIA~1.RAV\AppData\Local\Temp\ccBCmqGf.s 			page 7


 194:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         #if(!UART_4D_LCD_TXCLKGEN_DP)
 195:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             UART_4D_LCD_TXBITCTR_CONTROL_REG |= UART_4D_LCD_CNTR_ENABLE;
 196:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         #endif /* End UART_4D_LCD_TXCLKGEN_DP */
 197:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         /* Enable the TX Interrupt. */
 198:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         UART_4D_LCD_TXSTATUS_ACTL_REG |= UART_4D_LCD_INT_ENABLE;
 199:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         #if(UART_4D_LCD_TX_INTERRUPT_ENABLED && (UART_4D_LCD_TXBUFFERSIZE > UART_4D_LCD_FIFO_LENGTH
 200:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             CyIntEnable(UART_4D_LCD_TX_VECT_NUM);
 201:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         #endif /* End UART_4D_LCD_TX_INTERRUPT_ENABLED*/
 202:.\Generated_Source\PSoC5/UART_4D_LCD.c ****      #endif /* End UART_4D_LCD_TX_ENABLED */
 203:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 204:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     #if(UART_4D_LCD_INTERNAL_CLOCK_USED)
 205:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         /* Enable the clock. */
 206:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         UART_4D_LCD_IntClock_Start();
 207:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     #endif /* End UART_4D_LCD_INTERNAL_CLOCK_USED */
 208:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 209:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     CyExitCriticalSection(enableInterrupts);
 150              		.loc 1 209 0
 151 0046 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 152 0048 1846     		mov	r0, r3
 153 004a FFF7FEFF 		bl	CyExitCriticalSection
 210:.\Generated_Source\PSoC5/UART_4D_LCD.c **** }
 154              		.loc 1 210 0
 155 004e 07F10807 		add	r7, r7, #8
 156 0052 BD46     		mov	sp, r7
 157 0054 80BD     		pop	{r7, pc}
 158              		.cfi_endproc
 159              	.LFE2:
 160              		.size	UART_4D_LCD_Enable, .-UART_4D_LCD_Enable
 161 0056 00BF     		.section	.text.UART_4D_LCD_Stop,"ax",%progbits
 162              		.align	2
 163              		.global	UART_4D_LCD_Stop
 164              		.thumb
 165              		.thumb_func
 166              		.type	UART_4D_LCD_Stop, %function
 167              	UART_4D_LCD_Stop:
 168              	.LFB3:
 211:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 212:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 213:.\Generated_Source\PSoC5/UART_4D_LCD.c **** /*******************************************************************************
 214:.\Generated_Source\PSoC5/UART_4D_LCD.c **** * Function Name: UART_4D_LCD_Stop
 215:.\Generated_Source\PSoC5/UART_4D_LCD.c **** ********************************************************************************
 216:.\Generated_Source\PSoC5/UART_4D_LCD.c **** *
 217:.\Generated_Source\PSoC5/UART_4D_LCD.c **** * Summary:
 218:.\Generated_Source\PSoC5/UART_4D_LCD.c **** *  Disable the UART component
 219:.\Generated_Source\PSoC5/UART_4D_LCD.c **** *
 220:.\Generated_Source\PSoC5/UART_4D_LCD.c **** * Parameters:
 221:.\Generated_Source\PSoC5/UART_4D_LCD.c **** *  None.
 222:.\Generated_Source\PSoC5/UART_4D_LCD.c **** *
 223:.\Generated_Source\PSoC5/UART_4D_LCD.c **** * Return:
 224:.\Generated_Source\PSoC5/UART_4D_LCD.c **** *  None.
 225:.\Generated_Source\PSoC5/UART_4D_LCD.c **** *
 226:.\Generated_Source\PSoC5/UART_4D_LCD.c **** *******************************************************************************/
 227:.\Generated_Source\PSoC5/UART_4D_LCD.c **** void UART_4D_LCD_Stop(void) 
 228:.\Generated_Source\PSoC5/UART_4D_LCD.c **** {
 169              		.loc 1 228 0
 170              		.cfi_startproc
 171              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\GRAZIA~1.RAV\AppData\Local\Temp\ccBCmqGf.s 			page 8


 172              		@ frame_needed = 1, uses_anonymous_args = 0
 173 0000 80B5     		push	{r7, lr}
 174              	.LCFI7:
 175              		.cfi_def_cfa_offset 8
 176              		.cfi_offset 7, -8
 177              		.cfi_offset 14, -4
 178 0002 82B0     		sub	sp, sp, #8
 179              	.LCFI8:
 180              		.cfi_def_cfa_offset 16
 181 0004 00AF     		add	r7, sp, #0
 182              	.LCFI9:
 183              		.cfi_def_cfa_register 7
 229:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     uint8 enableInterrupts;
 230:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     enableInterrupts = CyEnterCriticalSection();
 184              		.loc 1 230 0
 185 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 186 000a 0346     		mov	r3, r0
 187 000c FB71     		strb	r3, [r7, #7]
 231:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 232:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     /* Write Bit Counter Disable */
 233:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     #if(UART_4D_LCD_RX_ENABLED || UART_4D_LCD_HD_ENABLED)
 234:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         UART_4D_LCD_RXBITCTR_CONTROL_REG &= (uint8)~UART_4D_LCD_CNTR_ENABLE;
 188              		.loc 1 234 0
 189 000e 46F29B53 		movw	r3, #26011
 190 0012 C4F20003 		movt	r3, 16384
 191 0016 46F29B52 		movw	r2, #26011
 192 001a C4F20002 		movt	r2, 16384
 193 001e 1278     		ldrb	r2, [r2, #0]
 194 0020 D2B2     		uxtb	r2, r2
 195 0022 22F02002 		bic	r2, r2, #32
 196 0026 D2B2     		uxtb	r2, r2
 197 0028 1A70     		strb	r2, [r3, #0]
 235:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     #endif /* End UART_4D_LCD_RX_ENABLED */
 236:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 237:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     #if(UART_4D_LCD_TX_ENABLED)
 238:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         #if(!UART_4D_LCD_TXCLKGEN_DP)
 239:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             UART_4D_LCD_TXBITCTR_CONTROL_REG &= (uint8)~UART_4D_LCD_CNTR_ENABLE;
 240:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         #endif /* End UART_4D_LCD_TXCLKGEN_DP */
 241:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     #endif /* UART_4D_LCD_TX_ENABLED */
 242:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 243:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     #if(UART_4D_LCD_INTERNAL_CLOCK_USED)
 244:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         /* Disable the clock. */
 245:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         UART_4D_LCD_IntClock_Stop();
 246:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     #endif /* End UART_4D_LCD_INTERNAL_CLOCK_USED */
 247:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 248:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     /* Disable internal interrupt component */
 249:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     #if(UART_4D_LCD_RX_ENABLED || UART_4D_LCD_HD_ENABLED)
 250:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         UART_4D_LCD_RXSTATUS_ACTL_REG  &= (uint8)~UART_4D_LCD_INT_ENABLE;
 198              		.loc 1 250 0
 199 002a 46F29A53 		movw	r3, #26010
 200 002e C4F20003 		movt	r3, 16384
 201 0032 46F29A52 		movw	r2, #26010
 202 0036 C4F20002 		movt	r2, 16384
 203 003a 1278     		ldrb	r2, [r2, #0]
 204 003c D2B2     		uxtb	r2, r2
 205 003e 22F01002 		bic	r2, r2, #16
 206 0042 D2B2     		uxtb	r2, r2
ARM GAS  C:\Users\GRAZIA~1.RAV\AppData\Local\Temp\ccBCmqGf.s 			page 9


 207 0044 1A70     		strb	r2, [r3, #0]
 251:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         #if(UART_4D_LCD_RX_INTERRUPT_ENABLED && (UART_4D_LCD_RXBUFFERSIZE > UART_4D_LCD_FIFO_LENGTH
 252:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             UART_4D_LCD_DisableRxInt();
 253:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         #endif /* End UART_4D_LCD_RX_INTERRUPT_ENABLED */
 254:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     #endif /* End UART_4D_LCD_RX_ENABLED */
 255:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 256:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     #if(UART_4D_LCD_TX_ENABLED)
 257:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         UART_4D_LCD_TXSTATUS_ACTL_REG &= (uint8)~UART_4D_LCD_INT_ENABLE;
 258:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         #if(UART_4D_LCD_TX_INTERRUPT_ENABLED && (UART_4D_LCD_TXBUFFERSIZE > UART_4D_LCD_FIFO_LENGTH
 259:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             UART_4D_LCD_DisableTxInt();
 260:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         #endif /* End UART_4D_LCD_TX_INTERRUPT_ENABLED */
 261:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     #endif /* End UART_4D_LCD_TX_ENABLED */
 262:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 263:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     CyExitCriticalSection(enableInterrupts);
 208              		.loc 1 263 0
 209 0046 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 210 0048 1846     		mov	r0, r3
 211 004a FFF7FEFF 		bl	CyExitCriticalSection
 264:.\Generated_Source\PSoC5/UART_4D_LCD.c **** }
 212              		.loc 1 264 0
 213 004e 07F10807 		add	r7, r7, #8
 214 0052 BD46     		mov	sp, r7
 215 0054 80BD     		pop	{r7, pc}
 216              		.cfi_endproc
 217              	.LFE3:
 218              		.size	UART_4D_LCD_Stop, .-UART_4D_LCD_Stop
 219 0056 00BF     		.section	.text.UART_4D_LCD_ReadControlRegister,"ax",%progbits
 220              		.align	2
 221              		.global	UART_4D_LCD_ReadControlRegister
 222              		.thumb
 223              		.thumb_func
 224              		.type	UART_4D_LCD_ReadControlRegister, %function
 225              	UART_4D_LCD_ReadControlRegister:
 226              	.LFB4:
 265:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 266:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 267:.\Generated_Source\PSoC5/UART_4D_LCD.c **** /*******************************************************************************
 268:.\Generated_Source\PSoC5/UART_4D_LCD.c **** * Function Name: UART_4D_LCD_ReadControlRegister
 269:.\Generated_Source\PSoC5/UART_4D_LCD.c **** ********************************************************************************
 270:.\Generated_Source\PSoC5/UART_4D_LCD.c **** *
 271:.\Generated_Source\PSoC5/UART_4D_LCD.c **** * Summary:
 272:.\Generated_Source\PSoC5/UART_4D_LCD.c **** *  Read the current state of the control register
 273:.\Generated_Source\PSoC5/UART_4D_LCD.c **** *
 274:.\Generated_Source\PSoC5/UART_4D_LCD.c **** * Parameters:
 275:.\Generated_Source\PSoC5/UART_4D_LCD.c **** *  None.
 276:.\Generated_Source\PSoC5/UART_4D_LCD.c **** *
 277:.\Generated_Source\PSoC5/UART_4D_LCD.c **** * Return:
 278:.\Generated_Source\PSoC5/UART_4D_LCD.c **** *  Current state of the control register.
 279:.\Generated_Source\PSoC5/UART_4D_LCD.c **** *
 280:.\Generated_Source\PSoC5/UART_4D_LCD.c **** *******************************************************************************/
 281:.\Generated_Source\PSoC5/UART_4D_LCD.c **** uint8 UART_4D_LCD_ReadControlRegister(void) 
 282:.\Generated_Source\PSoC5/UART_4D_LCD.c **** {
 227              		.loc 1 282 0
 228              		.cfi_startproc
 229              		@ args = 0, pretend = 0, frame = 0
 230              		@ frame_needed = 1, uses_anonymous_args = 0
 231              		@ link register save eliminated.
ARM GAS  C:\Users\GRAZIA~1.RAV\AppData\Local\Temp\ccBCmqGf.s 			page 10


 232 0000 80B4     		push	{r7}
 233              	.LCFI10:
 234              		.cfi_def_cfa_offset 4
 235              		.cfi_offset 7, -4
 236 0002 00AF     		add	r7, sp, #0
 237              	.LCFI11:
 238              		.cfi_def_cfa_register 7
 283:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     #if( UART_4D_LCD_CONTROL_REG_REMOVED )
 284:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         return(0u);
 285:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     #else
 286:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         return(UART_4D_LCD_CONTROL_REG);
 239              		.loc 1 286 0
 240 0004 46F27853 		movw	r3, #25976
 241 0008 C4F20003 		movt	r3, 16384
 242 000c 1B78     		ldrb	r3, [r3, #0]
 243 000e DBB2     		uxtb	r3, r3
 287:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     #endif /* End UART_4D_LCD_CONTROL_REG_REMOVED */
 288:.\Generated_Source\PSoC5/UART_4D_LCD.c **** }
 244              		.loc 1 288 0
 245 0010 1846     		mov	r0, r3
 246 0012 BD46     		mov	sp, r7
 247 0014 80BC     		pop	{r7}
 248 0016 7047     		bx	lr
 249              		.cfi_endproc
 250              	.LFE4:
 251              		.size	UART_4D_LCD_ReadControlRegister, .-UART_4D_LCD_ReadControlRegister
 252              		.section	.text.UART_4D_LCD_WriteControlRegister,"ax",%progbits
 253              		.align	2
 254              		.global	UART_4D_LCD_WriteControlRegister
 255              		.thumb
 256              		.thumb_func
 257              		.type	UART_4D_LCD_WriteControlRegister, %function
 258              	UART_4D_LCD_WriteControlRegister:
 259              	.LFB5:
 289:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 290:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 291:.\Generated_Source\PSoC5/UART_4D_LCD.c **** /*******************************************************************************
 292:.\Generated_Source\PSoC5/UART_4D_LCD.c **** * Function Name: UART_4D_LCD_WriteControlRegister
 293:.\Generated_Source\PSoC5/UART_4D_LCD.c **** ********************************************************************************
 294:.\Generated_Source\PSoC5/UART_4D_LCD.c **** *
 295:.\Generated_Source\PSoC5/UART_4D_LCD.c **** * Summary:
 296:.\Generated_Source\PSoC5/UART_4D_LCD.c **** *  Writes an 8-bit value into the control register
 297:.\Generated_Source\PSoC5/UART_4D_LCD.c **** *
 298:.\Generated_Source\PSoC5/UART_4D_LCD.c **** * Parameters:
 299:.\Generated_Source\PSoC5/UART_4D_LCD.c **** *  control:  control register value
 300:.\Generated_Source\PSoC5/UART_4D_LCD.c **** *
 301:.\Generated_Source\PSoC5/UART_4D_LCD.c **** * Return:
 302:.\Generated_Source\PSoC5/UART_4D_LCD.c **** *  None.
 303:.\Generated_Source\PSoC5/UART_4D_LCD.c **** *
 304:.\Generated_Source\PSoC5/UART_4D_LCD.c **** *******************************************************************************/
 305:.\Generated_Source\PSoC5/UART_4D_LCD.c **** void  UART_4D_LCD_WriteControlRegister(uint8 control) 
 306:.\Generated_Source\PSoC5/UART_4D_LCD.c **** {
 260              		.loc 1 306 0
 261              		.cfi_startproc
 262              		@ args = 0, pretend = 0, frame = 8
 263              		@ frame_needed = 1, uses_anonymous_args = 0
 264              		@ link register save eliminated.
ARM GAS  C:\Users\GRAZIA~1.RAV\AppData\Local\Temp\ccBCmqGf.s 			page 11


 265 0000 80B4     		push	{r7}
 266              	.LCFI12:
 267              		.cfi_def_cfa_offset 4
 268              		.cfi_offset 7, -4
 269 0002 83B0     		sub	sp, sp, #12
 270              	.LCFI13:
 271              		.cfi_def_cfa_offset 16
 272 0004 00AF     		add	r7, sp, #0
 273              	.LCFI14:
 274              		.cfi_def_cfa_register 7
 275 0006 0346     		mov	r3, r0
 276 0008 FB71     		strb	r3, [r7, #7]
 307:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     #if( UART_4D_LCD_CONTROL_REG_REMOVED )
 308:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         if(control != 0u) { }      /* release compiler warning */
 309:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     #else
 310:.\Generated_Source\PSoC5/UART_4D_LCD.c ****        UART_4D_LCD_CONTROL_REG = control;
 277              		.loc 1 310 0
 278 000a 46F27853 		movw	r3, #25976
 279 000e C4F20003 		movt	r3, 16384
 280 0012 FA79     		ldrb	r2, [r7, #7]
 281 0014 1A70     		strb	r2, [r3, #0]
 311:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     #endif /* End UART_4D_LCD_CONTROL_REG_REMOVED */
 312:.\Generated_Source\PSoC5/UART_4D_LCD.c **** }
 282              		.loc 1 312 0
 283 0016 07F10C07 		add	r7, r7, #12
 284 001a BD46     		mov	sp, r7
 285 001c 80BC     		pop	{r7}
 286 001e 7047     		bx	lr
 287              		.cfi_endproc
 288              	.LFE5:
 289              		.size	UART_4D_LCD_WriteControlRegister, .-UART_4D_LCD_WriteControlRegister
 290              		.section	.text.UART_4D_LCD_SetRxInterruptMode,"ax",%progbits
 291              		.align	2
 292              		.global	UART_4D_LCD_SetRxInterruptMode
 293              		.thumb
 294              		.thumb_func
 295              		.type	UART_4D_LCD_SetRxInterruptMode, %function
 296              	UART_4D_LCD_SetRxInterruptMode:
 297              	.LFB6:
 313:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 314:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 315:.\Generated_Source\PSoC5/UART_4D_LCD.c **** #if(UART_4D_LCD_RX_ENABLED || UART_4D_LCD_HD_ENABLED)
 316:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 317:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     #if(UART_4D_LCD_RX_INTERRUPT_ENABLED)
 318:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 319:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         /*******************************************************************************
 320:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         * Function Name: UART_4D_LCD_EnableRxInt
 321:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         ********************************************************************************
 322:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         *
 323:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         * Summary:
 324:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         *  Enable RX interrupt generation
 325:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         *
 326:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         * Parameters:
 327:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         *  None.
 328:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         *
 329:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         * Return:
 330:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         *  None.
ARM GAS  C:\Users\GRAZIA~1.RAV\AppData\Local\Temp\ccBCmqGf.s 			page 12


 331:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         *
 332:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         * Theory:
 333:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         *  Enable the interrupt output -or- the interrupt component itself
 334:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         *
 335:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         *******************************************************************************/
 336:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         void UART_4D_LCD_EnableRxInt(void) 
 337:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         {
 338:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             CyIntEnable(UART_4D_LCD_RX_VECT_NUM);
 339:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         }
 340:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 341:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 342:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         /*******************************************************************************
 343:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         * Function Name: UART_4D_LCD_DisableRxInt
 344:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         ********************************************************************************
 345:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         *
 346:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         * Summary:
 347:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         *  Disable RX interrupt generation
 348:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         *
 349:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         * Parameters:
 350:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         *  None.
 351:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         *
 352:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         * Return:
 353:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         *  None.
 354:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         *
 355:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         * Theory:
 356:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         *  Disable the interrupt output -or- the interrupt component itself
 357:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         *
 358:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         *******************************************************************************/
 359:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         void UART_4D_LCD_DisableRxInt(void) 
 360:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         {
 361:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             CyIntDisable(UART_4D_LCD_RX_VECT_NUM);
 362:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         }
 363:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 364:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     #endif /* UART_4D_LCD_RX_INTERRUPT_ENABLED */
 365:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 366:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 367:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     /*******************************************************************************
 368:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Function Name: UART_4D_LCD_SetRxInterruptMode
 369:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     ********************************************************************************
 370:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
 371:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Summary:
 372:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  Configure which status bits trigger an interrupt event
 373:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
 374:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Parameters:
 375:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  IntSrc:  An or'd combination of the desired status bit masks (defined in
 376:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *           the header file)
 377:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
 378:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Return:
 379:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  None.
 380:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
 381:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Theory:
 382:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  Enables the output of specific status bits to the interrupt controller
 383:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
 384:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *******************************************************************************/
 385:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     void UART_4D_LCD_SetRxInterruptMode(uint8 intSrc) 
 386:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     {
 298              		.loc 1 386 0
ARM GAS  C:\Users\GRAZIA~1.RAV\AppData\Local\Temp\ccBCmqGf.s 			page 13


 299              		.cfi_startproc
 300              		@ args = 0, pretend = 0, frame = 8
 301              		@ frame_needed = 1, uses_anonymous_args = 0
 302              		@ link register save eliminated.
 303 0000 80B4     		push	{r7}
 304              	.LCFI15:
 305              		.cfi_def_cfa_offset 4
 306              		.cfi_offset 7, -4
 307 0002 83B0     		sub	sp, sp, #12
 308              	.LCFI16:
 309              		.cfi_def_cfa_offset 16
 310 0004 00AF     		add	r7, sp, #0
 311              	.LCFI17:
 312              		.cfi_def_cfa_register 7
 313 0006 0346     		mov	r3, r0
 314 0008 FB71     		strb	r3, [r7, #7]
 387:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         UART_4D_LCD_RXSTATUS_MASK_REG  = intSrc;
 315              		.loc 1 387 0
 316 000a 46F28A53 		movw	r3, #25994
 317 000e C4F20003 		movt	r3, 16384
 318 0012 FA79     		ldrb	r2, [r7, #7]
 319 0014 1A70     		strb	r2, [r3, #0]
 388:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     }
 320              		.loc 1 388 0
 321 0016 07F10C07 		add	r7, r7, #12
 322 001a BD46     		mov	sp, r7
 323 001c 80BC     		pop	{r7}
 324 001e 7047     		bx	lr
 325              		.cfi_endproc
 326              	.LFE6:
 327              		.size	UART_4D_LCD_SetRxInterruptMode, .-UART_4D_LCD_SetRxInterruptMode
 328              		.section	.text.UART_4D_LCD_ReadRxData,"ax",%progbits
 329              		.align	2
 330              		.global	UART_4D_LCD_ReadRxData
 331              		.thumb
 332              		.thumb_func
 333              		.type	UART_4D_LCD_ReadRxData, %function
 334              	UART_4D_LCD_ReadRxData:
 335              	.LFB7:
 389:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 390:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 391:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     /*******************************************************************************
 392:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Function Name: UART_4D_LCD_ReadRxData
 393:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     ********************************************************************************
 394:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
 395:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Summary:
 396:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  Returns data in RX Data register without checking status register to
 397:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  determine if data is valid
 398:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
 399:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Parameters:
 400:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  None.
 401:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
 402:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Return:
 403:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  Received data from RX register
 404:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
 405:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Global Variables:
 406:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  UART_4D_LCD_rxBuffer - RAM buffer pointer for save received data.
ARM GAS  C:\Users\GRAZIA~1.RAV\AppData\Local\Temp\ccBCmqGf.s 			page 14


 407:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  UART_4D_LCD_rxBufferWrite - cyclic index for write to rxBuffer,
 408:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *     checked to identify new data.
 409:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  UART_4D_LCD_rxBufferRead - cyclic index for read from rxBuffer,
 410:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *     incremented after each byte has been read from buffer.
 411:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  UART_4D_LCD_rxBufferLoopDetect - creared if loop condition was detected
 412:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *     in RX ISR.
 413:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
 414:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Reentrant:
 415:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  No.
 416:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
 417:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *******************************************************************************/
 418:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     uint8 UART_4D_LCD_ReadRxData(void) 
 419:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     {
 336              		.loc 1 419 0
 337              		.cfi_startproc
 338              		@ args = 0, pretend = 0, frame = 8
 339              		@ frame_needed = 1, uses_anonymous_args = 0
 340              		@ link register save eliminated.
 341 0000 80B4     		push	{r7}
 342              	.LCFI18:
 343              		.cfi_def_cfa_offset 4
 344              		.cfi_offset 7, -4
 345 0002 83B0     		sub	sp, sp, #12
 346              	.LCFI19:
 347              		.cfi_def_cfa_offset 16
 348 0004 00AF     		add	r7, sp, #0
 349              	.LCFI20:
 350              		.cfi_def_cfa_register 7
 420:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         uint8 rxData;
 421:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 422:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         #if(UART_4D_LCD_RXBUFFERSIZE > UART_4D_LCD_FIFO_LENGTH)
 423:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             uint8 loc_rxBufferRead;
 424:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             uint8 loc_rxBufferWrite;
 425:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             /* Protect variables that could change on interrupt. */
 426:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             /* Disable Rx interrupt. */
 427:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             #if(UART_4D_LCD_RX_INTERRUPT_ENABLED)
 428:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 UART_4D_LCD_DisableRxInt();
 429:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             #endif /* UART_4D_LCD_RX_INTERRUPT_ENABLED */
 430:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             loc_rxBufferRead = UART_4D_LCD_rxBufferRead;
 431:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             loc_rxBufferWrite = UART_4D_LCD_rxBufferWrite;
 432:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 433:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             if( (UART_4D_LCD_rxBufferLoopDetect != 0u) || (loc_rxBufferRead != loc_rxBufferWrite) )
 434:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             {
 435:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 rxData = UART_4D_LCD_rxBuffer[loc_rxBufferRead];
 436:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 loc_rxBufferRead++;
 437:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 438:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 if(loc_rxBufferRead >= UART_4D_LCD_RXBUFFERSIZE)
 439:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 {
 440:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                     loc_rxBufferRead = 0u;
 441:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 }
 442:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 /* Update the real pointer */
 443:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 UART_4D_LCD_rxBufferRead = loc_rxBufferRead;
 444:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 445:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 if(UART_4D_LCD_rxBufferLoopDetect != 0u )
 446:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 {
 447:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                     UART_4D_LCD_rxBufferLoopDetect = 0u;
 448:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                     #if( (UART_4D_LCD_RX_INTERRUPT_ENABLED) && (UART_4D_LCD_FLOW_CONTROL != 0u) && 
ARM GAS  C:\Users\GRAZIA~1.RAV\AppData\Local\Temp\ccBCmqGf.s 			page 15


 449:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                          (UART_4D_LCD_RXBUFFERSIZE > UART_4D_LCD_FIFO_LENGTH) )
 450:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                         /* When Hardware Flow Control selected - return RX mask */
 451:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                         #if( UART_4D_LCD_HD_ENABLED )
 452:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                             if((UART_4D_LCD_CONTROL_REG & UART_4D_LCD_CTRL_HD_SEND) == 0u)
 453:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                             {   /* In Half duplex mode return RX mask only in RX
 454:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                                 *  configuration set, otherwise
 455:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                                 *  mask will be returned in LoadRxConfig() API.
 456:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                                 */
 457:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                                 UART_4D_LCD_RXSTATUS_MASK_REG  |= UART_4D_LCD_RX_STS_FIFO_NOTEMPTY;
 458:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                             }
 459:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                         #else
 460:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                             UART_4D_LCD_RXSTATUS_MASK_REG  |= UART_4D_LCD_RX_STS_FIFO_NOTEMPTY;
 461:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                         #endif /* end UART_4D_LCD_HD_ENABLED */
 462:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                     #endif /* UART_4D_LCD_RX_INTERRUPT_ENABLED and Hardware flow control*/
 463:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 }
 464:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             }
 465:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             else
 466:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             {   /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit*/
 467:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 rxData = UART_4D_LCD_RXDATA_REG;
 468:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             }
 469:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 470:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             /* Enable Rx interrupt. */
 471:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             #if(UART_4D_LCD_RX_INTERRUPT_ENABLED)
 472:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 UART_4D_LCD_EnableRxInt();
 473:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             #endif /* End UART_4D_LCD_RX_INTERRUPT_ENABLED */
 474:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 475:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         #else /* UART_4D_LCD_RXBUFFERSIZE > UART_4D_LCD_FIFO_LENGTH */
 476:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 477:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit*/
 478:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             rxData = UART_4D_LCD_RXDATA_REG;
 351              		.loc 1 478 0
 352 0006 46F24753 		movw	r3, #25927
 353 000a C4F20003 		movt	r3, 16384
 354 000e 1B78     		ldrb	r3, [r3, #0]
 355 0010 FB71     		strb	r3, [r7, #7]
 479:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 480:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         #endif /* UART_4D_LCD_RXBUFFERSIZE > UART_4D_LCD_FIFO_LENGTH */
 481:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 482:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         return(rxData);
 356              		.loc 1 482 0
 357 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 483:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     }
 358              		.loc 1 483 0
 359 0014 1846     		mov	r0, r3
 360 0016 07F10C07 		add	r7, r7, #12
 361 001a BD46     		mov	sp, r7
 362 001c 80BC     		pop	{r7}
 363 001e 7047     		bx	lr
 364              		.cfi_endproc
 365              	.LFE7:
 366              		.size	UART_4D_LCD_ReadRxData, .-UART_4D_LCD_ReadRxData
 367              		.section	.text.UART_4D_LCD_ReadRxStatus,"ax",%progbits
 368              		.align	2
 369              		.global	UART_4D_LCD_ReadRxStatus
 370              		.thumb
 371              		.thumb_func
 372              		.type	UART_4D_LCD_ReadRxStatus, %function
ARM GAS  C:\Users\GRAZIA~1.RAV\AppData\Local\Temp\ccBCmqGf.s 			page 16


 373              	UART_4D_LCD_ReadRxStatus:
 374              	.LFB8:
 484:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 485:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 486:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     /*******************************************************************************
 487:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Function Name: UART_4D_LCD_ReadRxStatus
 488:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     ********************************************************************************
 489:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
 490:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Summary:
 491:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  Read the current state of the status register
 492:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  And detect software buffer overflow.
 493:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
 494:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Parameters:
 495:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  None.
 496:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
 497:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Return:
 498:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  Current state of the status register.
 499:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
 500:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Global Variables:
 501:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  UART_4D_LCD_rxBufferOverflow - used to indicate overload condition.
 502:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *   It set to one in RX interrupt when there isn?t free space in
 503:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *   UART_4D_LCD_rxBufferRead to write new data. This condition returned
 504:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *   and cleared to zero by this API as an
 505:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *   UART_4D_LCD_RX_STS_SOFT_BUFF_OVER bit along with RX Status register
 506:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *   bits.
 507:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
 508:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *******************************************************************************/
 509:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     uint8 UART_4D_LCD_ReadRxStatus(void) 
 510:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     {
 375              		.loc 1 510 0
 376              		.cfi_startproc
 377              		@ args = 0, pretend = 0, frame = 8
 378              		@ frame_needed = 1, uses_anonymous_args = 0
 379              		@ link register save eliminated.
 380 0000 80B4     		push	{r7}
 381              	.LCFI21:
 382              		.cfi_def_cfa_offset 4
 383              		.cfi_offset 7, -4
 384 0002 83B0     		sub	sp, sp, #12
 385              	.LCFI22:
 386              		.cfi_def_cfa_offset 16
 387 0004 00AF     		add	r7, sp, #0
 388              	.LCFI23:
 389              		.cfi_def_cfa_register 7
 511:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         uint8 status;
 512:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 513:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         status = UART_4D_LCD_RXSTATUS_REG & UART_4D_LCD_RX_HW_MASK;
 390              		.loc 1 513 0
 391 0006 46F26A53 		movw	r3, #25962
 392 000a C4F20003 		movt	r3, 16384
 393 000e 1B78     		ldrb	r3, [r3, #0]
 394 0010 DBB2     		uxtb	r3, r3
 395 0012 03F07F03 		and	r3, r3, #127
 396 0016 FB71     		strb	r3, [r7, #7]
 514:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 515:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         #if(UART_4D_LCD_RXBUFFERSIZE > UART_4D_LCD_FIFO_LENGTH)
 516:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             if( UART_4D_LCD_rxBufferOverflow != 0u )
ARM GAS  C:\Users\GRAZIA~1.RAV\AppData\Local\Temp\ccBCmqGf.s 			page 17


 517:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             {
 518:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 status |= UART_4D_LCD_RX_STS_SOFT_BUFF_OVER;
 519:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 UART_4D_LCD_rxBufferOverflow = 0u;
 520:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             }
 521:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         #endif /* UART_4D_LCD_RXBUFFERSIZE */
 522:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 523:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         return(status);
 397              		.loc 1 523 0
 398 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 524:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     }
 399              		.loc 1 524 0
 400 001a 1846     		mov	r0, r3
 401 001c 07F10C07 		add	r7, r7, #12
 402 0020 BD46     		mov	sp, r7
 403 0022 80BC     		pop	{r7}
 404 0024 7047     		bx	lr
 405              		.cfi_endproc
 406              	.LFE8:
 407              		.size	UART_4D_LCD_ReadRxStatus, .-UART_4D_LCD_ReadRxStatus
 408 0026 00BF     		.section	.text.UART_4D_LCD_GetChar,"ax",%progbits
 409              		.align	2
 410              		.global	UART_4D_LCD_GetChar
 411              		.thumb
 412              		.thumb_func
 413              		.type	UART_4D_LCD_GetChar, %function
 414              	UART_4D_LCD_GetChar:
 415              	.LFB9:
 525:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 526:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 527:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     /*******************************************************************************
 528:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Function Name: UART_4D_LCD_GetChar
 529:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     ********************************************************************************
 530:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
 531:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Summary:
 532:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  Reads UART RX buffer immediately, if data is not available or an error
 533:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  condition exists, zero is returned; otherwise, character is read and
 534:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  returned.
 535:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
 536:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Parameters:
 537:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  None.
 538:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
 539:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Return:
 540:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  Character read from UART RX buffer. ASCII characters from 1 to 255 are valid.
 541:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  A returned zero signifies an error condition or no data available.
 542:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
 543:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Global Variables:
 544:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  UART_4D_LCD_rxBuffer - RAM buffer pointer for save received data.
 545:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  UART_4D_LCD_rxBufferWrite - cyclic index for write to rxBuffer,
 546:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *     checked to identify new data.
 547:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  UART_4D_LCD_rxBufferRead - cyclic index for read from rxBuffer,
 548:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *     incremented after each byte has been read from buffer.
 549:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  UART_4D_LCD_rxBufferLoopDetect - creared if loop condition was detected
 550:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *     in RX ISR.
 551:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
 552:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Reentrant:
 553:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  No.
 554:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
ARM GAS  C:\Users\GRAZIA~1.RAV\AppData\Local\Temp\ccBCmqGf.s 			page 18


 555:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *******************************************************************************/
 556:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     uint8 UART_4D_LCD_GetChar(void) 
 557:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     {
 416              		.loc 1 557 0
 417              		.cfi_startproc
 418              		@ args = 0, pretend = 0, frame = 8
 419              		@ frame_needed = 1, uses_anonymous_args = 0
 420              		@ link register save eliminated.
 421 0000 80B4     		push	{r7}
 422              	.LCFI24:
 423              		.cfi_def_cfa_offset 4
 424              		.cfi_offset 7, -4
 425 0002 83B0     		sub	sp, sp, #12
 426              	.LCFI25:
 427              		.cfi_def_cfa_offset 16
 428 0004 00AF     		add	r7, sp, #0
 429              	.LCFI26:
 430              		.cfi_def_cfa_register 7
 558:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         uint8 rxData = 0u;
 431              		.loc 1 558 0
 432 0006 4FF00003 		mov	r3, #0
 433 000a FB71     		strb	r3, [r7, #7]
 559:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         uint8 rxStatus;
 560:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 561:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         #if(UART_4D_LCD_RXBUFFERSIZE > UART_4D_LCD_FIFO_LENGTH)
 562:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             uint8 loc_rxBufferRead;
 563:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             uint8 loc_rxBufferWrite;
 564:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             /* Protect variables that could change on interrupt. */
 565:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             /* Disable Rx interrupt. */
 566:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             #if(UART_4D_LCD_RX_INTERRUPT_ENABLED)
 567:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 UART_4D_LCD_DisableRxInt();
 568:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             #endif /* UART_4D_LCD_RX_INTERRUPT_ENABLED */
 569:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             loc_rxBufferRead = UART_4D_LCD_rxBufferRead;
 570:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             loc_rxBufferWrite = UART_4D_LCD_rxBufferWrite;
 571:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 572:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             if( (UART_4D_LCD_rxBufferLoopDetect != 0u) || (loc_rxBufferRead != loc_rxBufferWrite) )
 573:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             {
 574:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 rxData = UART_4D_LCD_rxBuffer[loc_rxBufferRead];
 575:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 loc_rxBufferRead++;
 576:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 if(loc_rxBufferRead >= UART_4D_LCD_RXBUFFERSIZE)
 577:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 {
 578:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                     loc_rxBufferRead = 0u;
 579:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 }
 580:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 /* Update the real pointer */
 581:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 UART_4D_LCD_rxBufferRead = loc_rxBufferRead;
 582:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 583:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 if(UART_4D_LCD_rxBufferLoopDetect > 0u )
 584:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 {
 585:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                     UART_4D_LCD_rxBufferLoopDetect = 0u;
 586:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                     #if( (UART_4D_LCD_RX_INTERRUPT_ENABLED) && (UART_4D_LCD_FLOW_CONTROL != 0u) )
 587:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                         /* When Hardware Flow Control selected - return RX mask */
 588:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                         #if( UART_4D_LCD_HD_ENABLED )
 589:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                             if((UART_4D_LCD_CONTROL_REG & UART_4D_LCD_CTRL_HD_SEND) == 0u)
 590:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                             {   /* In Half duplex mode return RX mask only if
 591:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                                 *  RX configuration set, otherwise
 592:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                                 *  mask will be returned in LoadRxConfig() API.
 593:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                                 */
ARM GAS  C:\Users\GRAZIA~1.RAV\AppData\Local\Temp\ccBCmqGf.s 			page 19


 594:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                                 UART_4D_LCD_RXSTATUS_MASK_REG  |= UART_4D_LCD_RX_STS_FIFO_NOTEMPTY;
 595:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                             }
 596:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                         #else
 597:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                             UART_4D_LCD_RXSTATUS_MASK_REG  |= UART_4D_LCD_RX_STS_FIFO_NOTEMPTY;
 598:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                         #endif /* end UART_4D_LCD_HD_ENABLED */
 599:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                     #endif /* UART_4D_LCD_RX_INTERRUPT_ENABLED and Hardware flow control*/
 600:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 }
 601:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 602:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             }
 603:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             else
 604:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             {   rxStatus = UART_4D_LCD_RXSTATUS_REG;
 605:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 if((rxStatus & UART_4D_LCD_RX_STS_FIFO_NOTEMPTY) != 0u)
 606:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 {   /* Read received data from FIFO*/
 607:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                     rxData = UART_4D_LCD_RXDATA_REG;
 608:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                     /*Check status on error*/
 609:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                     if((rxStatus & (UART_4D_LCD_RX_STS_BREAK | UART_4D_LCD_RX_STS_PAR_ERROR |
 610:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                                    UART_4D_LCD_RX_STS_STOP_ERROR | UART_4D_LCD_RX_STS_OVERRUN)) != 
 611:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                     {
 612:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                         rxData = 0u;
 613:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                     }
 614:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 }
 615:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             }
 616:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 617:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             /* Enable Rx interrupt. */
 618:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             #if(UART_4D_LCD_RX_INTERRUPT_ENABLED)
 619:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 UART_4D_LCD_EnableRxInt();
 620:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             #endif /* UART_4D_LCD_RX_INTERRUPT_ENABLED */
 621:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 622:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         #else /* UART_4D_LCD_RXBUFFERSIZE > UART_4D_LCD_FIFO_LENGTH */
 623:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 624:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             rxStatus =UART_4D_LCD_RXSTATUS_REG;
 434              		.loc 1 624 0
 435 000c 46F26A53 		movw	r3, #25962
 436 0010 C4F20003 		movt	r3, 16384
 437 0014 1B78     		ldrb	r3, [r3, #0]
 438 0016 BB71     		strb	r3, [r7, #6]
 625:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             if((rxStatus & UART_4D_LCD_RX_STS_FIFO_NOTEMPTY) != 0u)
 439              		.loc 1 625 0
 440 0018 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 441 001a 03F02003 		and	r3, r3, #32
 442 001e 002B     		cmp	r3, #0
 443 0020 0DD0     		beq	.L15
 626:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             {   /* Read received data from FIFO*/
 627:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 rxData = UART_4D_LCD_RXDATA_REG;
 444              		.loc 1 627 0
 445 0022 46F24753 		movw	r3, #25927
 446 0026 C4F20003 		movt	r3, 16384
 447 002a 1B78     		ldrb	r3, [r3, #0]
 448 002c FB71     		strb	r3, [r7, #7]
 628:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 /*Check status on error*/
 629:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 if((rxStatus & (UART_4D_LCD_RX_STS_BREAK | UART_4D_LCD_RX_STS_PAR_ERROR |
 630:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                                UART_4D_LCD_RX_STS_STOP_ERROR | UART_4D_LCD_RX_STS_OVERRUN)) != 0u)
 449              		.loc 1 630 0
 450 002e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 451 0030 03F01E03 		and	r3, r3, #30
 629:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 if((rxStatus & (UART_4D_LCD_RX_STS_BREAK | UART_4D_LCD_RX_STS_PAR_ERROR |
 452              		.loc 1 629 0
ARM GAS  C:\Users\GRAZIA~1.RAV\AppData\Local\Temp\ccBCmqGf.s 			page 20


 453 0034 002B     		cmp	r3, #0
 454 0036 02D0     		beq	.L15
 631:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 {
 632:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                     rxData = 0u;
 455              		.loc 1 632 0
 456 0038 4FF00003 		mov	r3, #0
 457 003c FB71     		strb	r3, [r7, #7]
 458              	.L15:
 633:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 }
 634:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             }
 635:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         #endif /* UART_4D_LCD_RXBUFFERSIZE > UART_4D_LCD_FIFO_LENGTH */
 636:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 637:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         return(rxData);
 459              		.loc 1 637 0
 460 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 638:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     }
 461              		.loc 1 638 0
 462 0040 1846     		mov	r0, r3
 463 0042 07F10C07 		add	r7, r7, #12
 464 0046 BD46     		mov	sp, r7
 465 0048 80BC     		pop	{r7}
 466 004a 7047     		bx	lr
 467              		.cfi_endproc
 468              	.LFE9:
 469              		.size	UART_4D_LCD_GetChar, .-UART_4D_LCD_GetChar
 470              		.section	.text.UART_4D_LCD_GetByte,"ax",%progbits
 471              		.align	2
 472              		.global	UART_4D_LCD_GetByte
 473              		.thumb
 474              		.thumb_func
 475              		.type	UART_4D_LCD_GetByte, %function
 476              	UART_4D_LCD_GetByte:
 477              	.LFB10:
 639:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 640:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 641:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     /*******************************************************************************
 642:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Function Name: UART_4D_LCD_GetByte
 643:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     ********************************************************************************
 644:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
 645:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Summary:
 646:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  Grab the next available byte of data from the recieve FIFO
 647:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
 648:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Parameters:
 649:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  None.
 650:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
 651:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Return:
 652:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  MSB contains Status Register and LSB contains UART RX data
 653:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
 654:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Reentrant:
 655:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  No.
 656:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
 657:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *******************************************************************************/
 658:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     uint16 UART_4D_LCD_GetByte(void) 
 659:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     {
 478              		.loc 1 659 0
 479              		.cfi_startproc
 480              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\GRAZIA~1.RAV\AppData\Local\Temp\ccBCmqGf.s 			page 21


 481              		@ frame_needed = 1, uses_anonymous_args = 0
 482 0000 98B5     		push	{r3, r4, r7, lr}
 483              	.LCFI27:
 484              		.cfi_def_cfa_offset 16
 485              		.cfi_offset 3, -16
 486              		.cfi_offset 4, -12
 487              		.cfi_offset 7, -8
 488              		.cfi_offset 14, -4
 489 0002 00AF     		add	r7, sp, #0
 490              	.LCFI28:
 491              		.cfi_def_cfa_register 7
 660:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         return ( ((uint16)UART_4D_LCD_ReadRxStatus() << 8u) | UART_4D_LCD_ReadRxData() );
 492              		.loc 1 660 0
 493 0004 FFF7FEFF 		bl	UART_4D_LCD_ReadRxStatus
 494 0008 0346     		mov	r3, r0
 495 000a 4FEA0323 		lsl	r3, r3, #8
 496 000e 9CB2     		uxth	r4, r3
 497 0010 FFF7FEFF 		bl	UART_4D_LCD_ReadRxData
 498 0014 0346     		mov	r3, r0
 499 0016 2246     		mov	r2, r4	@ movhi
 500 0018 1343     		orrs	r3, r3, r2
 501 001a 9BB2     		uxth	r3, r3
 502 001c 9BB2     		uxth	r3, r3
 661:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     }
 503              		.loc 1 661 0
 504 001e 1846     		mov	r0, r3
 505 0020 98BD     		pop	{r3, r4, r7, pc}
 506              		.cfi_endproc
 507              	.LFE10:
 508              		.size	UART_4D_LCD_GetByte, .-UART_4D_LCD_GetByte
 509 0022 00BF     		.section	.text.UART_4D_LCD_GetRxBufferSize,"ax",%progbits
 510              		.align	2
 511              		.global	UART_4D_LCD_GetRxBufferSize
 512              		.thumb
 513              		.thumb_func
 514              		.type	UART_4D_LCD_GetRxBufferSize, %function
 515              	UART_4D_LCD_GetRxBufferSize:
 516              	.LFB11:
 662:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 663:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 664:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     /*******************************************************************************
 665:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Function Name: UART_4D_LCD_GetRxBufferSize
 666:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     ********************************************************************************
 667:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
 668:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Summary:
 669:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  Determine the amount of bytes left in the RX buffer and return the count in
 670:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  bytes
 671:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
 672:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Parameters:
 673:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  None.
 674:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
 675:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Return:
 676:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  uint8: Integer count of the number of bytes left
 677:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  in the RX buffer
 678:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
 679:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Global Variables:
 680:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  UART_4D_LCD_rxBufferWrite - used to calculate left bytes.
ARM GAS  C:\Users\GRAZIA~1.RAV\AppData\Local\Temp\ccBCmqGf.s 			page 22


 681:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  UART_4D_LCD_rxBufferRead - used to calculate left bytes.
 682:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  UART_4D_LCD_rxBufferLoopDetect - checked to decide left bytes amount.
 683:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
 684:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Reentrant:
 685:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  No.
 686:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
 687:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Theory:
 688:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  Allows the user to find out how full the RX Buffer is.
 689:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
 690:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *******************************************************************************/
 691:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     uint8 UART_4D_LCD_GetRxBufferSize(void)
 692:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                                                             
 693:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     {
 517              		.loc 1 693 0
 518              		.cfi_startproc
 519              		@ args = 0, pretend = 0, frame = 8
 520              		@ frame_needed = 1, uses_anonymous_args = 0
 521              		@ link register save eliminated.
 522 0000 80B4     		push	{r7}
 523              	.LCFI29:
 524              		.cfi_def_cfa_offset 4
 525              		.cfi_offset 7, -4
 526 0002 83B0     		sub	sp, sp, #12
 527              	.LCFI30:
 528              		.cfi_def_cfa_offset 16
 529 0004 00AF     		add	r7, sp, #0
 530              	.LCFI31:
 531              		.cfi_def_cfa_register 7
 694:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         uint8 size;
 695:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 696:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         #if(UART_4D_LCD_RXBUFFERSIZE > UART_4D_LCD_FIFO_LENGTH)
 697:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 698:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             /* Disable Rx interrupt. */
 699:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             /* Protect variables that could change on interrupt. */
 700:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             #if(UART_4D_LCD_RX_INTERRUPT_ENABLED)
 701:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 UART_4D_LCD_DisableRxInt();
 702:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             #endif /* UART_4D_LCD_RX_INTERRUPT_ENABLED */
 703:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 704:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             if(UART_4D_LCD_rxBufferRead == UART_4D_LCD_rxBufferWrite)
 705:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             {
 706:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 if(UART_4D_LCD_rxBufferLoopDetect > 0u)
 707:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 {
 708:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                     size = UART_4D_LCD_RXBUFFERSIZE;
 709:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 }
 710:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 else
 711:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 {
 712:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                     size = 0u;
 713:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 }
 714:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             }
 715:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             else if(UART_4D_LCD_rxBufferRead < UART_4D_LCD_rxBufferWrite)
 716:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             {
 717:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 size = (UART_4D_LCD_rxBufferWrite - UART_4D_LCD_rxBufferRead);
 718:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             }
 719:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             else
 720:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             {
 721:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 size = (UART_4D_LCD_RXBUFFERSIZE - UART_4D_LCD_rxBufferRead) + UART_4D_LCD_rxBuffer
 722:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             }
ARM GAS  C:\Users\GRAZIA~1.RAV\AppData\Local\Temp\ccBCmqGf.s 			page 23


 723:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 724:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             /* Enable Rx interrupt. */
 725:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             #if(UART_4D_LCD_RX_INTERRUPT_ENABLED)
 726:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 UART_4D_LCD_EnableRxInt();
 727:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             #endif /* End UART_4D_LCD_RX_INTERRUPT_ENABLED */
 728:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 729:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         #else /* UART_4D_LCD_RXBUFFERSIZE > UART_4D_LCD_FIFO_LENGTH */
 730:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 731:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             /* We can only know if there is data in the fifo. */
 732:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             size = ((UART_4D_LCD_RXSTATUS_REG & UART_4D_LCD_RX_STS_FIFO_NOTEMPTY) != 0u) ? 1u : 0u;
 532              		.loc 1 732 0
 533 0006 46F26A53 		movw	r3, #25962
 534 000a C4F20003 		movt	r3, 16384
 535 000e 1B78     		ldrb	r3, [r3, #0]
 536 0010 DBB2     		uxtb	r3, r3
 537 0012 03F02003 		and	r3, r3, #32
 538 0016 002B     		cmp	r3, #0
 539 0018 02D0     		beq	.L20
 540              		.loc 1 732 0 is_stmt 0 discriminator 1
 541 001a 4FF00103 		mov	r3, #1
 542 001e 01E0     		b	.L21
 543              	.L20:
 544              		.loc 1 732 0 discriminator 2
 545 0020 4FF00003 		mov	r3, #0
 546              	.L21:
 547              		.loc 1 732 0 discriminator 3
 548 0024 FB71     		strb	r3, [r7, #7]
 733:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 734:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         #endif /* End UART_4D_LCD_RXBUFFERSIZE > UART_4D_LCD_FIFO_LENGTH */
 735:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 736:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         return(size);
 549              		.loc 1 736 0 is_stmt 1 discriminator 3
 550 0026 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 737:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     }
 551              		.loc 1 737 0 discriminator 3
 552 0028 1846     		mov	r0, r3
 553 002a 07F10C07 		add	r7, r7, #12
 554 002e BD46     		mov	sp, r7
 555 0030 80BC     		pop	{r7}
 556 0032 7047     		bx	lr
 557              		.cfi_endproc
 558              	.LFE11:
 559              		.size	UART_4D_LCD_GetRxBufferSize, .-UART_4D_LCD_GetRxBufferSize
 560              		.section	.text.UART_4D_LCD_ClearRxBuffer,"ax",%progbits
 561              		.align	2
 562              		.global	UART_4D_LCD_ClearRxBuffer
 563              		.thumb
 564              		.thumb_func
 565              		.type	UART_4D_LCD_ClearRxBuffer, %function
 566              	UART_4D_LCD_ClearRxBuffer:
 567              	.LFB12:
 738:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 739:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 740:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     /*******************************************************************************
 741:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Function Name: UART_4D_LCD_ClearRxBuffer
 742:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     ********************************************************************************
 743:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
ARM GAS  C:\Users\GRAZIA~1.RAV\AppData\Local\Temp\ccBCmqGf.s 			page 24


 744:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Summary:
 745:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  Clears the RX RAM buffer by setting the read and write pointers both to zero.
 746:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  Clears hardware RX FIFO.
 747:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
 748:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Parameters:
 749:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  None.
 750:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
 751:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Return:
 752:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  None.
 753:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
 754:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Global Variables:
 755:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  UART_4D_LCD_rxBufferWrite - cleared to zero.
 756:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  UART_4D_LCD_rxBufferRead - cleared to zero.
 757:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  UART_4D_LCD_rxBufferLoopDetect - cleared to zero.
 758:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  UART_4D_LCD_rxBufferOverflow - cleared to zero.
 759:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
 760:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Reentrant:
 761:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  No.
 762:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
 763:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Theory:
 764:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  Setting the pointers to zero makes the system believe there is no data to
 765:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  read and writing will resume at address 0 overwriting any data that may
 766:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  have remained in the RAM.
 767:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
 768:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Side Effects:
 769:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  Any received data not read from the RAM or FIFO buffer will be lost.
 770:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *******************************************************************************/
 771:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     void UART_4D_LCD_ClearRxBuffer(void) 
 772:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     {
 568              		.loc 1 772 0
 569              		.cfi_startproc
 570              		@ args = 0, pretend = 0, frame = 8
 571              		@ frame_needed = 1, uses_anonymous_args = 0
 572 0000 80B5     		push	{r7, lr}
 573              	.LCFI32:
 574              		.cfi_def_cfa_offset 8
 575              		.cfi_offset 7, -8
 576              		.cfi_offset 14, -4
 577 0002 82B0     		sub	sp, sp, #8
 578              	.LCFI33:
 579              		.cfi_def_cfa_offset 16
 580 0004 00AF     		add	r7, sp, #0
 581              	.LCFI34:
 582              		.cfi_def_cfa_register 7
 773:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         uint8 enableInterrupts;
 774:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 775:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         /* clear the HW FIFO */
 776:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         /* Enter critical section */
 777:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         enableInterrupts = CyEnterCriticalSection();
 583              		.loc 1 777 0
 584 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 585 000a 0346     		mov	r3, r0
 586 000c FB71     		strb	r3, [r7, #7]
 778:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         UART_4D_LCD_RXDATA_AUX_CTL_REG |=  UART_4D_LCD_RX_FIFO_CLR;
 587              		.loc 1 778 0
 588 000e 46F29753 		movw	r3, #26007
 589 0012 C4F20003 		movt	r3, 16384
ARM GAS  C:\Users\GRAZIA~1.RAV\AppData\Local\Temp\ccBCmqGf.s 			page 25


 590 0016 46F29752 		movw	r2, #26007
 591 001a C4F20002 		movt	r2, 16384
 592 001e 1278     		ldrb	r2, [r2, #0]
 593 0020 D2B2     		uxtb	r2, r2
 594 0022 42F00102 		orr	r2, r2, #1
 595 0026 D2B2     		uxtb	r2, r2
 596 0028 1A70     		strb	r2, [r3, #0]
 779:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         UART_4D_LCD_RXDATA_AUX_CTL_REG &= (uint8)~UART_4D_LCD_RX_FIFO_CLR;
 597              		.loc 1 779 0
 598 002a 46F29753 		movw	r3, #26007
 599 002e C4F20003 		movt	r3, 16384
 600 0032 46F29752 		movw	r2, #26007
 601 0036 C4F20002 		movt	r2, 16384
 602 003a 1278     		ldrb	r2, [r2, #0]
 603 003c D2B2     		uxtb	r2, r2
 604 003e 22F00102 		bic	r2, r2, #1
 605 0042 D2B2     		uxtb	r2, r2
 606 0044 1A70     		strb	r2, [r3, #0]
 780:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         /* Exit critical section */
 781:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         CyExitCriticalSection(enableInterrupts);
 607              		.loc 1 781 0
 608 0046 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 609 0048 1846     		mov	r0, r3
 610 004a FFF7FEFF 		bl	CyExitCriticalSection
 782:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 783:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         #if(UART_4D_LCD_RXBUFFERSIZE > UART_4D_LCD_FIFO_LENGTH)
 784:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             /* Disable Rx interrupt. */
 785:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             /* Protect variables that could change on interrupt. */
 786:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             #if(UART_4D_LCD_RX_INTERRUPT_ENABLED)
 787:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 UART_4D_LCD_DisableRxInt();
 788:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             #endif /* End UART_4D_LCD_RX_INTERRUPT_ENABLED */
 789:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 790:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             UART_4D_LCD_rxBufferRead = 0u;
 791:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             UART_4D_LCD_rxBufferWrite = 0u;
 792:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             UART_4D_LCD_rxBufferLoopDetect = 0u;
 793:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             UART_4D_LCD_rxBufferOverflow = 0u;
 794:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 795:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             /* Enable Rx interrupt. */
 796:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             #if(UART_4D_LCD_RX_INTERRUPT_ENABLED)
 797:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 UART_4D_LCD_EnableRxInt();
 798:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             #endif /* End UART_4D_LCD_RX_INTERRUPT_ENABLED */
 799:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         #endif /* End UART_4D_LCD_RXBUFFERSIZE > UART_4D_LCD_FIFO_LENGTH */
 800:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 801:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     }
 611              		.loc 1 801 0
 612 004e 07F10807 		add	r7, r7, #8
 613 0052 BD46     		mov	sp, r7
 614 0054 80BD     		pop	{r7, pc}
 615              		.cfi_endproc
 616              	.LFE12:
 617              		.size	UART_4D_LCD_ClearRxBuffer, .-UART_4D_LCD_ClearRxBuffer
 618 0056 00BF     		.section	.text.UART_4D_LCD_SetRxAddressMode,"ax",%progbits
 619              		.align	2
 620              		.global	UART_4D_LCD_SetRxAddressMode
 621              		.thumb
 622              		.thumb_func
 623              		.type	UART_4D_LCD_SetRxAddressMode, %function
ARM GAS  C:\Users\GRAZIA~1.RAV\AppData\Local\Temp\ccBCmqGf.s 			page 26


 624              	UART_4D_LCD_SetRxAddressMode:
 625              	.LFB13:
 802:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 803:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 804:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     /*******************************************************************************
 805:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Function Name: UART_4D_LCD_SetRxAddressMode
 806:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     ********************************************************************************
 807:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
 808:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Summary:
 809:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  Set the receive addressing mode
 810:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
 811:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Parameters:
 812:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  addressMode: Enumerated value indicating the mode of RX addressing
 813:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  UART_4D_LCD__B_UART__AM_SW_BYTE_BYTE -  Software Byte-by-Byte address
 814:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *                                               detection
 815:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  UART_4D_LCD__B_UART__AM_SW_DETECT_TO_BUFFER - Software Detect to Buffer
 816:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *                                               address detection
 817:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  UART_4D_LCD__B_UART__AM_HW_BYTE_BY_BYTE - Hardware Byte-by-Byte address
 818:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *                                               detection
 819:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  UART_4D_LCD__B_UART__AM_HW_DETECT_TO_BUFFER - Hardware Detect to Buffer
 820:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *                                               address detection
 821:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  UART_4D_LCD__B_UART__AM_NONE - No address detection
 822:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
 823:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Return:
 824:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  None.
 825:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
 826:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Global Variables:
 827:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  UART_4D_LCD_rxAddressMode - the parameter stored in this variable for
 828:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *   the farther usage in RX ISR.
 829:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  UART_4D_LCD_rxAddressDetected - set to initial state (0).
 830:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
 831:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *******************************************************************************/
 832:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     void UART_4D_LCD_SetRxAddressMode(uint8 addressMode)
 833:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                                                         
 834:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     {
 626              		.loc 1 834 0
 627              		.cfi_startproc
 628              		@ args = 0, pretend = 0, frame = 8
 629              		@ frame_needed = 1, uses_anonymous_args = 0
 630              		@ link register save eliminated.
 631 0000 80B4     		push	{r7}
 632              	.LCFI35:
 633              		.cfi_def_cfa_offset 4
 634              		.cfi_offset 7, -4
 635 0002 83B0     		sub	sp, sp, #12
 636              	.LCFI36:
 637              		.cfi_def_cfa_offset 16
 638 0004 00AF     		add	r7, sp, #0
 639              	.LCFI37:
 640              		.cfi_def_cfa_register 7
 641 0006 0346     		mov	r3, r0
 642 0008 FB71     		strb	r3, [r7, #7]
 835:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         #if(UART_4D_LCD_RXHW_ADDRESS_ENABLED)
 836:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             #if(UART_4D_LCD_CONTROL_REG_REMOVED)
 837:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 if(addressMode != 0u) { }     /* release compiler warning */
 838:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             #else /* UART_4D_LCD_CONTROL_REG_REMOVED */
 839:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 uint8 tmpCtrl;
ARM GAS  C:\Users\GRAZIA~1.RAV\AppData\Local\Temp\ccBCmqGf.s 			page 27


 840:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 tmpCtrl = UART_4D_LCD_CONTROL_REG & (uint8)~UART_4D_LCD_CTRL_RXADDR_MODE_MASK;
 841:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 tmpCtrl |= (uint8)(addressMode << UART_4D_LCD_CTRL_RXADDR_MODE0_SHIFT);
 842:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 UART_4D_LCD_CONTROL_REG = tmpCtrl;
 843:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 #if(UART_4D_LCD_RX_INTERRUPT_ENABLED && \
 844:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                    (UART_4D_LCD_RXBUFFERSIZE > UART_4D_LCD_FIFO_LENGTH) )
 845:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                     UART_4D_LCD_rxAddressMode = addressMode;
 846:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                     UART_4D_LCD_rxAddressDetected = 0u;
 847:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 #endif /* End UART_4D_LCD_RXBUFFERSIZE > UART_4D_LCD_FIFO_LENGTH*/
 848:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             #endif /* End UART_4D_LCD_CONTROL_REG_REMOVED */
 849:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         #else /* UART_4D_LCD_RXHW_ADDRESS_ENABLED */
 850:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             if(addressMode != 0u) { }     /* release compiler warning */
 851:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         #endif /* End UART_4D_LCD_RXHW_ADDRESS_ENABLED */
 852:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     }
 643              		.loc 1 852 0
 644 000a 07F10C07 		add	r7, r7, #12
 645 000e BD46     		mov	sp, r7
 646 0010 80BC     		pop	{r7}
 647 0012 7047     		bx	lr
 648              		.cfi_endproc
 649              	.LFE13:
 650              		.size	UART_4D_LCD_SetRxAddressMode, .-UART_4D_LCD_SetRxAddressMode
 651              		.section	.text.UART_4D_LCD_SetRxAddress1,"ax",%progbits
 652              		.align	2
 653              		.global	UART_4D_LCD_SetRxAddress1
 654              		.thumb
 655              		.thumb_func
 656              		.type	UART_4D_LCD_SetRxAddress1, %function
 657              	UART_4D_LCD_SetRxAddress1:
 658              	.LFB14:
 853:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 854:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 855:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     /*******************************************************************************
 856:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Function Name: UART_4D_LCD_SetRxAddress1
 857:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     ********************************************************************************
 858:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
 859:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Summary:
 860:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  Set the first hardware address compare value
 861:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
 862:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Parameters:
 863:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  address
 864:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
 865:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Return:
 866:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  None.
 867:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
 868:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *******************************************************************************/
 869:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     void UART_4D_LCD_SetRxAddress1(uint8 address) 
 870:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 871:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     {
 659              		.loc 1 871 0
 660              		.cfi_startproc
 661              		@ args = 0, pretend = 0, frame = 8
 662              		@ frame_needed = 1, uses_anonymous_args = 0
 663              		@ link register save eliminated.
 664 0000 80B4     		push	{r7}
 665              	.LCFI38:
 666              		.cfi_def_cfa_offset 4
 667              		.cfi_offset 7, -4
ARM GAS  C:\Users\GRAZIA~1.RAV\AppData\Local\Temp\ccBCmqGf.s 			page 28


 668 0002 83B0     		sub	sp, sp, #12
 669              	.LCFI39:
 670              		.cfi_def_cfa_offset 16
 671 0004 00AF     		add	r7, sp, #0
 672              	.LCFI40:
 673              		.cfi_def_cfa_register 7
 674 0006 0346     		mov	r3, r0
 675 0008 FB71     		strb	r3, [r7, #7]
 872:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         UART_4D_LCD_RXADDRESS1_REG = address;
 676              		.loc 1 872 0
 677 000a 46F22753 		movw	r3, #25895
 678 000e C4F20003 		movt	r3, 16384
 679 0012 FA79     		ldrb	r2, [r7, #7]
 680 0014 1A70     		strb	r2, [r3, #0]
 873:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     }
 681              		.loc 1 873 0
 682 0016 07F10C07 		add	r7, r7, #12
 683 001a BD46     		mov	sp, r7
 684 001c 80BC     		pop	{r7}
 685 001e 7047     		bx	lr
 686              		.cfi_endproc
 687              	.LFE14:
 688              		.size	UART_4D_LCD_SetRxAddress1, .-UART_4D_LCD_SetRxAddress1
 689              		.section	.text.UART_4D_LCD_SetRxAddress2,"ax",%progbits
 690              		.align	2
 691              		.global	UART_4D_LCD_SetRxAddress2
 692              		.thumb
 693              		.thumb_func
 694              		.type	UART_4D_LCD_SetRxAddress2, %function
 695              	UART_4D_LCD_SetRxAddress2:
 696              	.LFB15:
 874:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 875:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 876:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     /*******************************************************************************
 877:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Function Name: UART_4D_LCD_SetRxAddress2
 878:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     ********************************************************************************
 879:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
 880:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Summary:
 881:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  Set the second hardware address compare value
 882:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
 883:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Parameters:
 884:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  address
 885:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
 886:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Return:
 887:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  None.
 888:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
 889:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *******************************************************************************/
 890:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     void UART_4D_LCD_SetRxAddress2(uint8 address) 
 891:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     {
 697              		.loc 1 891 0
 698              		.cfi_startproc
 699              		@ args = 0, pretend = 0, frame = 8
 700              		@ frame_needed = 1, uses_anonymous_args = 0
 701              		@ link register save eliminated.
 702 0000 80B4     		push	{r7}
 703              	.LCFI41:
 704              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\GRAZIA~1.RAV\AppData\Local\Temp\ccBCmqGf.s 			page 29


 705              		.cfi_offset 7, -4
 706 0002 83B0     		sub	sp, sp, #12
 707              	.LCFI42:
 708              		.cfi_def_cfa_offset 16
 709 0004 00AF     		add	r7, sp, #0
 710              	.LCFI43:
 711              		.cfi_def_cfa_register 7
 712 0006 0346     		mov	r3, r0
 713 0008 FB71     		strb	r3, [r7, #7]
 892:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         UART_4D_LCD_RXADDRESS2_REG = address;
 714              		.loc 1 892 0
 715 000a 46F23753 		movw	r3, #25911
 716 000e C4F20003 		movt	r3, 16384
 717 0012 FA79     		ldrb	r2, [r7, #7]
 718 0014 1A70     		strb	r2, [r3, #0]
 893:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     }
 719              		.loc 1 893 0
 720 0016 07F10C07 		add	r7, r7, #12
 721 001a BD46     		mov	sp, r7
 722 001c 80BC     		pop	{r7}
 723 001e 7047     		bx	lr
 724              		.cfi_endproc
 725              	.LFE15:
 726              		.size	UART_4D_LCD_SetRxAddress2, .-UART_4D_LCD_SetRxAddress2
 727              		.section	.text.UART_4D_LCD_SetTxInterruptMode,"ax",%progbits
 728              		.align	2
 729              		.global	UART_4D_LCD_SetTxInterruptMode
 730              		.thumb
 731              		.thumb_func
 732              		.type	UART_4D_LCD_SetTxInterruptMode, %function
 733              	UART_4D_LCD_SetTxInterruptMode:
 734              	.LFB16:
 894:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 895:.\Generated_Source\PSoC5/UART_4D_LCD.c **** #endif  /* UART_4D_LCD_RX_ENABLED || UART_4D_LCD_HD_ENABLED*/
 896:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 897:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 898:.\Generated_Source\PSoC5/UART_4D_LCD.c **** #if( (UART_4D_LCD_TX_ENABLED) || (UART_4D_LCD_HD_ENABLED) )
 899:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 900:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     #if(UART_4D_LCD_TX_INTERRUPT_ENABLED)
 901:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 902:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         /*******************************************************************************
 903:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         * Function Name: UART_4D_LCD_EnableTxInt
 904:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         ********************************************************************************
 905:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         *
 906:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         * Summary:
 907:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         *  Enable TX interrupt generation
 908:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         *
 909:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         * Parameters:
 910:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         *  None.
 911:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         *
 912:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         * Return:
 913:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         *  None.
 914:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         *
 915:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         * Theory:
 916:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         *  Enable the interrupt output -or- the interrupt component itself
 917:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         *
 918:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         *******************************************************************************/
ARM GAS  C:\Users\GRAZIA~1.RAV\AppData\Local\Temp\ccBCmqGf.s 			page 30


 919:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         void UART_4D_LCD_EnableTxInt(void) 
 920:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         {
 921:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             CyIntEnable(UART_4D_LCD_TX_VECT_NUM);
 922:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         }
 923:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 924:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 925:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         /*******************************************************************************
 926:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         * Function Name: UART_4D_LCD_DisableTxInt
 927:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         ********************************************************************************
 928:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         *
 929:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         * Summary:
 930:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         *  Disable TX interrupt generation
 931:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         *
 932:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         * Parameters:
 933:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         *  None.
 934:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         *
 935:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         * Return:
 936:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         *  None.
 937:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         *
 938:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         * Theory:
 939:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         *  Disable the interrupt output -or- the interrupt component itself
 940:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         *
 941:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         *******************************************************************************/
 942:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         void UART_4D_LCD_DisableTxInt(void) 
 943:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         {
 944:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             CyIntDisable(UART_4D_LCD_TX_VECT_NUM);
 945:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         }
 946:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 947:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     #endif /* UART_4D_LCD_TX_INTERRUPT_ENABLED */
 948:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 949:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 950:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     /*******************************************************************************
 951:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Function Name: UART_4D_LCD_SetTxInterruptMode
 952:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     ********************************************************************************
 953:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
 954:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Summary:
 955:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  Configure which status bits trigger an interrupt event
 956:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
 957:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Parameters:
 958:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  intSrc: An or'd combination of the desired status bit masks (defined in
 959:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *          the header file)
 960:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
 961:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Return:
 962:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  None.
 963:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
 964:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Theory:
 965:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  Enables the output of specific status bits to the interrupt controller
 966:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
 967:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *******************************************************************************/
 968:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     void UART_4D_LCD_SetTxInterruptMode(uint8 intSrc) 
 969:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     {
 735              		.loc 1 969 0
 736              		.cfi_startproc
 737              		@ args = 0, pretend = 0, frame = 8
 738              		@ frame_needed = 1, uses_anonymous_args = 0
 739              		@ link register save eliminated.
 740 0000 80B4     		push	{r7}
ARM GAS  C:\Users\GRAZIA~1.RAV\AppData\Local\Temp\ccBCmqGf.s 			page 31


 741              	.LCFI44:
 742              		.cfi_def_cfa_offset 4
 743              		.cfi_offset 7, -4
 744 0002 83B0     		sub	sp, sp, #12
 745              	.LCFI45:
 746              		.cfi_def_cfa_offset 16
 747 0004 00AF     		add	r7, sp, #0
 748              	.LCFI46:
 749              		.cfi_def_cfa_register 7
 750 0006 0346     		mov	r3, r0
 751 0008 FB71     		strb	r3, [r7, #7]
 970:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         UART_4D_LCD_TXSTATUS_MASK_REG = intSrc;
 752              		.loc 1 970 0
 753 000a 46F28A53 		movw	r3, #25994
 754 000e C4F20003 		movt	r3, 16384
 755 0012 FA79     		ldrb	r2, [r7, #7]
 756 0014 1A70     		strb	r2, [r3, #0]
 971:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     }
 757              		.loc 1 971 0
 758 0016 07F10C07 		add	r7, r7, #12
 759 001a BD46     		mov	sp, r7
 760 001c 80BC     		pop	{r7}
 761 001e 7047     		bx	lr
 762              		.cfi_endproc
 763              	.LFE16:
 764              		.size	UART_4D_LCD_SetTxInterruptMode, .-UART_4D_LCD_SetTxInterruptMode
 765              		.section	.text.UART_4D_LCD_WriteTxData,"ax",%progbits
 766              		.align	2
 767              		.global	UART_4D_LCD_WriteTxData
 768              		.thumb
 769              		.thumb_func
 770              		.type	UART_4D_LCD_WriteTxData, %function
 771              	UART_4D_LCD_WriteTxData:
 772              	.LFB17:
 972:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 973:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
 974:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     /*******************************************************************************
 975:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Function Name: UART_4D_LCD_WriteTxData
 976:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     ********************************************************************************
 977:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
 978:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Summary:
 979:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  Write a byte of data to the Transmit FIFO or TX buffer to be sent when the
 980:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  bus is available. WriteTxData sends a byte without checking for buffer room
 981:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  or status. It is up to the user to separately check status.
 982:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
 983:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Parameters:
 984:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  TXDataByte: byte of data to place in the transmit FIFO
 985:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
 986:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Return:
 987:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * void
 988:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
 989:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Global Variables:
 990:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  UART_4D_LCD_txBuffer - RAM buffer pointer for save data for transmission
 991:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  UART_4D_LCD_txBufferWrite - cyclic index for write to txBuffer,
 992:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *    incremented after each byte saved to buffer.
 993:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  UART_4D_LCD_txBufferRead - cyclic index for read from txBuffer,
 994:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *    checked to identify the condition to write to FIFO directly or to TX buffer
ARM GAS  C:\Users\GRAZIA~1.RAV\AppData\Local\Temp\ccBCmqGf.s 			page 32


 995:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  UART_4D_LCD_initVar - checked to identify that the component has been
 996:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *    initialized.
 997:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
 998:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Reentrant:
 999:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  No.
1000:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
1001:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *******************************************************************************/
1002:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     void UART_4D_LCD_WriteTxData(uint8 txDataByte) 
1003:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     {
 773              		.loc 1 1003 0
 774              		.cfi_startproc
 775              		@ args = 0, pretend = 0, frame = 8
 776              		@ frame_needed = 1, uses_anonymous_args = 0
 777              		@ link register save eliminated.
 778 0000 80B4     		push	{r7}
 779              	.LCFI47:
 780              		.cfi_def_cfa_offset 4
 781              		.cfi_offset 7, -4
 782 0002 83B0     		sub	sp, sp, #12
 783              	.LCFI48:
 784              		.cfi_def_cfa_offset 16
 785 0004 00AF     		add	r7, sp, #0
 786              	.LCFI49:
 787              		.cfi_def_cfa_register 7
 788 0006 0346     		mov	r3, r0
 789 0008 FB71     		strb	r3, [r7, #7]
1004:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         /* If not Initialized then skip this function*/
1005:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         if(UART_4D_LCD_initVar != 0u)
 790              		.loc 1 1005 0
 791 000a 40F20003 		movw	r3, #:lower16:UART_4D_LCD_initVar
 792 000e C0F20003 		movt	r3, #:upper16:UART_4D_LCD_initVar
 793 0012 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 794 0014 002B     		cmp	r3, #0
 795 0016 05D0     		beq	.L28
1006:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         {
1007:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             #if(UART_4D_LCD_TXBUFFERSIZE > UART_4D_LCD_FIFO_LENGTH)
1008:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
1009:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 /* Disable Tx interrupt. */
1010:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 /* Protect variables that could change on interrupt. */
1011:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 #if(UART_4D_LCD_TX_INTERRUPT_ENABLED)
1012:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                     UART_4D_LCD_DisableTxInt();
1013:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 #endif /* End UART_4D_LCD_TX_INTERRUPT_ENABLED */
1014:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
1015:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 if( (UART_4D_LCD_txBufferRead == UART_4D_LCD_txBufferWrite) &&
1016:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                     ((UART_4D_LCD_TXSTATUS_REG & UART_4D_LCD_TX_STS_FIFO_FULL) == 0u) )
1017:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 {
1018:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                     /* Add directly to the FIFO. */
1019:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                     UART_4D_LCD_TXDATA_REG = txDataByte;
1020:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 }
1021:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 else
1022:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 {
1023:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                     if(UART_4D_LCD_txBufferWrite >= UART_4D_LCD_TXBUFFERSIZE)
1024:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                     {
1025:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                         UART_4D_LCD_txBufferWrite = 0u;
1026:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                     }
1027:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
1028:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                     UART_4D_LCD_txBuffer[UART_4D_LCD_txBufferWrite] = txDataByte;
ARM GAS  C:\Users\GRAZIA~1.RAV\AppData\Local\Temp\ccBCmqGf.s 			page 33


1029:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
1030:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                     /* Add to the software buffer. */
1031:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                     UART_4D_LCD_txBufferWrite++;
1032:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
1033:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 }
1034:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
1035:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 /* Enable Tx interrupt. */
1036:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 #if(UART_4D_LCD_TX_INTERRUPT_ENABLED)
1037:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                     UART_4D_LCD_EnableTxInt();
1038:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 #endif /* End UART_4D_LCD_TX_INTERRUPT_ENABLED */
1039:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
1040:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             #else /* UART_4D_LCD_TXBUFFERSIZE > UART_4D_LCD_FIFO_LENGTH */
1041:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
1042:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 /* Add directly to the FIFO. */
1043:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 UART_4D_LCD_TXDATA_REG = txDataByte;
 796              		.loc 1 1043 0
 797 0018 46F25753 		movw	r3, #25943
 798 001c C4F20003 		movt	r3, 16384
 799 0020 FA79     		ldrb	r2, [r7, #7]
 800 0022 1A70     		strb	r2, [r3, #0]
 801              	.L28:
1044:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
1045:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             #endif /* End UART_4D_LCD_TXBUFFERSIZE > UART_4D_LCD_FIFO_LENGTH */
1046:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         }
1047:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     }
 802              		.loc 1 1047 0
 803 0024 07F10C07 		add	r7, r7, #12
 804 0028 BD46     		mov	sp, r7
 805 002a 80BC     		pop	{r7}
 806 002c 7047     		bx	lr
 807              		.cfi_endproc
 808              	.LFE17:
 809              		.size	UART_4D_LCD_WriteTxData, .-UART_4D_LCD_WriteTxData
 810 002e 00BF     		.section	.text.UART_4D_LCD_ReadTxStatus,"ax",%progbits
 811              		.align	2
 812              		.global	UART_4D_LCD_ReadTxStatus
 813              		.thumb
 814              		.thumb_func
 815              		.type	UART_4D_LCD_ReadTxStatus, %function
 816              	UART_4D_LCD_ReadTxStatus:
 817              	.LFB18:
1048:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
1049:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
1050:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     /*******************************************************************************
1051:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Function Name: UART_4D_LCD_ReadTxStatus
1052:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     ********************************************************************************
1053:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
1054:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Summary:
1055:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  Read the status register for the component
1056:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
1057:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Parameters:
1058:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  None.
1059:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
1060:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Return:
1061:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  Contents of the status register
1062:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
1063:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Theory:
ARM GAS  C:\Users\GRAZIA~1.RAV\AppData\Local\Temp\ccBCmqGf.s 			page 34


1064:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  This function reads the status register which is clear on read. It is up to
1065:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  the user to handle all bits in this return value accordingly, even if the bit
1066:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  was not enabled as an interrupt source the event happened and must be handled
1067:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  accordingly.
1068:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
1069:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *******************************************************************************/
1070:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     uint8 UART_4D_LCD_ReadTxStatus(void) 
1071:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     {
 818              		.loc 1 1071 0
 819              		.cfi_startproc
 820              		@ args = 0, pretend = 0, frame = 0
 821              		@ frame_needed = 1, uses_anonymous_args = 0
 822              		@ link register save eliminated.
 823 0000 80B4     		push	{r7}
 824              	.LCFI50:
 825              		.cfi_def_cfa_offset 4
 826              		.cfi_offset 7, -4
 827 0002 00AF     		add	r7, sp, #0
 828              	.LCFI51:
 829              		.cfi_def_cfa_register 7
1072:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         return(UART_4D_LCD_TXSTATUS_REG);
 830              		.loc 1 1072 0
 831 0004 46F26A53 		movw	r3, #25962
 832 0008 C4F20003 		movt	r3, 16384
 833 000c 1B78     		ldrb	r3, [r3, #0]
 834 000e DBB2     		uxtb	r3, r3
1073:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     }
 835              		.loc 1 1073 0
 836 0010 1846     		mov	r0, r3
 837 0012 BD46     		mov	sp, r7
 838 0014 80BC     		pop	{r7}
 839 0016 7047     		bx	lr
 840              		.cfi_endproc
 841              	.LFE18:
 842              		.size	UART_4D_LCD_ReadTxStatus, .-UART_4D_LCD_ReadTxStatus
 843              		.section	.text.UART_4D_LCD_PutChar,"ax",%progbits
 844              		.align	2
 845              		.global	UART_4D_LCD_PutChar
 846              		.thumb
 847              		.thumb_func
 848              		.type	UART_4D_LCD_PutChar, %function
 849              	UART_4D_LCD_PutChar:
 850              	.LFB19:
1074:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
1075:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
1076:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     /*******************************************************************************
1077:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Function Name: UART_4D_LCD_PutChar
1078:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     ********************************************************************************
1079:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
1080:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Summary:
1081:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  Wait to send byte until TX register or buffer has room.
1082:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
1083:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Parameters:
1084:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  txDataByte: The 8-bit data value to send across the UART.
1085:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
1086:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Return:
1087:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  None.
ARM GAS  C:\Users\GRAZIA~1.RAV\AppData\Local\Temp\ccBCmqGf.s 			page 35


1088:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
1089:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Global Variables:
1090:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  UART_4D_LCD_txBuffer - RAM buffer pointer for save data for transmission
1091:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  UART_4D_LCD_txBufferWrite - cyclic index for write to txBuffer,
1092:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *     checked to identify free space in txBuffer and incremented after each byte
1093:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *     saved to buffer.
1094:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  UART_4D_LCD_txBufferRead - cyclic index for read from txBuffer,
1095:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *     checked to identify free space in txBuffer.
1096:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  UART_4D_LCD_initVar - checked to identify that the component has been
1097:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *     initialized.
1098:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
1099:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Reentrant:
1100:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  No.
1101:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
1102:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Theory:
1103:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  Allows the user to transmit any byte of data in a single transfer
1104:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
1105:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *******************************************************************************/
1106:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     void UART_4D_LCD_PutChar(uint8 txDataByte) 
1107:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     {
 851              		.loc 1 1107 0
 852              		.cfi_startproc
 853              		@ args = 0, pretend = 0, frame = 8
 854              		@ frame_needed = 1, uses_anonymous_args = 0
 855              		@ link register save eliminated.
 856 0000 80B4     		push	{r7}
 857              	.LCFI52:
 858              		.cfi_def_cfa_offset 4
 859              		.cfi_offset 7, -4
 860 0002 83B0     		sub	sp, sp, #12
 861              	.LCFI53:
 862              		.cfi_def_cfa_offset 16
 863 0004 00AF     		add	r7, sp, #0
 864              	.LCFI54:
 865              		.cfi_def_cfa_register 7
 866 0006 0346     		mov	r3, r0
 867 0008 FB71     		strb	r3, [r7, #7]
1108:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             #if(UART_4D_LCD_TXBUFFERSIZE > UART_4D_LCD_FIFO_LENGTH)
1109:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 /* The temporary output pointer is used since it takes two instructions
1110:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 *  to increment with a wrap, and we can't risk doing that with the real
1111:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 *  pointer and getting an interrupt in between instructions.
1112:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 */
1113:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 uint8 loc_txBufferWrite;
1114:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 uint8 loc_txBufferRead;
1115:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
1116:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 do{
1117:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                     /* Block if software buffer is full, so we don't overwrite. */
1118:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                     #if ((UART_4D_LCD_TXBUFFERSIZE > UART_4D_LCD_MAX_BYTE_VALUE) && (CY_PSOC3))
1119:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                         /* Disable TX interrupt to protect variables that could change on interrupt
1120:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                         CyIntDisable(UART_4D_LCD_TX_VECT_NUM);
1121:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                     #endif /* End TXBUFFERSIZE > 255 */
1122:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                     loc_txBufferWrite = UART_4D_LCD_txBufferWrite;
1123:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                     loc_txBufferRead = UART_4D_LCD_txBufferRead;
1124:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                     #if ((UART_4D_LCD_TXBUFFERSIZE > UART_4D_LCD_MAX_BYTE_VALUE) && (CY_PSOC3))
1125:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                         /* Enable interrupt to continue transmission */
1126:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                         CyIntEnable(UART_4D_LCD_TX_VECT_NUM);
1127:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                     #endif /* End TXBUFFERSIZE > 255 */
ARM GAS  C:\Users\GRAZIA~1.RAV\AppData\Local\Temp\ccBCmqGf.s 			page 36


1128:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 }while( (loc_txBufferWrite < loc_txBufferRead) ? (loc_txBufferWrite == (loc_txBuffe
1129:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                                         ((loc_txBufferWrite - loc_txBufferRead) ==
1130:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                                         (uint8)(UART_4D_LCD_TXBUFFERSIZE - 1u)) );
1131:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
1132:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 if( (loc_txBufferRead == loc_txBufferWrite) &&
1133:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                     ((UART_4D_LCD_TXSTATUS_REG & UART_4D_LCD_TX_STS_FIFO_FULL) == 0u) )
1134:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 {
1135:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                     /* Add directly to the FIFO. */
1136:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                     UART_4D_LCD_TXDATA_REG = txDataByte;
1137:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 }
1138:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 else
1139:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 {
1140:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                     if(loc_txBufferWrite >= UART_4D_LCD_TXBUFFERSIZE)
1141:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                     {
1142:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                         loc_txBufferWrite = 0u;
1143:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                     }
1144:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                     /* Add to the software buffer. */
1145:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                     UART_4D_LCD_txBuffer[loc_txBufferWrite] = txDataByte;
1146:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                     loc_txBufferWrite++;
1147:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
1148:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                     /* Finally, update the real output pointer */
1149:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                     #if ((UART_4D_LCD_TXBUFFERSIZE > UART_4D_LCD_MAX_BYTE_VALUE) && (CY_PSOC3))
1150:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                         CyIntDisable(UART_4D_LCD_TX_VECT_NUM);
1151:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                     #endif /* End TXBUFFERSIZE > 255 */
1152:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                     UART_4D_LCD_txBufferWrite = loc_txBufferWrite;
1153:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                     #if ((UART_4D_LCD_TXBUFFERSIZE > UART_4D_LCD_MAX_BYTE_VALUE) && (CY_PSOC3))
1154:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                         CyIntEnable(UART_4D_LCD_TX_VECT_NUM);
1155:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                     #endif /* End TXBUFFERSIZE > 255 */
1156:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 }
1157:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
1158:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             #else /* UART_4D_LCD_TXBUFFERSIZE > UART_4D_LCD_FIFO_LENGTH */
1159:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
1160:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 while((UART_4D_LCD_TXSTATUS_REG & UART_4D_LCD_TX_STS_FIFO_FULL) != 0u)
 868              		.loc 1 1160 0
 869 000a 00BF     		nop
 870              	.L33:
 871              		.loc 1 1160 0 is_stmt 0 discriminator 1
 872 000c 46F26A53 		movw	r3, #25962
 873 0010 C4F20003 		movt	r3, 16384
 874 0014 1B78     		ldrb	r3, [r3, #0]
 875 0016 DBB2     		uxtb	r3, r3
 876 0018 03F02003 		and	r3, r3, #32
 877 001c 002B     		cmp	r3, #0
 878 001e F5D1     		bne	.L33
1161:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 {
1162:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                     ; /* Wait for room in the FIFO. */
1163:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 }
1164:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
1165:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 /* Add directly to the FIFO. */
1166:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 UART_4D_LCD_TXDATA_REG = txDataByte;
 879              		.loc 1 1166 0 is_stmt 1
 880 0020 46F25753 		movw	r3, #25943
 881 0024 C4F20003 		movt	r3, 16384
 882 0028 FA79     		ldrb	r2, [r7, #7]
 883 002a 1A70     		strb	r2, [r3, #0]
1167:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
1168:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             #endif /* End UART_4D_LCD_TXBUFFERSIZE > UART_4D_LCD_FIFO_LENGTH */
ARM GAS  C:\Users\GRAZIA~1.RAV\AppData\Local\Temp\ccBCmqGf.s 			page 37


1169:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     }
 884              		.loc 1 1169 0
 885 002c 07F10C07 		add	r7, r7, #12
 886 0030 BD46     		mov	sp, r7
 887 0032 80BC     		pop	{r7}
 888 0034 7047     		bx	lr
 889              		.cfi_endproc
 890              	.LFE19:
 891              		.size	UART_4D_LCD_PutChar, .-UART_4D_LCD_PutChar
 892 0036 00BF     		.section	.text.UART_4D_LCD_PutString,"ax",%progbits
 893              		.align	2
 894              		.global	UART_4D_LCD_PutString
 895              		.thumb
 896              		.thumb_func
 897              		.type	UART_4D_LCD_PutString, %function
 898              	UART_4D_LCD_PutString:
 899              	.LFB20:
1170:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
1171:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
1172:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     /*******************************************************************************
1173:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Function Name: UART_4D_LCD_PutString
1174:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     ********************************************************************************
1175:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
1176:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Summary:
1177:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  Write a Sequence of bytes on the Transmit line. Data comes from RAM or ROM.
1178:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
1179:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Parameters:
1180:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  string: char pointer to character string of Data to Send.
1181:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
1182:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Return:
1183:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  None.
1184:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
1185:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Global Variables:
1186:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  UART_4D_LCD_initVar - checked to identify that the component has been
1187:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *     initialized.
1188:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
1189:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Reentrant:
1190:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  No.
1191:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
1192:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Theory:
1193:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  This function will block if there is not enough memory to place the whole
1194:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  string, it will block until the entire string has been written to the
1195:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  transmit buffer.
1196:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
1197:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *******************************************************************************/
1198:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     void UART_4D_LCD_PutString(const char8 string[]) 
1199:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     {
 900              		.loc 1 1199 0
 901              		.cfi_startproc
 902              		@ args = 0, pretend = 0, frame = 16
 903              		@ frame_needed = 1, uses_anonymous_args = 0
 904 0000 80B5     		push	{r7, lr}
 905              	.LCFI55:
 906              		.cfi_def_cfa_offset 8
 907              		.cfi_offset 7, -8
 908              		.cfi_offset 14, -4
 909 0002 84B0     		sub	sp, sp, #16
ARM GAS  C:\Users\GRAZIA~1.RAV\AppData\Local\Temp\ccBCmqGf.s 			page 38


 910              	.LCFI56:
 911              		.cfi_def_cfa_offset 24
 912 0004 00AF     		add	r7, sp, #0
 913              	.LCFI57:
 914              		.cfi_def_cfa_register 7
 915 0006 7860     		str	r0, [r7, #4]
1200:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         uint16 buf_index = 0u;
 916              		.loc 1 1200 0
 917 0008 4FF00003 		mov	r3, #0
 918 000c FB81     		strh	r3, [r7, #14]	@ movhi
1201:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         /* If not Initialized then skip this function*/
1202:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         if(UART_4D_LCD_initVar != 0u)
 919              		.loc 1 1202 0
 920 000e 40F20003 		movw	r3, #:lower16:UART_4D_LCD_initVar
 921 0012 C0F20003 		movt	r3, #:upper16:UART_4D_LCD_initVar
 922 0016 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 923 0018 002B     		cmp	r3, #0
 924 001a 11D0     		beq	.L34
1203:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         {
1204:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             /* This is a blocking function, it will not exit until all data is sent*/
1205:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             while(string[buf_index] != (char8)0)
 925              		.loc 1 1205 0
 926 001c 0AE0     		b	.L36
 927              	.L37:
1206:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             {
1207:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 UART_4D_LCD_PutChar((uint8)string[buf_index]);
 928              		.loc 1 1207 0
 929 001e FB89     		ldrh	r3, [r7, #14]
 930 0020 7A68     		ldr	r2, [r7, #4]
 931 0022 D318     		adds	r3, r2, r3
 932 0024 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 933 0026 1846     		mov	r0, r3
 934 0028 FFF7FEFF 		bl	UART_4D_LCD_PutChar
1208:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 buf_index++;
 935              		.loc 1 1208 0
 936 002c FB89     		ldrh	r3, [r7, #14]	@ movhi
 937 002e 03F10103 		add	r3, r3, #1
 938 0032 FB81     		strh	r3, [r7, #14]	@ movhi
 939              	.L36:
1205:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             while(string[buf_index] != (char8)0)
 940              		.loc 1 1205 0 discriminator 1
 941 0034 FB89     		ldrh	r3, [r7, #14]
 942 0036 7A68     		ldr	r2, [r7, #4]
 943 0038 D318     		adds	r3, r2, r3
 944 003a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 945 003c 002B     		cmp	r3, #0
 946 003e EED1     		bne	.L37
 947              	.L34:
1209:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             }
1210:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         }
1211:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     }
 948              		.loc 1 1211 0
 949 0040 07F11007 		add	r7, r7, #16
 950 0044 BD46     		mov	sp, r7
 951 0046 80BD     		pop	{r7, pc}
 952              		.cfi_endproc
 953              	.LFE20:
ARM GAS  C:\Users\GRAZIA~1.RAV\AppData\Local\Temp\ccBCmqGf.s 			page 39


 954              		.size	UART_4D_LCD_PutString, .-UART_4D_LCD_PutString
 955              		.section	.text.UART_4D_LCD_PutArray,"ax",%progbits
 956              		.align	2
 957              		.global	UART_4D_LCD_PutArray
 958              		.thumb
 959              		.thumb_func
 960              		.type	UART_4D_LCD_PutArray, %function
 961              	UART_4D_LCD_PutArray:
 962              	.LFB21:
1212:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
1213:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
1214:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     /*******************************************************************************
1215:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Function Name: UART_4D_LCD_PutArray
1216:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     ********************************************************************************
1217:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
1218:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Summary:
1219:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  Write a Sequence of bytes on the Transmit line. Data comes from RAM or ROM.
1220:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
1221:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Parameters:
1222:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  string: Address of the memory array residing in RAM or ROM.
1223:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  byteCount: Number of Bytes to be transmitted.
1224:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
1225:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Return:
1226:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  None.
1227:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
1228:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Global Variables:
1229:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  UART_4D_LCD_initVar - checked to identify that the component has been
1230:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *     initialized.
1231:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
1232:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Reentrant:
1233:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  No.
1234:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
1235:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *******************************************************************************/
1236:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     void UART_4D_LCD_PutArray(const uint8 string[], uint8 byteCount)
1237:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                                                                     
1238:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     {
 963              		.loc 1 1238 0
 964              		.cfi_startproc
 965              		@ args = 0, pretend = 0, frame = 16
 966              		@ frame_needed = 1, uses_anonymous_args = 0
 967 0000 80B5     		push	{r7, lr}
 968              	.LCFI58:
 969              		.cfi_def_cfa_offset 8
 970              		.cfi_offset 7, -8
 971              		.cfi_offset 14, -4
 972 0002 84B0     		sub	sp, sp, #16
 973              	.LCFI59:
 974              		.cfi_def_cfa_offset 24
 975 0004 00AF     		add	r7, sp, #0
 976              	.LCFI60:
 977              		.cfi_def_cfa_register 7
 978 0006 7860     		str	r0, [r7, #4]
 979 0008 0B46     		mov	r3, r1
 980 000a FB70     		strb	r3, [r7, #3]
1239:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         uint8 buf_index = 0u;
 981              		.loc 1 1239 0
 982 000c 4FF00003 		mov	r3, #0
ARM GAS  C:\Users\GRAZIA~1.RAV\AppData\Local\Temp\ccBCmqGf.s 			page 40


 983 0010 FB73     		strb	r3, [r7, #15]
1240:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         /* If not Initialized then skip this function*/
1241:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         if(UART_4D_LCD_initVar != 0u)
 984              		.loc 1 1241 0
 985 0012 40F20003 		movw	r3, #:lower16:UART_4D_LCD_initVar
 986 0016 C0F20003 		movt	r3, #:upper16:UART_4D_LCD_initVar
 987 001a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 988 001c 002B     		cmp	r3, #0
 989 001e 0ED0     		beq	.L38
 990              	.L40:
1242:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         {
1243:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             do
1244:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             {
1245:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 UART_4D_LCD_PutChar(string[buf_index]);
 991              		.loc 1 1245 0 discriminator 1
 992 0020 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 993 0022 7A68     		ldr	r2, [r7, #4]
 994 0024 D318     		adds	r3, r2, r3
 995 0026 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 996 0028 1846     		mov	r0, r3
 997 002a FFF7FEFF 		bl	UART_4D_LCD_PutChar
1246:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 buf_index++;
 998              		.loc 1 1246 0 discriminator 1
 999 002e FB7B     		ldrb	r3, [r7, #15]
 1000 0030 03F10103 		add	r3, r3, #1
 1001 0034 FB73     		strb	r3, [r7, #15]
1247:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             }while(buf_index < byteCount);
 1002              		.loc 1 1247 0 discriminator 1
 1003 0036 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1004 0038 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1005 003a 9A42     		cmp	r2, r3
 1006 003c F0D3     		bcc	.L40
 1007              	.L38:
1248:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         }
1249:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     }
 1008              		.loc 1 1249 0
 1009 003e 07F11007 		add	r7, r7, #16
 1010 0042 BD46     		mov	sp, r7
 1011 0044 80BD     		pop	{r7, pc}
 1012              		.cfi_endproc
 1013              	.LFE21:
 1014              		.size	UART_4D_LCD_PutArray, .-UART_4D_LCD_PutArray
 1015 0046 00BF     		.section	.text.UART_4D_LCD_PutCRLF,"ax",%progbits
 1016              		.align	2
 1017              		.global	UART_4D_LCD_PutCRLF
 1018              		.thumb
 1019              		.thumb_func
 1020              		.type	UART_4D_LCD_PutCRLF, %function
 1021              	UART_4D_LCD_PutCRLF:
 1022              	.LFB22:
1250:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
1251:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
1252:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     /*******************************************************************************
1253:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Function Name: UART_4D_LCD_PutCRLF
1254:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     ********************************************************************************
1255:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
1256:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Summary:
ARM GAS  C:\Users\GRAZIA~1.RAV\AppData\Local\Temp\ccBCmqGf.s 			page 41


1257:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  Write a character and then carriage return and line feed.
1258:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
1259:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Parameters:
1260:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  txDataByte: uint8 Character to send.
1261:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
1262:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Return:
1263:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  None.
1264:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
1265:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Global Variables:
1266:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  UART_4D_LCD_initVar - checked to identify that the component has been
1267:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *     initialized.
1268:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
1269:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Reentrant:
1270:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  No.
1271:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
1272:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *******************************************************************************/
1273:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     void UART_4D_LCD_PutCRLF(uint8 txDataByte) 
1274:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     {
 1023              		.loc 1 1274 0
 1024              		.cfi_startproc
 1025              		@ args = 0, pretend = 0, frame = 8
 1026              		@ frame_needed = 1, uses_anonymous_args = 0
 1027 0000 80B5     		push	{r7, lr}
 1028              	.LCFI61:
 1029              		.cfi_def_cfa_offset 8
 1030              		.cfi_offset 7, -8
 1031              		.cfi_offset 14, -4
 1032 0002 82B0     		sub	sp, sp, #8
 1033              	.LCFI62:
 1034              		.cfi_def_cfa_offset 16
 1035 0004 00AF     		add	r7, sp, #0
 1036              	.LCFI63:
 1037              		.cfi_def_cfa_register 7
 1038 0006 0346     		mov	r3, r0
 1039 0008 FB71     		strb	r3, [r7, #7]
1275:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         /* If not Initialized then skip this function*/
1276:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         if(UART_4D_LCD_initVar != 0u)
 1040              		.loc 1 1276 0
 1041 000a 40F20003 		movw	r3, #:lower16:UART_4D_LCD_initVar
 1042 000e C0F20003 		movt	r3, #:upper16:UART_4D_LCD_initVar
 1043 0012 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1044 0014 002B     		cmp	r3, #0
 1045 0016 0BD0     		beq	.L41
1277:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         {
1278:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             UART_4D_LCD_PutChar(txDataByte);
 1046              		.loc 1 1278 0
 1047 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1048 001a 1846     		mov	r0, r3
 1049 001c FFF7FEFF 		bl	UART_4D_LCD_PutChar
1279:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             UART_4D_LCD_PutChar(0x0Du);
 1050              		.loc 1 1279 0
 1051 0020 4FF00D00 		mov	r0, #13
 1052 0024 FFF7FEFF 		bl	UART_4D_LCD_PutChar
1280:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             UART_4D_LCD_PutChar(0x0Au);
 1053              		.loc 1 1280 0
 1054 0028 4FF00A00 		mov	r0, #10
 1055 002c FFF7FEFF 		bl	UART_4D_LCD_PutChar
ARM GAS  C:\Users\GRAZIA~1.RAV\AppData\Local\Temp\ccBCmqGf.s 			page 42


 1056              	.L41:
1281:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         }
1282:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     }
 1057              		.loc 1 1282 0
 1058 0030 07F10807 		add	r7, r7, #8
 1059 0034 BD46     		mov	sp, r7
 1060 0036 80BD     		pop	{r7, pc}
 1061              		.cfi_endproc
 1062              	.LFE22:
 1063              		.size	UART_4D_LCD_PutCRLF, .-UART_4D_LCD_PutCRLF
 1064              		.section	.text.UART_4D_LCD_GetTxBufferSize,"ax",%progbits
 1065              		.align	2
 1066              		.global	UART_4D_LCD_GetTxBufferSize
 1067              		.thumb
 1068              		.thumb_func
 1069              		.type	UART_4D_LCD_GetTxBufferSize, %function
 1070              	UART_4D_LCD_GetTxBufferSize:
 1071              	.LFB23:
1283:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
1284:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
1285:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     /*******************************************************************************
1286:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Function Name: UART_4D_LCD_GetTxBufferSize
1287:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     ********************************************************************************
1288:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
1289:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Summary:
1290:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  Determine the amount of space left in the TX buffer and return the count in
1291:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  bytes
1292:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
1293:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Parameters:
1294:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  None.
1295:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
1296:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Return:
1297:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  Integer count of the number of bytes left in the TX buffer
1298:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
1299:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Global Variables:
1300:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  UART_4D_LCD_txBufferWrite - used to calculate left space.
1301:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  UART_4D_LCD_txBufferRead - used to calculate left space.
1302:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
1303:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Reentrant:
1304:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  No.
1305:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
1306:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Theory:
1307:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  Allows the user to find out how full the TX Buffer is.
1308:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
1309:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *******************************************************************************/
1310:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     uint8 UART_4D_LCD_GetTxBufferSize(void)
1311:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                                                             
1312:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     {
 1072              		.loc 1 1312 0
 1073              		.cfi_startproc
 1074              		@ args = 0, pretend = 0, frame = 8
 1075              		@ frame_needed = 1, uses_anonymous_args = 0
 1076              		@ link register save eliminated.
 1077 0000 80B4     		push	{r7}
 1078              	.LCFI64:
 1079              		.cfi_def_cfa_offset 4
 1080              		.cfi_offset 7, -4
ARM GAS  C:\Users\GRAZIA~1.RAV\AppData\Local\Temp\ccBCmqGf.s 			page 43


 1081 0002 83B0     		sub	sp, sp, #12
 1082              	.LCFI65:
 1083              		.cfi_def_cfa_offset 16
 1084 0004 00AF     		add	r7, sp, #0
 1085              	.LCFI66:
 1086              		.cfi_def_cfa_register 7
1313:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         uint8 size;
1314:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
1315:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         #if(UART_4D_LCD_TXBUFFERSIZE > UART_4D_LCD_FIFO_LENGTH)
1316:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
1317:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             /* Disable Tx interrupt. */
1318:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             /* Protect variables that could change on interrupt. */
1319:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             #if(UART_4D_LCD_TX_INTERRUPT_ENABLED)
1320:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 UART_4D_LCD_DisableTxInt();
1321:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             #endif /* End UART_4D_LCD_TX_INTERRUPT_ENABLED */
1322:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
1323:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             if(UART_4D_LCD_txBufferRead == UART_4D_LCD_txBufferWrite)
1324:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             {
1325:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 size = 0u;
1326:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             }
1327:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             else if(UART_4D_LCD_txBufferRead < UART_4D_LCD_txBufferWrite)
1328:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             {
1329:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 size = (UART_4D_LCD_txBufferWrite - UART_4D_LCD_txBufferRead);
1330:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             }
1331:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             else
1332:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             {
1333:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 size = (UART_4D_LCD_TXBUFFERSIZE - UART_4D_LCD_txBufferRead) + UART_4D_LCD_txBuffer
1334:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             }
1335:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
1336:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             /* Enable Tx interrupt. */
1337:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             #if(UART_4D_LCD_TX_INTERRUPT_ENABLED)
1338:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 UART_4D_LCD_EnableTxInt();
1339:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             #endif /* End UART_4D_LCD_TX_INTERRUPT_ENABLED */
1340:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
1341:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         #else /* UART_4D_LCD_TXBUFFERSIZE > UART_4D_LCD_FIFO_LENGTH */
1342:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
1343:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             size = UART_4D_LCD_TXSTATUS_REG;
 1087              		.loc 1 1343 0
 1088 0006 46F26A53 		movw	r3, #25962
 1089 000a C4F20003 		movt	r3, 16384
 1090 000e 1B78     		ldrb	r3, [r3, #0]
 1091 0010 FB71     		strb	r3, [r7, #7]
1344:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
1345:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             /* Is the fifo is full. */
1346:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             if((size & UART_4D_LCD_TX_STS_FIFO_FULL) != 0u)
 1092              		.loc 1 1346 0
 1093 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1094 0014 03F02003 		and	r3, r3, #32
 1095 0018 002B     		cmp	r3, #0
 1096 001a 03D0     		beq	.L44
1347:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             {
1348:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 size = UART_4D_LCD_FIFO_LENGTH;
 1097              		.loc 1 1348 0
 1098 001c 4FF00403 		mov	r3, #4
 1099 0020 FB71     		strb	r3, [r7, #7]
 1100 0022 0BE0     		b	.L45
 1101              	.L44:
ARM GAS  C:\Users\GRAZIA~1.RAV\AppData\Local\Temp\ccBCmqGf.s 			page 44


1349:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             }
1350:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             else if((size & UART_4D_LCD_TX_STS_FIFO_EMPTY) != 0u)
 1102              		.loc 1 1350 0
 1103 0024 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1104 0026 03F00203 		and	r3, r3, #2
 1105 002a 002B     		cmp	r3, #0
 1106 002c 03D0     		beq	.L46
1351:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             {
1352:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 size = 0u;
 1107              		.loc 1 1352 0
 1108 002e 4FF00003 		mov	r3, #0
 1109 0032 FB71     		strb	r3, [r7, #7]
 1110 0034 02E0     		b	.L45
 1111              	.L46:
1353:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             }
1354:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             else
1355:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             {
1356:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 /* We only know there is data in the fifo. */
1357:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 size = 1u;
 1112              		.loc 1 1357 0
 1113 0036 4FF00103 		mov	r3, #1
 1114 003a FB71     		strb	r3, [r7, #7]
 1115              	.L45:
1358:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             }
1359:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
1360:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         #endif /* End UART_4D_LCD_TXBUFFERSIZE > UART_4D_LCD_FIFO_LENGTH */
1361:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
1362:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         return(size);
 1116              		.loc 1 1362 0
 1117 003c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
1363:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     }
 1118              		.loc 1 1363 0
 1119 003e 1846     		mov	r0, r3
 1120 0040 07F10C07 		add	r7, r7, #12
 1121 0044 BD46     		mov	sp, r7
 1122 0046 80BC     		pop	{r7}
 1123 0048 7047     		bx	lr
 1124              		.cfi_endproc
 1125              	.LFE23:
 1126              		.size	UART_4D_LCD_GetTxBufferSize, .-UART_4D_LCD_GetTxBufferSize
 1127 004a 00BF     		.section	.text.UART_4D_LCD_ClearTxBuffer,"ax",%progbits
 1128              		.align	2
 1129              		.global	UART_4D_LCD_ClearTxBuffer
 1130              		.thumb
 1131              		.thumb_func
 1132              		.type	UART_4D_LCD_ClearTxBuffer, %function
 1133              	UART_4D_LCD_ClearTxBuffer:
 1134              	.LFB24:
1364:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
1365:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
1366:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     /*******************************************************************************
1367:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Function Name: UART_4D_LCD_ClearTxBuffer
1368:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     ********************************************************************************
1369:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
1370:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Summary:
1371:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  Clears the TX RAM buffer by setting the read and write pointers both to zero.
1372:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  Clears the hardware TX FIFO.  Any data present in the FIFO will not be sent.
ARM GAS  C:\Users\GRAZIA~1.RAV\AppData\Local\Temp\ccBCmqGf.s 			page 45


1373:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
1374:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Parameters:
1375:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  None.
1376:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
1377:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Return:
1378:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  None.
1379:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
1380:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Global Variables:
1381:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  UART_4D_LCD_txBufferWrite - cleared to zero.
1382:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  UART_4D_LCD_txBufferRead - cleared to zero.
1383:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
1384:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Reentrant:
1385:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  No.
1386:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
1387:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Theory:
1388:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  Setting the pointers to zero makes the system believe there is no data to
1389:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  read and writing will resume at address 0 overwriting any data that may have
1390:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  remained in the RAM.
1391:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
1392:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Side Effects:
1393:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  Any received data not read from the RAM buffer will be lost when overwritten.
1394:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
1395:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *******************************************************************************/
1396:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     void UART_4D_LCD_ClearTxBuffer(void) 
1397:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     {
 1135              		.loc 1 1397 0
 1136              		.cfi_startproc
 1137              		@ args = 0, pretend = 0, frame = 8
 1138              		@ frame_needed = 1, uses_anonymous_args = 0
 1139 0000 80B5     		push	{r7, lr}
 1140              	.LCFI67:
 1141              		.cfi_def_cfa_offset 8
 1142              		.cfi_offset 7, -8
 1143              		.cfi_offset 14, -4
 1144 0002 82B0     		sub	sp, sp, #8
 1145              	.LCFI68:
 1146              		.cfi_def_cfa_offset 16
 1147 0004 00AF     		add	r7, sp, #0
 1148              	.LCFI69:
 1149              		.cfi_def_cfa_register 7
1398:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         uint8 enableInterrupts;
1399:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
1400:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         /* Enter critical section */
1401:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         enableInterrupts = CyEnterCriticalSection();
 1150              		.loc 1 1401 0
 1151 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 1152 000a 0346     		mov	r3, r0
 1153 000c FB71     		strb	r3, [r7, #7]
1402:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         /* clear the HW FIFO */
1403:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         UART_4D_LCD_TXDATA_AUX_CTL_REG |=  UART_4D_LCD_TX_FIFO_CLR;
 1154              		.loc 1 1403 0
 1155 000e 46F29753 		movw	r3, #26007
 1156 0012 C4F20003 		movt	r3, 16384
 1157 0016 46F29752 		movw	r2, #26007
 1158 001a C4F20002 		movt	r2, 16384
 1159 001e 1278     		ldrb	r2, [r2, #0]
 1160 0020 D2B2     		uxtb	r2, r2
ARM GAS  C:\Users\GRAZIA~1.RAV\AppData\Local\Temp\ccBCmqGf.s 			page 46


 1161 0022 42F00202 		orr	r2, r2, #2
 1162 0026 D2B2     		uxtb	r2, r2
 1163 0028 1A70     		strb	r2, [r3, #0]
1404:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         UART_4D_LCD_TXDATA_AUX_CTL_REG &= (uint8)~UART_4D_LCD_TX_FIFO_CLR;
 1164              		.loc 1 1404 0
 1165 002a 46F29753 		movw	r3, #26007
 1166 002e C4F20003 		movt	r3, 16384
 1167 0032 46F29752 		movw	r2, #26007
 1168 0036 C4F20002 		movt	r2, 16384
 1169 003a 1278     		ldrb	r2, [r2, #0]
 1170 003c D2B2     		uxtb	r2, r2
 1171 003e 22F00202 		bic	r2, r2, #2
 1172 0042 D2B2     		uxtb	r2, r2
 1173 0044 1A70     		strb	r2, [r3, #0]
1405:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         /* Exit critical section */
1406:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         CyExitCriticalSection(enableInterrupts);
 1174              		.loc 1 1406 0
 1175 0046 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1176 0048 1846     		mov	r0, r3
 1177 004a FFF7FEFF 		bl	CyExitCriticalSection
1407:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
1408:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         #if(UART_4D_LCD_TXBUFFERSIZE > UART_4D_LCD_FIFO_LENGTH)
1409:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
1410:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             /* Disable Tx interrupt. */
1411:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             /* Protect variables that could change on interrupt. */
1412:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             #if(UART_4D_LCD_TX_INTERRUPT_ENABLED)
1413:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 UART_4D_LCD_DisableTxInt();
1414:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             #endif /* End UART_4D_LCD_TX_INTERRUPT_ENABLED */
1415:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
1416:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             UART_4D_LCD_txBufferRead = 0u;
1417:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             UART_4D_LCD_txBufferWrite = 0u;
1418:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
1419:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             /* Enable Tx interrupt. */
1420:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             #if(UART_4D_LCD_TX_INTERRUPT_ENABLED)
1421:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 UART_4D_LCD_EnableTxInt();
1422:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             #endif /* End UART_4D_LCD_TX_INTERRUPT_ENABLED */
1423:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
1424:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         #endif /* End UART_4D_LCD_TXBUFFERSIZE > UART_4D_LCD_FIFO_LENGTH */
1425:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     }
 1178              		.loc 1 1425 0
 1179 004e 07F10807 		add	r7, r7, #8
 1180 0052 BD46     		mov	sp, r7
 1181 0054 80BD     		pop	{r7, pc}
 1182              		.cfi_endproc
 1183              	.LFE24:
 1184              		.size	UART_4D_LCD_ClearTxBuffer, .-UART_4D_LCD_ClearTxBuffer
 1185 0056 00BF     		.section	.text.UART_4D_LCD_SendBreak,"ax",%progbits
 1186              		.align	2
 1187              		.global	UART_4D_LCD_SendBreak
 1188              		.thumb
 1189              		.thumb_func
 1190              		.type	UART_4D_LCD_SendBreak, %function
 1191              	UART_4D_LCD_SendBreak:
 1192              	.LFB25:
1426:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
1427:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
1428:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     /*******************************************************************************
ARM GAS  C:\Users\GRAZIA~1.RAV\AppData\Local\Temp\ccBCmqGf.s 			page 47


1429:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Function Name: UART_4D_LCD_SendBreak
1430:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     ********************************************************************************
1431:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
1432:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Summary:
1433:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  Write a Break command to the UART
1434:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
1435:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Parameters:
1436:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  uint8 retMode:  Wait mode,
1437:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *   0 - Initialize registers for Break, sends the Break signal and return
1438:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *       imediately.
1439:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *   1 - Wait until Break sending is complete, reinitialize registers to normal
1440:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *       transmission mode then return.
1441:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *   2 - Reinitialize registers to normal transmission mode then return.
1442:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *   3 - both steps: 0 and 1
1443:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *       init registers for Break, send Break signal
1444:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *       wait until Break sending is complete, reinit registers to normal
1445:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *       transmission mode then return.
1446:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
1447:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Return:
1448:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  None.
1449:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
1450:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Global Variables:
1451:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  UART_4D_LCD_initVar - checked to identify that the component has been
1452:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *     initialized.
1453:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  tx_period - static variable, used for keeping TX period configuration.
1454:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
1455:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Reentrant:
1456:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  No.
1457:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
1458:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Theory:
1459:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  SendBreak function initializes registers to send 13-bit break signal. It is
1460:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  important to return the registers configuration to normal for continue 8-bit
1461:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  operation.
1462:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  Trere are 3 variants for this API usage:
1463:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  1) SendBreak(3) - function will send the Break signal and take care on the
1464:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *     configuration returning. Funcition will block CPU untill transmition
1465:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *     complete.
1466:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  2) User may want to use bloking time if UART configured to the low speed
1467:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *     operation
1468:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *     Emample for this case:
1469:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *     SendBreak(0);     - init Break signal transmition
1470:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *         Add your code here to use CPU time
1471:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *     SendBreak(1);     - complete Break operation
1472:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  3) Same to 2) but user may want to init and use the interrupt for complete
1473:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *     break operation.
1474:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *     Example for this case:
1475:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *     Init TX interrupt whith "TX - On TX Complete" parameter
1476:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *     SendBreak(0);     - init Break signal transmition
1477:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *         Add your code here to use CPU time
1478:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *     When interrupt appear with UART_TX_STS_COMPLETE status:
1479:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *     SendBreak(2);     - complete Break operation
1480:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
1481:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Side Effects:
1482:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *   Uses static variable to keep registers configuration.
1483:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
1484:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *******************************************************************************/
1485:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     void UART_4D_LCD_SendBreak(uint8 retMode) 
ARM GAS  C:\Users\GRAZIA~1.RAV\AppData\Local\Temp\ccBCmqGf.s 			page 48


1486:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     {
 1193              		.loc 1 1486 0
 1194              		.cfi_startproc
 1195              		@ args = 0, pretend = 0, frame = 16
 1196              		@ frame_needed = 1, uses_anonymous_args = 0
 1197 0000 80B5     		push	{r7, lr}
 1198              	.LCFI70:
 1199              		.cfi_def_cfa_offset 8
 1200              		.cfi_offset 7, -8
 1201              		.cfi_offset 14, -4
 1202 0002 84B0     		sub	sp, sp, #16
 1203              	.LCFI71:
 1204              		.cfi_def_cfa_offset 24
 1205 0004 00AF     		add	r7, sp, #0
 1206              	.LCFI72:
 1207              		.cfi_def_cfa_register 7
 1208 0006 0346     		mov	r3, r0
 1209 0008 FB71     		strb	r3, [r7, #7]
1487:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
1488:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         /* If not Initialized then skip this function*/
1489:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         if(UART_4D_LCD_initVar != 0u)
 1210              		.loc 1 1489 0
 1211 000a 40F20003 		movw	r3, #:lower16:UART_4D_LCD_initVar
 1212 000e C0F20003 		movt	r3, #:upper16:UART_4D_LCD_initVar
 1213 0012 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1214 0014 002B     		cmp	r3, #0
 1215 0016 46D0     		beq	.L49
 1216              	.LBB2:
1490:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         {
1491:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             /*Set the Counter to 13-bits and transmit a 00 byte*/
1492:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             /*When that is done then reset the counter value back*/
1493:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             uint8 tmpStat;
1494:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
1495:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             #if(UART_4D_LCD_HD_ENABLED) /* Half Duplex mode*/
1496:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
1497:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 if( (retMode == UART_4D_LCD_SEND_BREAK) ||
 1217              		.loc 1 1497 0
 1218 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1219 001a 002B     		cmp	r3, #0
 1220 001c 02D0     		beq	.L51
 1221              		.loc 1 1497 0 is_stmt 0 discriminator 1
 1222 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1223 0020 032B     		cmp	r3, #3
 1224 0022 1AD1     		bne	.L52
 1225              	.L51:
1498:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                     (retMode == UART_4D_LCD_SEND_WAIT_REINIT ) )
1499:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 {
1500:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                     /* CTRL_HD_SEND_BREAK - sends break bits in HD mode*/
1501:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                     UART_4D_LCD_WriteControlRegister(UART_4D_LCD_ReadControlRegister() |
 1226              		.loc 1 1501 0 is_stmt 1
 1227 0024 FFF7FEFF 		bl	UART_4D_LCD_ReadControlRegister
 1228 0028 0346     		mov	r3, r0
 1229 002a 43F00203 		orr	r3, r3, #2
 1230 002e DBB2     		uxtb	r3, r3
 1231 0030 1846     		mov	r0, r3
 1232 0032 FFF7FEFF 		bl	UART_4D_LCD_WriteControlRegister
1502:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                                                           UART_4D_LCD_CTRL_HD_SEND_BREAK);
ARM GAS  C:\Users\GRAZIA~1.RAV\AppData\Local\Temp\ccBCmqGf.s 			page 49


1503:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                     /* Send zeros*/
1504:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                     UART_4D_LCD_TXDATA_REG = 0u;
 1233              		.loc 1 1504 0
 1234 0036 46F25753 		movw	r3, #25943
 1235 003a C4F20003 		movt	r3, 16384
 1236 003e 4FF00002 		mov	r2, #0
 1237 0042 1A70     		strb	r2, [r3, #0]
 1238              	.L53:
1505:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
1506:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                     do /*wait until transmit starts*/
1507:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                     {
1508:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                         tmpStat = UART_4D_LCD_TXSTATUS_REG;
 1239              		.loc 1 1508 0 discriminator 1
 1240 0044 46F26A53 		movw	r3, #25962
 1241 0048 C4F20003 		movt	r3, 16384
 1242 004c 1B78     		ldrb	r3, [r3, #0]
 1243 004e FB73     		strb	r3, [r7, #15]
1509:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                     }while((tmpStat & UART_4D_LCD_TX_STS_FIFO_EMPTY) != 0u);
 1244              		.loc 1 1509 0 discriminator 1
 1245 0050 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1246 0052 03F00203 		and	r3, r3, #2
 1247 0056 002B     		cmp	r3, #0
 1248 0058 F4D1     		bne	.L53
 1249              	.L52:
1510:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 }
1511:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
1512:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 if( (retMode == UART_4D_LCD_WAIT_FOR_COMPLETE_REINIT) ||
 1250              		.loc 1 1512 0
 1251 005a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1252 005c 012B     		cmp	r3, #1
 1253 005e 02D0     		beq	.L54
 1254              		.loc 1 1512 0 is_stmt 0 discriminator 1
 1255 0060 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1256 0062 032B     		cmp	r3, #3
 1257 0064 0DD1     		bne	.L55
 1258              	.L54:
1513:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                     (retMode == UART_4D_LCD_SEND_WAIT_REINIT) )
1514:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 {
1515:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                     do /*wait until transmit complete*/
1516:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                     {
1517:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                         tmpStat = UART_4D_LCD_TXSTATUS_REG;
 1259              		.loc 1 1517 0 is_stmt 1 discriminator 1
 1260 0066 46F26A53 		movw	r3, #25962
 1261 006a C4F20003 		movt	r3, 16384
 1262 006e 1B78     		ldrb	r3, [r3, #0]
 1263 0070 FB73     		strb	r3, [r7, #15]
1518:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                     }while(((uint8)~tmpStat & UART_4D_LCD_TX_STS_COMPLETE) != 0u);
 1264              		.loc 1 1518 0 discriminator 1
 1265 0072 FB7B     		ldrb	r3, [r7, #15]
 1266 0074 6FEA0303 		mvn	r3, r3
 1267 0078 DBB2     		uxtb	r3, r3
 1268 007a 03F00103 		and	r3, r3, #1
 1269 007e 002B     		cmp	r3, #0
 1270 0080 F1D1     		bne	.L54
 1271              	.L55:
1519:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 }
1520:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
ARM GAS  C:\Users\GRAZIA~1.RAV\AppData\Local\Temp\ccBCmqGf.s 			page 50


1521:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 if( (retMode == UART_4D_LCD_WAIT_FOR_COMPLETE_REINIT) ||
 1272              		.loc 1 1521 0
 1273 0082 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1274 0084 012B     		cmp	r3, #1
 1275 0086 05D0     		beq	.L56
 1276              		.loc 1 1521 0 is_stmt 0 discriminator 1
 1277 0088 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1278 008a 022B     		cmp	r3, #2
 1279 008c 02D0     		beq	.L56
1522:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                     (retMode == UART_4D_LCD_REINIT) ||
 1280              		.loc 1 1522 0 is_stmt 1
 1281 008e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1282 0090 032B     		cmp	r3, #3
 1283 0092 08D1     		bne	.L49
 1284              	.L56:
1523:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                     (retMode == UART_4D_LCD_SEND_WAIT_REINIT) )
1524:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 {
1525:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                     UART_4D_LCD_WriteControlRegister(UART_4D_LCD_ReadControlRegister() &
 1285              		.loc 1 1525 0
 1286 0094 FFF7FEFF 		bl	UART_4D_LCD_ReadControlRegister
 1287 0098 0346     		mov	r3, r0
 1288 009a 23F00203 		bic	r3, r3, #2
 1289 009e DBB2     		uxtb	r3, r3
 1290 00a0 1846     		mov	r0, r3
 1291 00a2 FFF7FEFF 		bl	UART_4D_LCD_WriteControlRegister
 1292              	.L49:
 1293              	.LBE2:
1526:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                                                   (uint8)~UART_4D_LCD_CTRL_HD_SEND_BREAK);
1527:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 }
1528:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
1529:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             #else /* UART_4D_LCD_HD_ENABLED Full Duplex mode */
1530:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
1531:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 static uint8 tx_period;
1532:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
1533:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 if( (retMode == UART_4D_LCD_SEND_BREAK) ||
1534:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                     (retMode == UART_4D_LCD_SEND_WAIT_REINIT) )
1535:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 {
1536:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                     /* CTRL_HD_SEND_BREAK - skip to send parity bit at Break signal in Full Duplex 
1537:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                     #if( (UART_4D_LCD_PARITY_TYPE != UART_4D_LCD__B_UART__NONE_REVB) || \
1538:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                                         (UART_4D_LCD_PARITY_TYPE_SW != 0u) )
1539:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                         UART_4D_LCD_WriteControlRegister(UART_4D_LCD_ReadControlRegister() |
1540:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                                                               UART_4D_LCD_CTRL_HD_SEND_BREAK);
1541:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                     #endif /* End UART_4D_LCD_PARITY_TYPE != UART_4D_LCD__B_UART__NONE_REVB  */
1542:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
1543:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                     #if(UART_4D_LCD_TXCLKGEN_DP)
1544:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                         tx_period = UART_4D_LCD_TXBITCLKTX_COMPLETE_REG;
1545:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                         UART_4D_LCD_TXBITCLKTX_COMPLETE_REG = UART_4D_LCD_TXBITCTR_BREAKBITS;
1546:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                     #else
1547:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                         tx_period = UART_4D_LCD_TXBITCTR_PERIOD_REG;
1548:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                         UART_4D_LCD_TXBITCTR_PERIOD_REG = UART_4D_LCD_TXBITCTR_BREAKBITS8X;
1549:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                     #endif /* End UART_4D_LCD_TXCLKGEN_DP */
1550:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
1551:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                     /* Send zeros*/
1552:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                     UART_4D_LCD_TXDATA_REG = 0u;
1553:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
1554:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                     do /* wait until transmit starts */
1555:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                     {
ARM GAS  C:\Users\GRAZIA~1.RAV\AppData\Local\Temp\ccBCmqGf.s 			page 51


1556:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                         tmpStat = UART_4D_LCD_TXSTATUS_REG;
1557:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                     }while((tmpStat & UART_4D_LCD_TX_STS_FIFO_EMPTY) != 0u);
1558:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 }
1559:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
1560:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 if( (retMode == UART_4D_LCD_WAIT_FOR_COMPLETE_REINIT) ||
1561:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                     (retMode == UART_4D_LCD_SEND_WAIT_REINIT) )
1562:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 {
1563:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                     do /*wait until transmit complete*/
1564:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                     {
1565:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                         tmpStat = UART_4D_LCD_TXSTATUS_REG;
1566:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                     }while(((uint8)~tmpStat & UART_4D_LCD_TX_STS_COMPLETE) != 0u);
1567:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 }
1568:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
1569:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 if( (retMode == UART_4D_LCD_WAIT_FOR_COMPLETE_REINIT) ||
1570:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                     (retMode == UART_4D_LCD_REINIT) ||
1571:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                     (retMode == UART_4D_LCD_SEND_WAIT_REINIT) )
1572:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 {
1573:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
1574:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                     #if(UART_4D_LCD_TXCLKGEN_DP)
1575:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                         UART_4D_LCD_TXBITCLKTX_COMPLETE_REG = tx_period;
1576:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                     #else
1577:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                         UART_4D_LCD_TXBITCTR_PERIOD_REG = tx_period;
1578:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                     #endif /* End UART_4D_LCD_TXCLKGEN_DP */
1579:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
1580:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                     #if( (UART_4D_LCD_PARITY_TYPE != UART_4D_LCD__B_UART__NONE_REVB) || \
1581:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                          (UART_4D_LCD_PARITY_TYPE_SW != 0u) )
1582:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                         UART_4D_LCD_WriteControlRegister(UART_4D_LCD_ReadControlRegister() &
1583:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                                                       (uint8)~UART_4D_LCD_CTRL_HD_SEND_BREAK);
1584:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                     #endif /* End UART_4D_LCD_PARITY_TYPE != NONE */
1585:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 }
1586:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             #endif    /* End UART_4D_LCD_HD_ENABLED */
1587:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         }
1588:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     }
 1294              		.loc 1 1588 0
 1295 00a6 07F11007 		add	r7, r7, #16
 1296 00aa BD46     		mov	sp, r7
 1297 00ac 80BD     		pop	{r7, pc}
 1298              		.cfi_endproc
 1299              	.LFE25:
 1300              		.size	UART_4D_LCD_SendBreak, .-UART_4D_LCD_SendBreak
 1301 00ae 00BF     		.section	.text.UART_4D_LCD_SetTxAddressMode,"ax",%progbits
 1302              		.align	2
 1303              		.global	UART_4D_LCD_SetTxAddressMode
 1304              		.thumb
 1305              		.thumb_func
 1306              		.type	UART_4D_LCD_SetTxAddressMode, %function
 1307              	UART_4D_LCD_SetTxAddressMode:
 1308              	.LFB26:
1589:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
1590:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
1591:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     /*******************************************************************************
1592:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Function Name: UART_4D_LCD_SetTxAddressMode
1593:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     ********************************************************************************
1594:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
1595:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Summary:
1596:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  Set the transmit addressing mode
1597:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
ARM GAS  C:\Users\GRAZIA~1.RAV\AppData\Local\Temp\ccBCmqGf.s 			page 52


1598:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Parameters:
1599:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  addressMode: 0 -> Space
1600:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *               1 -> Mark
1601:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
1602:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Return:
1603:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  None.
1604:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
1605:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *******************************************************************************/
1606:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     void UART_4D_LCD_SetTxAddressMode(uint8 addressMode) 
1607:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     {
 1309              		.loc 1 1607 0
 1310              		.cfi_startproc
 1311              		@ args = 0, pretend = 0, frame = 8
 1312              		@ frame_needed = 1, uses_anonymous_args = 0
 1313 0000 80B5     		push	{r7, lr}
 1314              	.LCFI73:
 1315              		.cfi_def_cfa_offset 8
 1316              		.cfi_offset 7, -8
 1317              		.cfi_offset 14, -4
 1318 0002 82B0     		sub	sp, sp, #8
 1319              	.LCFI74:
 1320              		.cfi_def_cfa_offset 16
 1321 0004 00AF     		add	r7, sp, #0
 1322              	.LCFI75:
 1323              		.cfi_def_cfa_register 7
 1324 0006 0346     		mov	r3, r0
 1325 0008 FB71     		strb	r3, [r7, #7]
1608:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         /* Mark/Space sending enable*/
1609:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         if(addressMode != 0u)
 1326              		.loc 1 1609 0
 1327 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1328 000c 002B     		cmp	r3, #0
 1329 000e 09D0     		beq	.L58
1610:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         {
1611:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             #if( UART_4D_LCD_CONTROL_REG_REMOVED == 0u )
1612:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 UART_4D_LCD_WriteControlRegister(UART_4D_LCD_ReadControlRegister() |
 1330              		.loc 1 1612 0
 1331 0010 FFF7FEFF 		bl	UART_4D_LCD_ReadControlRegister
 1332 0014 0346     		mov	r3, r0
 1333 0016 43F00403 		orr	r3, r3, #4
 1334 001a DBB2     		uxtb	r3, r3
 1335 001c 1846     		mov	r0, r3
 1336 001e FFF7FEFF 		bl	UART_4D_LCD_WriteControlRegister
 1337 0022 08E0     		b	.L57
 1338              	.L58:
1613:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                                                       UART_4D_LCD_CTRL_MARK);
1614:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             #endif /* End UART_4D_LCD_CONTROL_REG_REMOVED == 0u */
1615:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         }
1616:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         else
1617:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         {
1618:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             #if( UART_4D_LCD_CONTROL_REG_REMOVED == 0u )
1619:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                 UART_4D_LCD_WriteControlRegister(UART_4D_LCD_ReadControlRegister() &
 1339              		.loc 1 1619 0
 1340 0024 FFF7FEFF 		bl	UART_4D_LCD_ReadControlRegister
 1341 0028 0346     		mov	r3, r0
 1342 002a 23F00403 		bic	r3, r3, #4
 1343 002e DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\GRAZIA~1.RAV\AppData\Local\Temp\ccBCmqGf.s 			page 53


 1344 0030 1846     		mov	r0, r3
 1345 0032 FFF7FEFF 		bl	UART_4D_LCD_WriteControlRegister
 1346              	.L57:
1620:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                                                     (uint8)~UART_4D_LCD_CTRL_MARK);
1621:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             #endif /* End UART_4D_LCD_CONTROL_REG_REMOVED == 0u */
1622:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         }
1623:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     }
 1347              		.loc 1 1623 0
 1348 0036 07F10807 		add	r7, r7, #8
 1349 003a BD46     		mov	sp, r7
 1350 003c 80BD     		pop	{r7, pc}
 1351              		.cfi_endproc
 1352              	.LFE26:
 1353              		.size	UART_4D_LCD_SetTxAddressMode, .-UART_4D_LCD_SetTxAddressMode
 1354 003e 00BF     		.section	.text.UART_4D_LCD_LoadTxConfig,"ax",%progbits
 1355              		.align	2
 1356              		.global	UART_4D_LCD_LoadTxConfig
 1357              		.thumb
 1358              		.thumb_func
 1359              		.type	UART_4D_LCD_LoadTxConfig, %function
 1360              	UART_4D_LCD_LoadTxConfig:
 1361              	.LFB27:
1624:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
1625:.\Generated_Source\PSoC5/UART_4D_LCD.c **** #endif  /* EndUART_4D_LCD_TX_ENABLED */
1626:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
1627:.\Generated_Source\PSoC5/UART_4D_LCD.c **** #if(UART_4D_LCD_HD_ENABLED)
1628:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
1629:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
1630:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     /*******************************************************************************
1631:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Function Name: UART_4D_LCD_LoadTxConfig
1632:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     ********************************************************************************
1633:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
1634:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Summary:
1635:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  Unloads the Rx configuration if required and loads the
1636:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  Tx configuration. It is the users responsibility to ensure that any
1637:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  transaction is complete and it is safe to unload the Tx
1638:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  configuration.
1639:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
1640:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Parameters:
1641:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  None.
1642:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
1643:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Return:
1644:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  None.
1645:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
1646:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Theory:
1647:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  Valid only for half duplex UART.
1648:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
1649:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Side Effects:
1650:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  Disable RX interrupt mask, when software buffer has been used.
1651:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
1652:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *******************************************************************************/
1653:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     void UART_4D_LCD_LoadTxConfig(void) 
1654:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     {
 1362              		.loc 1 1654 0
 1363              		.cfi_startproc
 1364              		@ args = 0, pretend = 0, frame = 0
 1365              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\GRAZIA~1.RAV\AppData\Local\Temp\ccBCmqGf.s 			page 54


 1366 0000 80B5     		push	{r7, lr}
 1367              	.LCFI76:
 1368              		.cfi_def_cfa_offset 8
 1369              		.cfi_offset 7, -8
 1370              		.cfi_offset 14, -4
 1371 0002 00AF     		add	r7, sp, #0
 1372              	.LCFI77:
 1373              		.cfi_def_cfa_register 7
1655:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         #if((UART_4D_LCD_RX_INTERRUPT_ENABLED) && (UART_4D_LCD_RXBUFFERSIZE > UART_4D_LCD_FIFO_LENG
1656:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             /* Disable RX interrupts before set TX configuration */
1657:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             UART_4D_LCD_SetRxInterruptMode(0u);
1658:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         #endif /* UART_4D_LCD_RX_INTERRUPT_ENABLED */
1659:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
1660:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         UART_4D_LCD_WriteControlRegister(UART_4D_LCD_ReadControlRegister() | UART_4D_LCD_CTRL_HD_SE
 1374              		.loc 1 1660 0
 1375 0004 FFF7FEFF 		bl	UART_4D_LCD_ReadControlRegister
 1376 0008 0346     		mov	r3, r0
 1377 000a 43F00103 		orr	r3, r3, #1
 1378 000e DBB2     		uxtb	r3, r3
 1379 0010 1846     		mov	r0, r3
 1380 0012 FFF7FEFF 		bl	UART_4D_LCD_WriteControlRegister
1661:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         UART_4D_LCD_RXBITCTR_PERIOD_REG = UART_4D_LCD_HD_TXBITCTR_INIT;
 1381              		.loc 1 1661 0
 1382 0016 46F28B53 		movw	r3, #25995
 1383 001a C4F20003 		movt	r3, 16384
 1384 001e 4FF06F02 		mov	r2, #111
 1385 0022 1A70     		strb	r2, [r3, #0]
1662:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         #if(CY_UDB_V0) /* Manually clear status register when mode has been changed */
1663:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             /* Clear status register */
1664:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             CY_GET_REG8(UART_4D_LCD_RXSTATUS_PTR);
1665:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         #endif /* CY_UDB_V0 */
1666:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     }
 1386              		.loc 1 1666 0
 1387 0024 80BD     		pop	{r7, pc}
 1388              		.cfi_endproc
 1389              	.LFE27:
 1390              		.size	UART_4D_LCD_LoadTxConfig, .-UART_4D_LCD_LoadTxConfig
 1391 0026 00BF     		.section	.text.UART_4D_LCD_LoadRxConfig,"ax",%progbits
 1392              		.align	2
 1393              		.global	UART_4D_LCD_LoadRxConfig
 1394              		.thumb
 1395              		.thumb_func
 1396              		.type	UART_4D_LCD_LoadRxConfig, %function
 1397              	UART_4D_LCD_LoadRxConfig:
 1398              	.LFB28:
1667:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
1668:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
1669:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     /*******************************************************************************
1670:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Function Name: UART_4D_LCD_LoadRxConfig
1671:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     ********************************************************************************
1672:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
1673:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Summary:
1674:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  Unloads the Tx configuration if required and loads the
1675:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  Rx configuration. It is the users responsibility to ensure that any
1676:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  transaction is complete and it is safe to unload the Rx
1677:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  configuration.
1678:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
ARM GAS  C:\Users\GRAZIA~1.RAV\AppData\Local\Temp\ccBCmqGf.s 			page 55


1679:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Parameters:
1680:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  None.
1681:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
1682:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Return:
1683:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  None.
1684:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
1685:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Theory:
1686:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  Valid only for half duplex UART
1687:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
1688:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     * Side Effects:
1689:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  Set RX interrupt mask based on customizer settings, when software buffer
1690:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *  has been used.
1691:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *
1692:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     *******************************************************************************/
1693:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     void UART_4D_LCD_LoadRxConfig(void) 
1694:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     {
 1399              		.loc 1 1694 0
 1400              		.cfi_startproc
 1401              		@ args = 0, pretend = 0, frame = 0
 1402              		@ frame_needed = 1, uses_anonymous_args = 0
 1403 0000 80B5     		push	{r7, lr}
 1404              	.LCFI78:
 1405              		.cfi_def_cfa_offset 8
 1406              		.cfi_offset 7, -8
 1407              		.cfi_offset 14, -4
 1408 0002 00AF     		add	r7, sp, #0
 1409              	.LCFI79:
 1410              		.cfi_def_cfa_register 7
1695:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         UART_4D_LCD_WriteControlRegister(UART_4D_LCD_ReadControlRegister() &
 1411              		.loc 1 1695 0
 1412 0004 FFF7FEFF 		bl	UART_4D_LCD_ReadControlRegister
 1413 0008 0346     		mov	r3, r0
 1414 000a 23F00103 		bic	r3, r3, #1
 1415 000e DBB2     		uxtb	r3, r3
 1416 0010 1846     		mov	r0, r3
 1417 0012 FFF7FEFF 		bl	UART_4D_LCD_WriteControlRegister
1696:.\Generated_Source\PSoC5/UART_4D_LCD.c ****                                                 (uint8)~UART_4D_LCD_CTRL_HD_SEND);
1697:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         UART_4D_LCD_RXBITCTR_PERIOD_REG = UART_4D_LCD_HD_RXBITCTR_INIT;
 1418              		.loc 1 1697 0
 1419 0016 46F28B53 		movw	r3, #25995
 1420 001a C4F20003 		movt	r3, 16384
 1421 001e 4FF07202 		mov	r2, #114
 1422 0022 1A70     		strb	r2, [r3, #0]
1698:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         #if(CY_UDB_V0) /* Manually clear status register when mode has been changed */
1699:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             /* Clear status register */
1700:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             CY_GET_REG8(UART_4D_LCD_RXSTATUS_PTR);
1701:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         #endif /* CY_UDB_V0 */
1702:.\Generated_Source\PSoC5/UART_4D_LCD.c **** 
1703:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         #if((UART_4D_LCD_RX_INTERRUPT_ENABLED) && (UART_4D_LCD_RXBUFFERSIZE > UART_4D_LCD_FIFO_LENG
1704:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             /* Enable RX interrupt after set RX configuration */
1705:.\Generated_Source\PSoC5/UART_4D_LCD.c ****             UART_4D_LCD_SetRxInterruptMode(UART_4D_LCD_INIT_RX_INTERRUPTS_MASK);
1706:.\Generated_Source\PSoC5/UART_4D_LCD.c ****         #endif /* UART_4D_LCD_RX_INTERRUPT_ENABLED */
1707:.\Generated_Source\PSoC5/UART_4D_LCD.c ****     }
 1423              		.loc 1 1707 0
 1424 0024 80BD     		pop	{r7, pc}
 1425              		.cfi_endproc
 1426              	.LFE28:
ARM GAS  C:\Users\GRAZIA~1.RAV\AppData\Local\Temp\ccBCmqGf.s 			page 56


 1427              		.size	UART_4D_LCD_LoadRxConfig, .-UART_4D_LCD_LoadRxConfig
 1428 0026 00BF     		.text
 1429              	.Letext0:
 1430              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 1431              		.section	.debug_info,"",%progbits
 1432              	.Ldebug_info0:
 1433 0000 A3050000 		.4byte	0x5a3
 1434 0004 0200     		.2byte	0x2
 1435 0006 00000000 		.4byte	.Ldebug_abbrev0
 1436 000a 04       		.byte	0x4
 1437 000b 01       		.uleb128 0x1
 1438 000c B0030000 		.4byte	.LASF61
 1439 0010 01       		.byte	0x1
 1440 0011 90000000 		.4byte	.LASF62
 1441 0015 E5000000 		.4byte	.LASF63
 1442 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1443 001d 00000000 		.4byte	0
 1444 0021 00000000 		.4byte	0
 1445 0025 00000000 		.4byte	.Ldebug_line0
 1446 0029 02       		.uleb128 0x2
 1447 002a 01       		.byte	0x1
 1448 002b 06       		.byte	0x6
 1449 002c D9000000 		.4byte	.LASF0
 1450 0030 02       		.uleb128 0x2
 1451 0031 01       		.byte	0x1
 1452 0032 08       		.byte	0x8
 1453 0033 1B040000 		.4byte	.LASF1
 1454 0037 02       		.uleb128 0x2
 1455 0038 02       		.byte	0x2
 1456 0039 05       		.byte	0x5
 1457 003a 29040000 		.4byte	.LASF2
 1458 003e 02       		.uleb128 0x2
 1459 003f 02       		.byte	0x2
 1460 0040 07       		.byte	0x7
 1461 0041 BC020000 		.4byte	.LASF3
 1462 0045 02       		.uleb128 0x2
 1463 0046 04       		.byte	0x4
 1464 0047 05       		.byte	0x5
 1465 0048 8D010000 		.4byte	.LASF4
 1466 004c 02       		.uleb128 0x2
 1467 004d 04       		.byte	0x4
 1468 004e 07       		.byte	0x7
 1469 004f 84020000 		.4byte	.LASF5
 1470 0053 02       		.uleb128 0x2
 1471 0054 08       		.byte	0x8
 1472 0055 05       		.byte	0x5
 1473 0056 CB000000 		.4byte	.LASF6
 1474 005a 02       		.uleb128 0x2
 1475 005b 08       		.byte	0x8
 1476 005c 07       		.byte	0x7
 1477 005d 79000000 		.4byte	.LASF7
 1478 0061 03       		.uleb128 0x3
 1479 0062 04       		.byte	0x4
 1480 0063 05       		.byte	0x5
 1481 0064 696E7400 		.ascii	"int\000"
 1482 0068 02       		.uleb128 0x2
 1483 0069 04       		.byte	0x4
ARM GAS  C:\Users\GRAZIA~1.RAV\AppData\Local\Temp\ccBCmqGf.s 			page 57


 1484 006a 07       		.byte	0x7
 1485 006b 08020000 		.4byte	.LASF8
 1486 006f 04       		.uleb128 0x4
 1487 0070 96010000 		.4byte	.LASF9
 1488 0074 02       		.byte	0x2
 1489 0075 5B       		.byte	0x5b
 1490 0076 30000000 		.4byte	0x30
 1491 007a 04       		.uleb128 0x4
 1492 007b 18000000 		.4byte	.LASF10
 1493 007f 02       		.byte	0x2
 1494 0080 5C       		.byte	0x5c
 1495 0081 3E000000 		.4byte	0x3e
 1496 0085 02       		.uleb128 0x2
 1497 0086 04       		.byte	0x4
 1498 0087 04       		.byte	0x4
 1499 0088 67030000 		.4byte	.LASF11
 1500 008c 02       		.uleb128 0x2
 1501 008d 08       		.byte	0x8
 1502 008e 04       		.byte	0x4
 1503 008f 9C010000 		.4byte	.LASF12
 1504 0093 04       		.uleb128 0x4
 1505 0094 73040000 		.4byte	.LASF13
 1506 0098 02       		.byte	0x2
 1507 0099 6C       		.byte	0x6c
 1508 009a 9E000000 		.4byte	0x9e
 1509 009e 02       		.uleb128 0x2
 1510 009f 01       		.byte	0x1
 1511 00a0 08       		.byte	0x8
 1512 00a1 5D040000 		.4byte	.LASF14
 1513 00a5 04       		.uleb128 0x4
 1514 00a6 F9030000 		.4byte	.LASF15
 1515 00aa 02       		.byte	0x2
 1516 00ab F0       		.byte	0xf0
 1517 00ac B0000000 		.4byte	0xb0
 1518 00b0 05       		.uleb128 0x5
 1519 00b1 6F000000 		.4byte	0x6f
 1520 00b5 02       		.uleb128 0x2
 1521 00b6 04       		.byte	0x4
 1522 00b7 07       		.byte	0x7
 1523 00b8 F8020000 		.4byte	.LASF16
 1524 00bc 06       		.uleb128 0x6
 1525 00bd 01       		.byte	0x1
 1526 00be 15020000 		.4byte	.LASF17
 1527 00c2 01       		.byte	0x1
 1528 00c3 49       		.byte	0x49
 1529 00c4 01       		.byte	0x1
 1530 00c5 00000000 		.4byte	.LFB0
 1531 00c9 2A000000 		.4byte	.LFE0
 1532 00cd 00000000 		.4byte	.LLST0
 1533 00d1 01       		.byte	0x1
 1534 00d2 07       		.uleb128 0x7
 1535 00d3 01       		.byte	0x1
 1536 00d4 7C010000 		.4byte	.LASF18
 1537 00d8 01       		.byte	0x1
 1538 00d9 65       		.byte	0x65
 1539 00da 01       		.byte	0x1
 1540 00db 00000000 		.4byte	.LFB1
ARM GAS  C:\Users\GRAZIA~1.RAV\AppData\Local\Temp\ccBCmqGf.s 			page 58


 1541 00df 26000000 		.4byte	.LFE1
 1542 00e3 2C000000 		.4byte	.LLST1
 1543 00e7 01       		.byte	0x1
 1544 00e8 08       		.uleb128 0x8
 1545 00e9 01       		.byte	0x1
 1546 00ea 9D030000 		.4byte	.LASF19
 1547 00ee 01       		.byte	0x1
 1548 00ef AE       		.byte	0xae
 1549 00f0 01       		.byte	0x1
 1550 00f1 00000000 		.4byte	.LFB2
 1551 00f5 56000000 		.4byte	.LFE2
 1552 00f9 58000000 		.4byte	.LLST2
 1553 00fd 01       		.byte	0x1
 1554 00fe 11010000 		.4byte	0x111
 1555 0102 09       		.uleb128 0x9
 1556 0103 C5040000 		.4byte	.LASF21
 1557 0107 01       		.byte	0x1
 1558 0108 B0       		.byte	0xb0
 1559 0109 6F000000 		.4byte	0x6f
 1560 010d 02       		.byte	0x2
 1561 010e 91       		.byte	0x91
 1562 010f 77       		.sleb128 -9
 1563 0110 00       		.byte	0
 1564 0111 08       		.uleb128 0x8
 1565 0112 01       		.byte	0x1
 1566 0113 62040000 		.4byte	.LASF20
 1567 0117 01       		.byte	0x1
 1568 0118 E3       		.byte	0xe3
 1569 0119 01       		.byte	0x1
 1570 011a 00000000 		.4byte	.LFB3
 1571 011e 56000000 		.4byte	.LFE3
 1572 0122 90000000 		.4byte	.LLST3
 1573 0126 01       		.byte	0x1
 1574 0127 3A010000 		.4byte	0x13a
 1575 012b 09       		.uleb128 0x9
 1576 012c C5040000 		.4byte	.LASF21
 1577 0130 01       		.byte	0x1
 1578 0131 E5       		.byte	0xe5
 1579 0132 6F000000 		.4byte	0x6f
 1580 0136 02       		.byte	0x2
 1581 0137 91       		.byte	0x91
 1582 0138 77       		.sleb128 -9
 1583 0139 00       		.byte	0
 1584 013a 0A       		.uleb128 0xa
 1585 013b 01       		.byte	0x1
 1586 013c 28030000 		.4byte	.LASF32
 1587 0140 01       		.byte	0x1
 1588 0141 1901     		.2byte	0x119
 1589 0143 01       		.byte	0x1
 1590 0144 6F000000 		.4byte	0x6f
 1591 0148 00000000 		.4byte	.LFB4
 1592 014c 18000000 		.4byte	.LFE4
 1593 0150 C8000000 		.4byte	.LLST4
 1594 0154 01       		.byte	0x1
 1595 0155 0B       		.uleb128 0xb
 1596 0156 01       		.byte	0x1
 1597 0157 96020000 		.4byte	.LASF22
ARM GAS  C:\Users\GRAZIA~1.RAV\AppData\Local\Temp\ccBCmqGf.s 			page 59


 1598 015b 01       		.byte	0x1
 1599 015c 3101     		.2byte	0x131
 1600 015e 01       		.byte	0x1
 1601 015f 00000000 		.4byte	.LFB5
 1602 0163 20000000 		.4byte	.LFE5
 1603 0167 F4000000 		.4byte	.LLST5
 1604 016b 01       		.byte	0x1
 1605 016c 80010000 		.4byte	0x180
 1606 0170 0C       		.uleb128 0xc
 1607 0171 CE010000 		.4byte	.LASF24
 1608 0175 01       		.byte	0x1
 1609 0176 3101     		.2byte	0x131
 1610 0178 6F000000 		.4byte	0x6f
 1611 017c 02       		.byte	0x2
 1612 017d 91       		.byte	0x91
 1613 017e 77       		.sleb128 -9
 1614 017f 00       		.byte	0
 1615 0180 0B       		.uleb128 0xb
 1616 0181 01       		.byte	0x1
 1617 0182 AF010000 		.4byte	.LASF23
 1618 0186 01       		.byte	0x1
 1619 0187 8101     		.2byte	0x181
 1620 0189 01       		.byte	0x1
 1621 018a 00000000 		.4byte	.LFB6
 1622 018e 20000000 		.4byte	.LFE6
 1623 0192 2C010000 		.4byte	.LLST6
 1624 0196 01       		.byte	0x1
 1625 0197 AB010000 		.4byte	0x1ab
 1626 019b 0C       		.uleb128 0xc
 1627 019c CF020000 		.4byte	.LASF25
 1628 01a0 01       		.byte	0x1
 1629 01a1 8101     		.2byte	0x181
 1630 01a3 6F000000 		.4byte	0x6f
 1631 01a7 02       		.byte	0x2
 1632 01a8 91       		.byte	0x91
 1633 01a9 77       		.sleb128 -9
 1634 01aa 00       		.byte	0
 1635 01ab 0D       		.uleb128 0xd
 1636 01ac 01       		.byte	0x1
 1637 01ad 6D020000 		.4byte	.LASF27
 1638 01b1 01       		.byte	0x1
 1639 01b2 A201     		.2byte	0x1a2
 1640 01b4 01       		.byte	0x1
 1641 01b5 6F000000 		.4byte	0x6f
 1642 01b9 00000000 		.4byte	.LFB7
 1643 01bd 20000000 		.4byte	.LFE7
 1644 01c1 64010000 		.4byte	.LLST7
 1645 01c5 01       		.byte	0x1
 1646 01c6 DA010000 		.4byte	0x1da
 1647 01ca 0E       		.uleb128 0xe
 1648 01cb 3D040000 		.4byte	.LASF26
 1649 01cf 01       		.byte	0x1
 1650 01d0 A401     		.2byte	0x1a4
 1651 01d2 6F000000 		.4byte	0x6f
 1652 01d6 02       		.byte	0x2
 1653 01d7 91       		.byte	0x91
 1654 01d8 77       		.sleb128 -9
ARM GAS  C:\Users\GRAZIA~1.RAV\AppData\Local\Temp\ccBCmqGf.s 			page 60


 1655 01d9 00       		.byte	0
 1656 01da 0D       		.uleb128 0xd
 1657 01db 01       		.byte	0x1
 1658 01dc DD040000 		.4byte	.LASF28
 1659 01e0 01       		.byte	0x1
 1660 01e1 FD01     		.2byte	0x1fd
 1661 01e3 01       		.byte	0x1
 1662 01e4 6F000000 		.4byte	0x6f
 1663 01e8 00000000 		.4byte	.LFB8
 1664 01ec 26000000 		.4byte	.LFE8
 1665 01f0 9C010000 		.4byte	.LLST8
 1666 01f4 01       		.byte	0x1
 1667 01f5 09020000 		.4byte	0x209
 1668 01f9 0E       		.uleb128 0xe
 1669 01fa D6040000 		.4byte	.LASF29
 1670 01fe 01       		.byte	0x1
 1671 01ff FF01     		.2byte	0x1ff
 1672 0201 6F000000 		.4byte	0x6f
 1673 0205 02       		.byte	0x2
 1674 0206 91       		.byte	0x91
 1675 0207 77       		.sleb128 -9
 1676 0208 00       		.byte	0
 1677 0209 0D       		.uleb128 0xd
 1678 020a 01       		.byte	0x1
 1679 020b 65000000 		.4byte	.LASF30
 1680 020f 01       		.byte	0x1
 1681 0210 2C02     		.2byte	0x22c
 1682 0212 01       		.byte	0x1
 1683 0213 6F000000 		.4byte	0x6f
 1684 0217 00000000 		.4byte	.LFB9
 1685 021b 4C000000 		.4byte	.LFE9
 1686 021f D4010000 		.4byte	.LLST9
 1687 0223 01       		.byte	0x1
 1688 0224 47020000 		.4byte	0x247
 1689 0228 0E       		.uleb128 0xe
 1690 0229 3D040000 		.4byte	.LASF26
 1691 022d 01       		.byte	0x1
 1692 022e 2E02     		.2byte	0x22e
 1693 0230 6F000000 		.4byte	0x6f
 1694 0234 02       		.byte	0x2
 1695 0235 91       		.byte	0x91
 1696 0236 77       		.sleb128 -9
 1697 0237 0E       		.uleb128 0xe
 1698 0238 1F030000 		.4byte	.LASF31
 1699 023c 01       		.byte	0x1
 1700 023d 2F02     		.2byte	0x22f
 1701 023f 6F000000 		.4byte	0x6f
 1702 0243 02       		.byte	0x2
 1703 0244 91       		.byte	0x91
 1704 0245 76       		.sleb128 -10
 1705 0246 00       		.byte	0
 1706 0247 0F       		.uleb128 0xf
 1707 0248 01       		.byte	0x1
 1708 0249 6D030000 		.4byte	.LASF33
 1709 024d 01       		.byte	0x1
 1710 024e 9202     		.2byte	0x292
 1711 0250 01       		.byte	0x1
ARM GAS  C:\Users\GRAZIA~1.RAV\AppData\Local\Temp\ccBCmqGf.s 			page 61


 1712 0251 7A000000 		.4byte	0x7a
 1713 0255 00000000 		.4byte	.LFB10
 1714 0259 22000000 		.4byte	.LFE10
 1715 025d 0C020000 		.4byte	.LLST10
 1716 0261 01       		.byte	0x1
 1717 0262 0D       		.uleb128 0xd
 1718 0263 01       		.byte	0x1
 1719 0264 60010000 		.4byte	.LASF34
 1720 0268 01       		.byte	0x1
 1721 0269 B302     		.2byte	0x2b3
 1722 026b 01       		.byte	0x1
 1723 026c 6F000000 		.4byte	0x6f
 1724 0270 00000000 		.4byte	.LFB11
 1725 0274 34000000 		.4byte	.LFE11
 1726 0278 38020000 		.4byte	.LLST11
 1727 027c 01       		.byte	0x1
 1728 027d 91020000 		.4byte	0x291
 1729 0281 0E       		.uleb128 0xe
 1730 0282 B7020000 		.4byte	.LASF35
 1731 0286 01       		.byte	0x1
 1732 0287 B602     		.2byte	0x2b6
 1733 0289 6F000000 		.4byte	0x6f
 1734 028d 02       		.byte	0x2
 1735 028e 91       		.byte	0x91
 1736 028f 77       		.sleb128 -9
 1737 0290 00       		.byte	0
 1738 0291 10       		.uleb128 0x10
 1739 0292 01       		.byte	0x1
 1740 0293 D6020000 		.4byte	.LASF36
 1741 0297 01       		.byte	0x1
 1742 0298 0303     		.2byte	0x303
 1743 029a 01       		.byte	0x1
 1744 029b 00000000 		.4byte	.LFB12
 1745 029f 56000000 		.4byte	.LFE12
 1746 02a3 70020000 		.4byte	.LLST12
 1747 02a7 01       		.byte	0x1
 1748 02a8 BC020000 		.4byte	0x2bc
 1749 02ac 0E       		.uleb128 0xe
 1750 02ad C5040000 		.4byte	.LASF21
 1751 02b1 01       		.byte	0x1
 1752 02b2 0503     		.2byte	0x305
 1753 02b4 6F000000 		.4byte	0x6f
 1754 02b8 02       		.byte	0x2
 1755 02b9 91       		.byte	0x91
 1756 02ba 77       		.sleb128 -9
 1757 02bb 00       		.byte	0
 1758 02bc 0B       		.uleb128 0xb
 1759 02bd 01       		.byte	0x1
 1760 02be A8040000 		.4byte	.LASF37
 1761 02c2 01       		.byte	0x1
 1762 02c3 4003     		.2byte	0x340
 1763 02c5 01       		.byte	0x1
 1764 02c6 00000000 		.4byte	.LFB13
 1765 02ca 14000000 		.4byte	.LFE13
 1766 02ce A8020000 		.4byte	.LLST13
 1767 02d2 01       		.byte	0x1
 1768 02d3 E7020000 		.4byte	0x2e7
ARM GAS  C:\Users\GRAZIA~1.RAV\AppData\Local\Temp\ccBCmqGf.s 			page 62


 1769 02d7 0C       		.uleb128 0xc
 1770 02d8 A3010000 		.4byte	.LASF38
 1771 02dc 01       		.byte	0x1
 1772 02dd 4003     		.2byte	0x340
 1773 02df 6F000000 		.4byte	0x6f
 1774 02e3 02       		.byte	0x2
 1775 02e4 91       		.byte	0x91
 1776 02e5 77       		.sleb128 -9
 1777 02e6 00       		.byte	0
 1778 02e7 0B       		.uleb128 0xb
 1779 02e8 01       		.byte	0x1
 1780 02e9 31000000 		.4byte	.LASF39
 1781 02ed 01       		.byte	0x1
 1782 02ee 6503     		.2byte	0x365
 1783 02f0 01       		.byte	0x1
 1784 02f1 00000000 		.4byte	.LFB14
 1785 02f5 20000000 		.4byte	.LFE14
 1786 02f9 E0020000 		.4byte	.LLST14
 1787 02fd 01       		.byte	0x1
 1788 02fe 12030000 		.4byte	0x312
 1789 0302 0C       		.uleb128 0xc
 1790 0303 01030000 		.4byte	.LASF40
 1791 0307 01       		.byte	0x1
 1792 0308 6503     		.2byte	0x365
 1793 030a 6F000000 		.4byte	0x6f
 1794 030e 02       		.byte	0x2
 1795 030f 91       		.byte	0x91
 1796 0310 77       		.sleb128 -9
 1797 0311 00       		.byte	0
 1798 0312 0B       		.uleb128 0xb
 1799 0313 01       		.byte	0x1
 1800 0314 4B000000 		.4byte	.LASF41
 1801 0318 01       		.byte	0x1
 1802 0319 7A03     		.2byte	0x37a
 1803 031b 01       		.byte	0x1
 1804 031c 00000000 		.4byte	.LFB15
 1805 0320 20000000 		.4byte	.LFE15
 1806 0324 18030000 		.4byte	.LLST15
 1807 0328 01       		.byte	0x1
 1808 0329 3D030000 		.4byte	0x33d
 1809 032d 0C       		.uleb128 0xc
 1810 032e 01030000 		.4byte	.LASF40
 1811 0332 01       		.byte	0x1
 1812 0333 7A03     		.2byte	0x37a
 1813 0335 6F000000 		.4byte	0x6f
 1814 0339 02       		.byte	0x2
 1815 033a 91       		.byte	0x91
 1816 033b 77       		.sleb128 -9
 1817 033c 00       		.byte	0
 1818 033d 0B       		.uleb128 0xb
 1819 033e 01       		.byte	0x1
 1820 033f 48030000 		.4byte	.LASF42
 1821 0343 01       		.byte	0x1
 1822 0344 C803     		.2byte	0x3c8
 1823 0346 01       		.byte	0x1
 1824 0347 00000000 		.4byte	.LFB16
 1825 034b 20000000 		.4byte	.LFE16
ARM GAS  C:\Users\GRAZIA~1.RAV\AppData\Local\Temp\ccBCmqGf.s 			page 63


 1826 034f 50030000 		.4byte	.LLST16
 1827 0353 01       		.byte	0x1
 1828 0354 68030000 		.4byte	0x368
 1829 0358 0C       		.uleb128 0xc
 1830 0359 CF020000 		.4byte	.LASF25
 1831 035d 01       		.byte	0x1
 1832 035e C803     		.2byte	0x3c8
 1833 0360 6F000000 		.4byte	0x6f
 1834 0364 02       		.byte	0x2
 1835 0365 91       		.byte	0x91
 1836 0366 77       		.sleb128 -9
 1837 0367 00       		.byte	0
 1838 0368 0B       		.uleb128 0xb
 1839 0369 01       		.byte	0x1
 1840 036a 00000000 		.4byte	.LASF43
 1841 036e 01       		.byte	0x1
 1842 036f EA03     		.2byte	0x3ea
 1843 0371 01       		.byte	0x1
 1844 0372 00000000 		.4byte	.LFB17
 1845 0376 2E000000 		.4byte	.LFE17
 1846 037a 88030000 		.4byte	.LLST17
 1847 037e 01       		.byte	0x1
 1848 037f 93030000 		.4byte	0x393
 1849 0383 0C       		.uleb128 0xc
 1850 0384 1F000000 		.4byte	.LASF44
 1851 0388 01       		.byte	0x1
 1852 0389 EA03     		.2byte	0x3ea
 1853 038b 6F000000 		.4byte	0x6f
 1854 038f 02       		.byte	0x2
 1855 0390 91       		.byte	0x91
 1856 0391 77       		.sleb128 -9
 1857 0392 00       		.byte	0
 1858 0393 0A       		.uleb128 0xa
 1859 0394 01       		.byte	0x1
 1860 0395 54020000 		.4byte	.LASF45
 1861 0399 01       		.byte	0x1
 1862 039a 2E04     		.2byte	0x42e
 1863 039c 01       		.byte	0x1
 1864 039d 6F000000 		.4byte	0x6f
 1865 03a1 00000000 		.4byte	.LFB18
 1866 03a5 18000000 		.4byte	.LFE18
 1867 03a9 C0030000 		.4byte	.LLST18
 1868 03ad 01       		.byte	0x1
 1869 03ae 0B       		.uleb128 0xb
 1870 03af 01       		.byte	0x1
 1871 03b0 27020000 		.4byte	.LASF46
 1872 03b4 01       		.byte	0x1
 1873 03b5 5204     		.2byte	0x452
 1874 03b7 01       		.byte	0x1
 1875 03b8 00000000 		.4byte	.LFB19
 1876 03bc 36000000 		.4byte	.LFE19
 1877 03c0 EC030000 		.4byte	.LLST19
 1878 03c4 01       		.byte	0x1
 1879 03c5 D9030000 		.4byte	0x3d9
 1880 03c9 0C       		.uleb128 0xc
 1881 03ca 1F000000 		.4byte	.LASF44
 1882 03ce 01       		.byte	0x1
ARM GAS  C:\Users\GRAZIA~1.RAV\AppData\Local\Temp\ccBCmqGf.s 			page 64


 1883 03cf 5204     		.2byte	0x452
 1884 03d1 6F000000 		.4byte	0x6f
 1885 03d5 02       		.byte	0x2
 1886 03d6 91       		.byte	0x91
 1887 03d7 77       		.sleb128 -9
 1888 03d8 00       		.byte	0
 1889 03d9 10       		.uleb128 0x10
 1890 03da 01       		.byte	0x1
 1891 03db 09030000 		.4byte	.LASF47
 1892 03df 01       		.byte	0x1
 1893 03e0 AE04     		.2byte	0x4ae
 1894 03e2 01       		.byte	0x1
 1895 03e3 00000000 		.4byte	.LFB20
 1896 03e7 48000000 		.4byte	.LFE20
 1897 03eb 24040000 		.4byte	.LLST20
 1898 03ef 01       		.byte	0x1
 1899 03f0 13040000 		.4byte	0x413
 1900 03f4 0C       		.uleb128 0xc
 1901 03f5 2A000000 		.4byte	.LASF48
 1902 03f9 01       		.byte	0x1
 1903 03fa AE04     		.2byte	0x4ae
 1904 03fc 13040000 		.4byte	0x413
 1905 0400 02       		.byte	0x2
 1906 0401 91       		.byte	0x91
 1907 0402 6C       		.sleb128 -20
 1908 0403 0E       		.uleb128 0xe
 1909 0404 F6040000 		.4byte	.LASF49
 1910 0408 01       		.byte	0x1
 1911 0409 B004     		.2byte	0x4b0
 1912 040b 7A000000 		.4byte	0x7a
 1913 040f 02       		.byte	0x2
 1914 0410 91       		.byte	0x91
 1915 0411 76       		.sleb128 -10
 1916 0412 00       		.byte	0
 1917 0413 11       		.uleb128 0x11
 1918 0414 04       		.byte	0x4
 1919 0415 19040000 		.4byte	0x419
 1920 0419 12       		.uleb128 0x12
 1921 041a 93000000 		.4byte	0x93
 1922 041e 10       		.uleb128 0x10
 1923 041f 01       		.byte	0x1
 1924 0420 79040000 		.4byte	.LASF50
 1925 0424 01       		.byte	0x1
 1926 0425 D404     		.2byte	0x4d4
 1927 0427 01       		.byte	0x1
 1928 0428 00000000 		.4byte	.LFB21
 1929 042c 46000000 		.4byte	.LFE21
 1930 0430 5C040000 		.4byte	.LLST21
 1931 0434 01       		.byte	0x1
 1932 0435 67040000 		.4byte	0x467
 1933 0439 0C       		.uleb128 0xc
 1934 043a 2A000000 		.4byte	.LASF48
 1935 043e 01       		.byte	0x1
 1936 043f D404     		.2byte	0x4d4
 1937 0441 67040000 		.4byte	0x467
 1938 0445 02       		.byte	0x2
 1939 0446 91       		.byte	0x91
ARM GAS  C:\Users\GRAZIA~1.RAV\AppData\Local\Temp\ccBCmqGf.s 			page 65


 1940 0447 6C       		.sleb128 -20
 1941 0448 0C       		.uleb128 0xc
 1942 0449 33040000 		.4byte	.LASF51
 1943 044d 01       		.byte	0x1
 1944 044e D404     		.2byte	0x4d4
 1945 0450 6F000000 		.4byte	0x6f
 1946 0454 02       		.byte	0x2
 1947 0455 91       		.byte	0x91
 1948 0456 6B       		.sleb128 -21
 1949 0457 0E       		.uleb128 0xe
 1950 0458 F6040000 		.4byte	.LASF49
 1951 045c 01       		.byte	0x1
 1952 045d D704     		.2byte	0x4d7
 1953 045f 6F000000 		.4byte	0x6f
 1954 0463 02       		.byte	0x2
 1955 0464 91       		.byte	0x91
 1956 0465 77       		.sleb128 -9
 1957 0466 00       		.byte	0
 1958 0467 11       		.uleb128 0x11
 1959 0468 04       		.byte	0x4
 1960 0469 6D040000 		.4byte	0x46d
 1961 046d 12       		.uleb128 0x12
 1962 046e 6F000000 		.4byte	0x6f
 1963 0472 10       		.uleb128 0x10
 1964 0473 01       		.byte	0x1
 1965 0474 D6010000 		.4byte	.LASF52
 1966 0478 01       		.byte	0x1
 1967 0479 F904     		.2byte	0x4f9
 1968 047b 01       		.byte	0x1
 1969 047c 00000000 		.4byte	.LFB22
 1970 0480 38000000 		.4byte	.LFE22
 1971 0484 94040000 		.4byte	.LLST22
 1972 0488 01       		.byte	0x1
 1973 0489 9D040000 		.4byte	0x49d
 1974 048d 0C       		.uleb128 0xc
 1975 048e 1F000000 		.4byte	.LASF44
 1976 0492 01       		.byte	0x1
 1977 0493 F904     		.2byte	0x4f9
 1978 0495 6F000000 		.4byte	0x6f
 1979 0499 02       		.byte	0x2
 1980 049a 91       		.byte	0x91
 1981 049b 77       		.sleb128 -9
 1982 049c 00       		.byte	0
 1983 049d 0D       		.uleb128 0xd
 1984 049e 01       		.byte	0x1
 1985 049f 81030000 		.4byte	.LASF53
 1986 04a3 01       		.byte	0x1
 1987 04a4 1E05     		.2byte	0x51e
 1988 04a6 01       		.byte	0x1
 1989 04a7 6F000000 		.4byte	0x6f
 1990 04ab 00000000 		.4byte	.LFB23
 1991 04af 4A000000 		.4byte	.LFE23
 1992 04b3 CC040000 		.4byte	.LLST23
 1993 04b7 01       		.byte	0x1
 1994 04b8 CC040000 		.4byte	0x4cc
 1995 04bc 0E       		.uleb128 0xe
 1996 04bd B7020000 		.4byte	.LASF35
ARM GAS  C:\Users\GRAZIA~1.RAV\AppData\Local\Temp\ccBCmqGf.s 			page 66


 1997 04c1 01       		.byte	0x1
 1998 04c2 2105     		.2byte	0x521
 1999 04c4 6F000000 		.4byte	0x6f
 2000 04c8 02       		.byte	0x2
 2001 04c9 91       		.byte	0x91
 2002 04ca 77       		.sleb128 -9
 2003 04cb 00       		.byte	0
 2004 04cc 10       		.uleb128 0x10
 2005 04cd 01       		.byte	0x1
 2006 04ce 8E040000 		.4byte	.LASF54
 2007 04d2 01       		.byte	0x1
 2008 04d3 7405     		.2byte	0x574
 2009 04d5 01       		.byte	0x1
 2010 04d6 00000000 		.4byte	.LFB24
 2011 04da 56000000 		.4byte	.LFE24
 2012 04de 04050000 		.4byte	.LLST24
 2013 04e2 01       		.byte	0x1
 2014 04e3 F7040000 		.4byte	0x4f7
 2015 04e7 0E       		.uleb128 0xe
 2016 04e8 C5040000 		.4byte	.LASF21
 2017 04ec 01       		.byte	0x1
 2018 04ed 7605     		.2byte	0x576
 2019 04ef 6F000000 		.4byte	0x6f
 2020 04f3 02       		.byte	0x2
 2021 04f4 91       		.byte	0x91
 2022 04f5 77       		.sleb128 -9
 2023 04f6 00       		.byte	0
 2024 04f7 10       		.uleb128 0x10
 2025 04f8 01       		.byte	0x1
 2026 04f9 EA010000 		.4byte	.LASF55
 2027 04fd 01       		.byte	0x1
 2028 04fe CD05     		.2byte	0x5cd
 2029 0500 01       		.byte	0x1
 2030 0501 00000000 		.4byte	.LFB25
 2031 0505 AE000000 		.4byte	.LFE25
 2032 0509 3C050000 		.4byte	.LLST25
 2033 050d 01       		.byte	0x1
 2034 050e 3B050000 		.4byte	0x53b
 2035 0512 0C       		.uleb128 0xc
 2036 0513 00020000 		.4byte	.LASF56
 2037 0517 01       		.byte	0x1
 2038 0518 CD05     		.2byte	0x5cd
 2039 051a 6F000000 		.4byte	0x6f
 2040 051e 02       		.byte	0x2
 2041 051f 91       		.byte	0x91
 2042 0520 6F       		.sleb128 -17
 2043 0521 13       		.uleb128 0x13
 2044 0522 18000000 		.4byte	.LBB2
 2045 0526 A6000000 		.4byte	.LBE2
 2046 052a 0E       		.uleb128 0xe
 2047 052b F0020000 		.4byte	.LASF57
 2048 052f 01       		.byte	0x1
 2049 0530 D505     		.2byte	0x5d5
 2050 0532 6F000000 		.4byte	0x6f
 2051 0536 02       		.byte	0x2
 2052 0537 91       		.byte	0x91
 2053 0538 77       		.sleb128 -9
ARM GAS  C:\Users\GRAZIA~1.RAV\AppData\Local\Temp\ccBCmqGf.s 			page 67


 2054 0539 00       		.byte	0
 2055 053a 00       		.byte	0
 2056 053b 10       		.uleb128 0x10
 2057 053c 01       		.byte	0x1
 2058 053d FE030000 		.4byte	.LASF58
 2059 0541 01       		.byte	0x1
 2060 0542 4606     		.2byte	0x646
 2061 0544 01       		.byte	0x1
 2062 0545 00000000 		.4byte	.LFB26
 2063 0549 3E000000 		.4byte	.LFE26
 2064 054d 74050000 		.4byte	.LLST26
 2065 0551 01       		.byte	0x1
 2066 0552 66050000 		.4byte	0x566
 2067 0556 0C       		.uleb128 0xc
 2068 0557 A3010000 		.4byte	.LASF38
 2069 055b 01       		.byte	0x1
 2070 055c 4606     		.2byte	0x646
 2071 055e 6F000000 		.4byte	0x6f
 2072 0562 02       		.byte	0x2
 2073 0563 91       		.byte	0x91
 2074 0564 77       		.sleb128 -9
 2075 0565 00       		.byte	0
 2076 0566 14       		.uleb128 0x14
 2077 0567 01       		.byte	0x1
 2078 0568 44040000 		.4byte	.LASF59
 2079 056c 01       		.byte	0x1
 2080 056d 7506     		.2byte	0x675
 2081 056f 01       		.byte	0x1
 2082 0570 00000000 		.4byte	.LFB27
 2083 0574 26000000 		.4byte	.LFE27
 2084 0578 AC050000 		.4byte	.LLST27
 2085 057c 01       		.byte	0x1
 2086 057d 14       		.uleb128 0x14
 2087 057e 01       		.byte	0x1
 2088 057f 3B020000 		.4byte	.LASF60
 2089 0583 01       		.byte	0x1
 2090 0584 9D06     		.2byte	0x69d
 2091 0586 01       		.byte	0x1
 2092 0587 00000000 		.4byte	.LFB28
 2093 058b 26000000 		.4byte	.LFE28
 2094 058f D8050000 		.4byte	.LLST28
 2095 0593 01       		.byte	0x1
 2096 0594 15       		.uleb128 0x15
 2097 0595 B7000000 		.4byte	.LASF64
 2098 0599 01       		.byte	0x1
 2099 059a 1C       		.byte	0x1c
 2100 059b 6F000000 		.4byte	0x6f
 2101 059f 01       		.byte	0x1
 2102 05a0 05       		.byte	0x5
 2103 05a1 03       		.byte	0x3
 2104 05a2 00000000 		.4byte	UART_4D_LCD_initVar
 2105 05a6 00       		.byte	0
 2106              		.section	.debug_abbrev,"",%progbits
 2107              	.Ldebug_abbrev0:
 2108 0000 01       		.uleb128 0x1
 2109 0001 11       		.uleb128 0x11
 2110 0002 01       		.byte	0x1
ARM GAS  C:\Users\GRAZIA~1.RAV\AppData\Local\Temp\ccBCmqGf.s 			page 68


 2111 0003 25       		.uleb128 0x25
 2112 0004 0E       		.uleb128 0xe
 2113 0005 13       		.uleb128 0x13
 2114 0006 0B       		.uleb128 0xb
 2115 0007 03       		.uleb128 0x3
 2116 0008 0E       		.uleb128 0xe
 2117 0009 1B       		.uleb128 0x1b
 2118 000a 0E       		.uleb128 0xe
 2119 000b 55       		.uleb128 0x55
 2120 000c 06       		.uleb128 0x6
 2121 000d 11       		.uleb128 0x11
 2122 000e 01       		.uleb128 0x1
 2123 000f 52       		.uleb128 0x52
 2124 0010 01       		.uleb128 0x1
 2125 0011 10       		.uleb128 0x10
 2126 0012 06       		.uleb128 0x6
 2127 0013 00       		.byte	0
 2128 0014 00       		.byte	0
 2129 0015 02       		.uleb128 0x2
 2130 0016 24       		.uleb128 0x24
 2131 0017 00       		.byte	0
 2132 0018 0B       		.uleb128 0xb
 2133 0019 0B       		.uleb128 0xb
 2134 001a 3E       		.uleb128 0x3e
 2135 001b 0B       		.uleb128 0xb
 2136 001c 03       		.uleb128 0x3
 2137 001d 0E       		.uleb128 0xe
 2138 001e 00       		.byte	0
 2139 001f 00       		.byte	0
 2140 0020 03       		.uleb128 0x3
 2141 0021 24       		.uleb128 0x24
 2142 0022 00       		.byte	0
 2143 0023 0B       		.uleb128 0xb
 2144 0024 0B       		.uleb128 0xb
 2145 0025 3E       		.uleb128 0x3e
 2146 0026 0B       		.uleb128 0xb
 2147 0027 03       		.uleb128 0x3
 2148 0028 08       		.uleb128 0x8
 2149 0029 00       		.byte	0
 2150 002a 00       		.byte	0
 2151 002b 04       		.uleb128 0x4
 2152 002c 16       		.uleb128 0x16
 2153 002d 00       		.byte	0
 2154 002e 03       		.uleb128 0x3
 2155 002f 0E       		.uleb128 0xe
 2156 0030 3A       		.uleb128 0x3a
 2157 0031 0B       		.uleb128 0xb
 2158 0032 3B       		.uleb128 0x3b
 2159 0033 0B       		.uleb128 0xb
 2160 0034 49       		.uleb128 0x49
 2161 0035 13       		.uleb128 0x13
 2162 0036 00       		.byte	0
 2163 0037 00       		.byte	0
 2164 0038 05       		.uleb128 0x5
 2165 0039 35       		.uleb128 0x35
 2166 003a 00       		.byte	0
 2167 003b 49       		.uleb128 0x49
ARM GAS  C:\Users\GRAZIA~1.RAV\AppData\Local\Temp\ccBCmqGf.s 			page 69


 2168 003c 13       		.uleb128 0x13
 2169 003d 00       		.byte	0
 2170 003e 00       		.byte	0
 2171 003f 06       		.uleb128 0x6
 2172 0040 2E       		.uleb128 0x2e
 2173 0041 00       		.byte	0
 2174 0042 3F       		.uleb128 0x3f
 2175 0043 0C       		.uleb128 0xc
 2176 0044 03       		.uleb128 0x3
 2177 0045 0E       		.uleb128 0xe
 2178 0046 3A       		.uleb128 0x3a
 2179 0047 0B       		.uleb128 0xb
 2180 0048 3B       		.uleb128 0x3b
 2181 0049 0B       		.uleb128 0xb
 2182 004a 27       		.uleb128 0x27
 2183 004b 0C       		.uleb128 0xc
 2184 004c 11       		.uleb128 0x11
 2185 004d 01       		.uleb128 0x1
 2186 004e 12       		.uleb128 0x12
 2187 004f 01       		.uleb128 0x1
 2188 0050 40       		.uleb128 0x40
 2189 0051 06       		.uleb128 0x6
 2190 0052 9642     		.uleb128 0x2116
 2191 0054 0C       		.uleb128 0xc
 2192 0055 00       		.byte	0
 2193 0056 00       		.byte	0
 2194 0057 07       		.uleb128 0x7
 2195 0058 2E       		.uleb128 0x2e
 2196 0059 00       		.byte	0
 2197 005a 3F       		.uleb128 0x3f
 2198 005b 0C       		.uleb128 0xc
 2199 005c 03       		.uleb128 0x3
 2200 005d 0E       		.uleb128 0xe
 2201 005e 3A       		.uleb128 0x3a
 2202 005f 0B       		.uleb128 0xb
 2203 0060 3B       		.uleb128 0x3b
 2204 0061 0B       		.uleb128 0xb
 2205 0062 27       		.uleb128 0x27
 2206 0063 0C       		.uleb128 0xc
 2207 0064 11       		.uleb128 0x11
 2208 0065 01       		.uleb128 0x1
 2209 0066 12       		.uleb128 0x12
 2210 0067 01       		.uleb128 0x1
 2211 0068 40       		.uleb128 0x40
 2212 0069 06       		.uleb128 0x6
 2213 006a 9742     		.uleb128 0x2117
 2214 006c 0C       		.uleb128 0xc
 2215 006d 00       		.byte	0
 2216 006e 00       		.byte	0
 2217 006f 08       		.uleb128 0x8
 2218 0070 2E       		.uleb128 0x2e
 2219 0071 01       		.byte	0x1
 2220 0072 3F       		.uleb128 0x3f
 2221 0073 0C       		.uleb128 0xc
 2222 0074 03       		.uleb128 0x3
 2223 0075 0E       		.uleb128 0xe
 2224 0076 3A       		.uleb128 0x3a
ARM GAS  C:\Users\GRAZIA~1.RAV\AppData\Local\Temp\ccBCmqGf.s 			page 70


 2225 0077 0B       		.uleb128 0xb
 2226 0078 3B       		.uleb128 0x3b
 2227 0079 0B       		.uleb128 0xb
 2228 007a 27       		.uleb128 0x27
 2229 007b 0C       		.uleb128 0xc
 2230 007c 11       		.uleb128 0x11
 2231 007d 01       		.uleb128 0x1
 2232 007e 12       		.uleb128 0x12
 2233 007f 01       		.uleb128 0x1
 2234 0080 40       		.uleb128 0x40
 2235 0081 06       		.uleb128 0x6
 2236 0082 9642     		.uleb128 0x2116
 2237 0084 0C       		.uleb128 0xc
 2238 0085 01       		.uleb128 0x1
 2239 0086 13       		.uleb128 0x13
 2240 0087 00       		.byte	0
 2241 0088 00       		.byte	0
 2242 0089 09       		.uleb128 0x9
 2243 008a 34       		.uleb128 0x34
 2244 008b 00       		.byte	0
 2245 008c 03       		.uleb128 0x3
 2246 008d 0E       		.uleb128 0xe
 2247 008e 3A       		.uleb128 0x3a
 2248 008f 0B       		.uleb128 0xb
 2249 0090 3B       		.uleb128 0x3b
 2250 0091 0B       		.uleb128 0xb
 2251 0092 49       		.uleb128 0x49
 2252 0093 13       		.uleb128 0x13
 2253 0094 02       		.uleb128 0x2
 2254 0095 0A       		.uleb128 0xa
 2255 0096 00       		.byte	0
 2256 0097 00       		.byte	0
 2257 0098 0A       		.uleb128 0xa
 2258 0099 2E       		.uleb128 0x2e
 2259 009a 00       		.byte	0
 2260 009b 3F       		.uleb128 0x3f
 2261 009c 0C       		.uleb128 0xc
 2262 009d 03       		.uleb128 0x3
 2263 009e 0E       		.uleb128 0xe
 2264 009f 3A       		.uleb128 0x3a
 2265 00a0 0B       		.uleb128 0xb
 2266 00a1 3B       		.uleb128 0x3b
 2267 00a2 05       		.uleb128 0x5
 2268 00a3 27       		.uleb128 0x27
 2269 00a4 0C       		.uleb128 0xc
 2270 00a5 49       		.uleb128 0x49
 2271 00a6 13       		.uleb128 0x13
 2272 00a7 11       		.uleb128 0x11
 2273 00a8 01       		.uleb128 0x1
 2274 00a9 12       		.uleb128 0x12
 2275 00aa 01       		.uleb128 0x1
 2276 00ab 40       		.uleb128 0x40
 2277 00ac 06       		.uleb128 0x6
 2278 00ad 9742     		.uleb128 0x2117
 2279 00af 0C       		.uleb128 0xc
 2280 00b0 00       		.byte	0
 2281 00b1 00       		.byte	0
ARM GAS  C:\Users\GRAZIA~1.RAV\AppData\Local\Temp\ccBCmqGf.s 			page 71


 2282 00b2 0B       		.uleb128 0xb
 2283 00b3 2E       		.uleb128 0x2e
 2284 00b4 01       		.byte	0x1
 2285 00b5 3F       		.uleb128 0x3f
 2286 00b6 0C       		.uleb128 0xc
 2287 00b7 03       		.uleb128 0x3
 2288 00b8 0E       		.uleb128 0xe
 2289 00b9 3A       		.uleb128 0x3a
 2290 00ba 0B       		.uleb128 0xb
 2291 00bb 3B       		.uleb128 0x3b
 2292 00bc 05       		.uleb128 0x5
 2293 00bd 27       		.uleb128 0x27
 2294 00be 0C       		.uleb128 0xc
 2295 00bf 11       		.uleb128 0x11
 2296 00c0 01       		.uleb128 0x1
 2297 00c1 12       		.uleb128 0x12
 2298 00c2 01       		.uleb128 0x1
 2299 00c3 40       		.uleb128 0x40
 2300 00c4 06       		.uleb128 0x6
 2301 00c5 9742     		.uleb128 0x2117
 2302 00c7 0C       		.uleb128 0xc
 2303 00c8 01       		.uleb128 0x1
 2304 00c9 13       		.uleb128 0x13
 2305 00ca 00       		.byte	0
 2306 00cb 00       		.byte	0
 2307 00cc 0C       		.uleb128 0xc
 2308 00cd 05       		.uleb128 0x5
 2309 00ce 00       		.byte	0
 2310 00cf 03       		.uleb128 0x3
 2311 00d0 0E       		.uleb128 0xe
 2312 00d1 3A       		.uleb128 0x3a
 2313 00d2 0B       		.uleb128 0xb
 2314 00d3 3B       		.uleb128 0x3b
 2315 00d4 05       		.uleb128 0x5
 2316 00d5 49       		.uleb128 0x49
 2317 00d6 13       		.uleb128 0x13
 2318 00d7 02       		.uleb128 0x2
 2319 00d8 0A       		.uleb128 0xa
 2320 00d9 00       		.byte	0
 2321 00da 00       		.byte	0
 2322 00db 0D       		.uleb128 0xd
 2323 00dc 2E       		.uleb128 0x2e
 2324 00dd 01       		.byte	0x1
 2325 00de 3F       		.uleb128 0x3f
 2326 00df 0C       		.uleb128 0xc
 2327 00e0 03       		.uleb128 0x3
 2328 00e1 0E       		.uleb128 0xe
 2329 00e2 3A       		.uleb128 0x3a
 2330 00e3 0B       		.uleb128 0xb
 2331 00e4 3B       		.uleb128 0x3b
 2332 00e5 05       		.uleb128 0x5
 2333 00e6 27       		.uleb128 0x27
 2334 00e7 0C       		.uleb128 0xc
 2335 00e8 49       		.uleb128 0x49
 2336 00e9 13       		.uleb128 0x13
 2337 00ea 11       		.uleb128 0x11
 2338 00eb 01       		.uleb128 0x1
ARM GAS  C:\Users\GRAZIA~1.RAV\AppData\Local\Temp\ccBCmqGf.s 			page 72


 2339 00ec 12       		.uleb128 0x12
 2340 00ed 01       		.uleb128 0x1
 2341 00ee 40       		.uleb128 0x40
 2342 00ef 06       		.uleb128 0x6
 2343 00f0 9742     		.uleb128 0x2117
 2344 00f2 0C       		.uleb128 0xc
 2345 00f3 01       		.uleb128 0x1
 2346 00f4 13       		.uleb128 0x13
 2347 00f5 00       		.byte	0
 2348 00f6 00       		.byte	0
 2349 00f7 0E       		.uleb128 0xe
 2350 00f8 34       		.uleb128 0x34
 2351 00f9 00       		.byte	0
 2352 00fa 03       		.uleb128 0x3
 2353 00fb 0E       		.uleb128 0xe
 2354 00fc 3A       		.uleb128 0x3a
 2355 00fd 0B       		.uleb128 0xb
 2356 00fe 3B       		.uleb128 0x3b
 2357 00ff 05       		.uleb128 0x5
 2358 0100 49       		.uleb128 0x49
 2359 0101 13       		.uleb128 0x13
 2360 0102 02       		.uleb128 0x2
 2361 0103 0A       		.uleb128 0xa
 2362 0104 00       		.byte	0
 2363 0105 00       		.byte	0
 2364 0106 0F       		.uleb128 0xf
 2365 0107 2E       		.uleb128 0x2e
 2366 0108 00       		.byte	0
 2367 0109 3F       		.uleb128 0x3f
 2368 010a 0C       		.uleb128 0xc
 2369 010b 03       		.uleb128 0x3
 2370 010c 0E       		.uleb128 0xe
 2371 010d 3A       		.uleb128 0x3a
 2372 010e 0B       		.uleb128 0xb
 2373 010f 3B       		.uleb128 0x3b
 2374 0110 05       		.uleb128 0x5
 2375 0111 27       		.uleb128 0x27
 2376 0112 0C       		.uleb128 0xc
 2377 0113 49       		.uleb128 0x49
 2378 0114 13       		.uleb128 0x13
 2379 0115 11       		.uleb128 0x11
 2380 0116 01       		.uleb128 0x1
 2381 0117 12       		.uleb128 0x12
 2382 0118 01       		.uleb128 0x1
 2383 0119 40       		.uleb128 0x40
 2384 011a 06       		.uleb128 0x6
 2385 011b 9642     		.uleb128 0x2116
 2386 011d 0C       		.uleb128 0xc
 2387 011e 00       		.byte	0
 2388 011f 00       		.byte	0
 2389 0120 10       		.uleb128 0x10
 2390 0121 2E       		.uleb128 0x2e
 2391 0122 01       		.byte	0x1
 2392 0123 3F       		.uleb128 0x3f
 2393 0124 0C       		.uleb128 0xc
 2394 0125 03       		.uleb128 0x3
 2395 0126 0E       		.uleb128 0xe
ARM GAS  C:\Users\GRAZIA~1.RAV\AppData\Local\Temp\ccBCmqGf.s 			page 73


 2396 0127 3A       		.uleb128 0x3a
 2397 0128 0B       		.uleb128 0xb
 2398 0129 3B       		.uleb128 0x3b
 2399 012a 05       		.uleb128 0x5
 2400 012b 27       		.uleb128 0x27
 2401 012c 0C       		.uleb128 0xc
 2402 012d 11       		.uleb128 0x11
 2403 012e 01       		.uleb128 0x1
 2404 012f 12       		.uleb128 0x12
 2405 0130 01       		.uleb128 0x1
 2406 0131 40       		.uleb128 0x40
 2407 0132 06       		.uleb128 0x6
 2408 0133 9642     		.uleb128 0x2116
 2409 0135 0C       		.uleb128 0xc
 2410 0136 01       		.uleb128 0x1
 2411 0137 13       		.uleb128 0x13
 2412 0138 00       		.byte	0
 2413 0139 00       		.byte	0
 2414 013a 11       		.uleb128 0x11
 2415 013b 0F       		.uleb128 0xf
 2416 013c 00       		.byte	0
 2417 013d 0B       		.uleb128 0xb
 2418 013e 0B       		.uleb128 0xb
 2419 013f 49       		.uleb128 0x49
 2420 0140 13       		.uleb128 0x13
 2421 0141 00       		.byte	0
 2422 0142 00       		.byte	0
 2423 0143 12       		.uleb128 0x12
 2424 0144 26       		.uleb128 0x26
 2425 0145 00       		.byte	0
 2426 0146 49       		.uleb128 0x49
 2427 0147 13       		.uleb128 0x13
 2428 0148 00       		.byte	0
 2429 0149 00       		.byte	0
 2430 014a 13       		.uleb128 0x13
 2431 014b 0B       		.uleb128 0xb
 2432 014c 01       		.byte	0x1
 2433 014d 11       		.uleb128 0x11
 2434 014e 01       		.uleb128 0x1
 2435 014f 12       		.uleb128 0x12
 2436 0150 01       		.uleb128 0x1
 2437 0151 00       		.byte	0
 2438 0152 00       		.byte	0
 2439 0153 14       		.uleb128 0x14
 2440 0154 2E       		.uleb128 0x2e
 2441 0155 00       		.byte	0
 2442 0156 3F       		.uleb128 0x3f
 2443 0157 0C       		.uleb128 0xc
 2444 0158 03       		.uleb128 0x3
 2445 0159 0E       		.uleb128 0xe
 2446 015a 3A       		.uleb128 0x3a
 2447 015b 0B       		.uleb128 0xb
 2448 015c 3B       		.uleb128 0x3b
 2449 015d 05       		.uleb128 0x5
 2450 015e 27       		.uleb128 0x27
 2451 015f 0C       		.uleb128 0xc
 2452 0160 11       		.uleb128 0x11
ARM GAS  C:\Users\GRAZIA~1.RAV\AppData\Local\Temp\ccBCmqGf.s 			page 74


 2453 0161 01       		.uleb128 0x1
 2454 0162 12       		.uleb128 0x12
 2455 0163 01       		.uleb128 0x1
 2456 0164 40       		.uleb128 0x40
 2457 0165 06       		.uleb128 0x6
 2458 0166 9642     		.uleb128 0x2116
 2459 0168 0C       		.uleb128 0xc
 2460 0169 00       		.byte	0
 2461 016a 00       		.byte	0
 2462 016b 15       		.uleb128 0x15
 2463 016c 34       		.uleb128 0x34
 2464 016d 00       		.byte	0
 2465 016e 03       		.uleb128 0x3
 2466 016f 0E       		.uleb128 0xe
 2467 0170 3A       		.uleb128 0x3a
 2468 0171 0B       		.uleb128 0xb
 2469 0172 3B       		.uleb128 0x3b
 2470 0173 0B       		.uleb128 0xb
 2471 0174 49       		.uleb128 0x49
 2472 0175 13       		.uleb128 0x13
 2473 0176 3F       		.uleb128 0x3f
 2474 0177 0C       		.uleb128 0xc
 2475 0178 02       		.uleb128 0x2
 2476 0179 0A       		.uleb128 0xa
 2477 017a 00       		.byte	0
 2478 017b 00       		.byte	0
 2479 017c 00       		.byte	0
 2480              		.section	.debug_loc,"",%progbits
 2481              	.Ldebug_loc0:
 2482              	.LLST0:
 2483 0000 00000000 		.4byte	.LFB0
 2484 0004 02000000 		.4byte	.LCFI0
 2485 0008 0200     		.2byte	0x2
 2486 000a 7D       		.byte	0x7d
 2487 000b 00       		.sleb128 0
 2488 000c 02000000 		.4byte	.LCFI0
 2489 0010 04000000 		.4byte	.LCFI1
 2490 0014 0200     		.2byte	0x2
 2491 0016 7D       		.byte	0x7d
 2492 0017 08       		.sleb128 8
 2493 0018 04000000 		.4byte	.LCFI1
 2494 001c 2A000000 		.4byte	.LFE0
 2495 0020 0200     		.2byte	0x2
 2496 0022 77       		.byte	0x77
 2497 0023 08       		.sleb128 8
 2498 0024 00000000 		.4byte	0
 2499 0028 00000000 		.4byte	0
 2500              	.LLST1:
 2501 002c 00000000 		.4byte	.LFB1
 2502 0030 02000000 		.4byte	.LCFI2
 2503 0034 0200     		.2byte	0x2
 2504 0036 7D       		.byte	0x7d
 2505 0037 00       		.sleb128 0
 2506 0038 02000000 		.4byte	.LCFI2
 2507 003c 04000000 		.4byte	.LCFI3
 2508 0040 0200     		.2byte	0x2
 2509 0042 7D       		.byte	0x7d
ARM GAS  C:\Users\GRAZIA~1.RAV\AppData\Local\Temp\ccBCmqGf.s 			page 75


 2510 0043 04       		.sleb128 4
 2511 0044 04000000 		.4byte	.LCFI3
 2512 0048 26000000 		.4byte	.LFE1
 2513 004c 0200     		.2byte	0x2
 2514 004e 77       		.byte	0x77
 2515 004f 04       		.sleb128 4
 2516 0050 00000000 		.4byte	0
 2517 0054 00000000 		.4byte	0
 2518              	.LLST2:
 2519 0058 00000000 		.4byte	.LFB2
 2520 005c 02000000 		.4byte	.LCFI4
 2521 0060 0200     		.2byte	0x2
 2522 0062 7D       		.byte	0x7d
 2523 0063 00       		.sleb128 0
 2524 0064 02000000 		.4byte	.LCFI4
 2525 0068 04000000 		.4byte	.LCFI5
 2526 006c 0200     		.2byte	0x2
 2527 006e 7D       		.byte	0x7d
 2528 006f 08       		.sleb128 8
 2529 0070 04000000 		.4byte	.LCFI5
 2530 0074 06000000 		.4byte	.LCFI6
 2531 0078 0200     		.2byte	0x2
 2532 007a 7D       		.byte	0x7d
 2533 007b 10       		.sleb128 16
 2534 007c 06000000 		.4byte	.LCFI6
 2535 0080 56000000 		.4byte	.LFE2
 2536 0084 0200     		.2byte	0x2
 2537 0086 77       		.byte	0x77
 2538 0087 10       		.sleb128 16
 2539 0088 00000000 		.4byte	0
 2540 008c 00000000 		.4byte	0
 2541              	.LLST3:
 2542 0090 00000000 		.4byte	.LFB3
 2543 0094 02000000 		.4byte	.LCFI7
 2544 0098 0200     		.2byte	0x2
 2545 009a 7D       		.byte	0x7d
 2546 009b 00       		.sleb128 0
 2547 009c 02000000 		.4byte	.LCFI7
 2548 00a0 04000000 		.4byte	.LCFI8
 2549 00a4 0200     		.2byte	0x2
 2550 00a6 7D       		.byte	0x7d
 2551 00a7 08       		.sleb128 8
 2552 00a8 04000000 		.4byte	.LCFI8
 2553 00ac 06000000 		.4byte	.LCFI9
 2554 00b0 0200     		.2byte	0x2
 2555 00b2 7D       		.byte	0x7d
 2556 00b3 10       		.sleb128 16
 2557 00b4 06000000 		.4byte	.LCFI9
 2558 00b8 56000000 		.4byte	.LFE3
 2559 00bc 0200     		.2byte	0x2
 2560 00be 77       		.byte	0x77
 2561 00bf 10       		.sleb128 16
 2562 00c0 00000000 		.4byte	0
 2563 00c4 00000000 		.4byte	0
 2564              	.LLST4:
 2565 00c8 00000000 		.4byte	.LFB4
 2566 00cc 02000000 		.4byte	.LCFI10
ARM GAS  C:\Users\GRAZIA~1.RAV\AppData\Local\Temp\ccBCmqGf.s 			page 76


 2567 00d0 0200     		.2byte	0x2
 2568 00d2 7D       		.byte	0x7d
 2569 00d3 00       		.sleb128 0
 2570 00d4 02000000 		.4byte	.LCFI10
 2571 00d8 04000000 		.4byte	.LCFI11
 2572 00dc 0200     		.2byte	0x2
 2573 00de 7D       		.byte	0x7d
 2574 00df 04       		.sleb128 4
 2575 00e0 04000000 		.4byte	.LCFI11
 2576 00e4 18000000 		.4byte	.LFE4
 2577 00e8 0200     		.2byte	0x2
 2578 00ea 77       		.byte	0x77
 2579 00eb 04       		.sleb128 4
 2580 00ec 00000000 		.4byte	0
 2581 00f0 00000000 		.4byte	0
 2582              	.LLST5:
 2583 00f4 00000000 		.4byte	.LFB5
 2584 00f8 02000000 		.4byte	.LCFI12
 2585 00fc 0200     		.2byte	0x2
 2586 00fe 7D       		.byte	0x7d
 2587 00ff 00       		.sleb128 0
 2588 0100 02000000 		.4byte	.LCFI12
 2589 0104 04000000 		.4byte	.LCFI13
 2590 0108 0200     		.2byte	0x2
 2591 010a 7D       		.byte	0x7d
 2592 010b 04       		.sleb128 4
 2593 010c 04000000 		.4byte	.LCFI13
 2594 0110 06000000 		.4byte	.LCFI14
 2595 0114 0200     		.2byte	0x2
 2596 0116 7D       		.byte	0x7d
 2597 0117 10       		.sleb128 16
 2598 0118 06000000 		.4byte	.LCFI14
 2599 011c 20000000 		.4byte	.LFE5
 2600 0120 0200     		.2byte	0x2
 2601 0122 77       		.byte	0x77
 2602 0123 10       		.sleb128 16
 2603 0124 00000000 		.4byte	0
 2604 0128 00000000 		.4byte	0
 2605              	.LLST6:
 2606 012c 00000000 		.4byte	.LFB6
 2607 0130 02000000 		.4byte	.LCFI15
 2608 0134 0200     		.2byte	0x2
 2609 0136 7D       		.byte	0x7d
 2610 0137 00       		.sleb128 0
 2611 0138 02000000 		.4byte	.LCFI15
 2612 013c 04000000 		.4byte	.LCFI16
 2613 0140 0200     		.2byte	0x2
 2614 0142 7D       		.byte	0x7d
 2615 0143 04       		.sleb128 4
 2616 0144 04000000 		.4byte	.LCFI16
 2617 0148 06000000 		.4byte	.LCFI17
 2618 014c 0200     		.2byte	0x2
 2619 014e 7D       		.byte	0x7d
 2620 014f 10       		.sleb128 16
 2621 0150 06000000 		.4byte	.LCFI17
 2622 0154 20000000 		.4byte	.LFE6
 2623 0158 0200     		.2byte	0x2
ARM GAS  C:\Users\GRAZIA~1.RAV\AppData\Local\Temp\ccBCmqGf.s 			page 77


 2624 015a 77       		.byte	0x77
 2625 015b 10       		.sleb128 16
 2626 015c 00000000 		.4byte	0
 2627 0160 00000000 		.4byte	0
 2628              	.LLST7:
 2629 0164 00000000 		.4byte	.LFB7
 2630 0168 02000000 		.4byte	.LCFI18
 2631 016c 0200     		.2byte	0x2
 2632 016e 7D       		.byte	0x7d
 2633 016f 00       		.sleb128 0
 2634 0170 02000000 		.4byte	.LCFI18
 2635 0174 04000000 		.4byte	.LCFI19
 2636 0178 0200     		.2byte	0x2
 2637 017a 7D       		.byte	0x7d
 2638 017b 04       		.sleb128 4
 2639 017c 04000000 		.4byte	.LCFI19
 2640 0180 06000000 		.4byte	.LCFI20
 2641 0184 0200     		.2byte	0x2
 2642 0186 7D       		.byte	0x7d
 2643 0187 10       		.sleb128 16
 2644 0188 06000000 		.4byte	.LCFI20
 2645 018c 20000000 		.4byte	.LFE7
 2646 0190 0200     		.2byte	0x2
 2647 0192 77       		.byte	0x77
 2648 0193 10       		.sleb128 16
 2649 0194 00000000 		.4byte	0
 2650 0198 00000000 		.4byte	0
 2651              	.LLST8:
 2652 019c 00000000 		.4byte	.LFB8
 2653 01a0 02000000 		.4byte	.LCFI21
 2654 01a4 0200     		.2byte	0x2
 2655 01a6 7D       		.byte	0x7d
 2656 01a7 00       		.sleb128 0
 2657 01a8 02000000 		.4byte	.LCFI21
 2658 01ac 04000000 		.4byte	.LCFI22
 2659 01b0 0200     		.2byte	0x2
 2660 01b2 7D       		.byte	0x7d
 2661 01b3 04       		.sleb128 4
 2662 01b4 04000000 		.4byte	.LCFI22
 2663 01b8 06000000 		.4byte	.LCFI23
 2664 01bc 0200     		.2byte	0x2
 2665 01be 7D       		.byte	0x7d
 2666 01bf 10       		.sleb128 16
 2667 01c0 06000000 		.4byte	.LCFI23
 2668 01c4 26000000 		.4byte	.LFE8
 2669 01c8 0200     		.2byte	0x2
 2670 01ca 77       		.byte	0x77
 2671 01cb 10       		.sleb128 16
 2672 01cc 00000000 		.4byte	0
 2673 01d0 00000000 		.4byte	0
 2674              	.LLST9:
 2675 01d4 00000000 		.4byte	.LFB9
 2676 01d8 02000000 		.4byte	.LCFI24
 2677 01dc 0200     		.2byte	0x2
 2678 01de 7D       		.byte	0x7d
 2679 01df 00       		.sleb128 0
 2680 01e0 02000000 		.4byte	.LCFI24
ARM GAS  C:\Users\GRAZIA~1.RAV\AppData\Local\Temp\ccBCmqGf.s 			page 78


 2681 01e4 04000000 		.4byte	.LCFI25
 2682 01e8 0200     		.2byte	0x2
 2683 01ea 7D       		.byte	0x7d
 2684 01eb 04       		.sleb128 4
 2685 01ec 04000000 		.4byte	.LCFI25
 2686 01f0 06000000 		.4byte	.LCFI26
 2687 01f4 0200     		.2byte	0x2
 2688 01f6 7D       		.byte	0x7d
 2689 01f7 10       		.sleb128 16
 2690 01f8 06000000 		.4byte	.LCFI26
 2691 01fc 4C000000 		.4byte	.LFE9
 2692 0200 0200     		.2byte	0x2
 2693 0202 77       		.byte	0x77
 2694 0203 10       		.sleb128 16
 2695 0204 00000000 		.4byte	0
 2696 0208 00000000 		.4byte	0
 2697              	.LLST10:
 2698 020c 00000000 		.4byte	.LFB10
 2699 0210 02000000 		.4byte	.LCFI27
 2700 0214 0200     		.2byte	0x2
 2701 0216 7D       		.byte	0x7d
 2702 0217 00       		.sleb128 0
 2703 0218 02000000 		.4byte	.LCFI27
 2704 021c 04000000 		.4byte	.LCFI28
 2705 0220 0200     		.2byte	0x2
 2706 0222 7D       		.byte	0x7d
 2707 0223 10       		.sleb128 16
 2708 0224 04000000 		.4byte	.LCFI28
 2709 0228 22000000 		.4byte	.LFE10
 2710 022c 0200     		.2byte	0x2
 2711 022e 77       		.byte	0x77
 2712 022f 10       		.sleb128 16
 2713 0230 00000000 		.4byte	0
 2714 0234 00000000 		.4byte	0
 2715              	.LLST11:
 2716 0238 00000000 		.4byte	.LFB11
 2717 023c 02000000 		.4byte	.LCFI29
 2718 0240 0200     		.2byte	0x2
 2719 0242 7D       		.byte	0x7d
 2720 0243 00       		.sleb128 0
 2721 0244 02000000 		.4byte	.LCFI29
 2722 0248 04000000 		.4byte	.LCFI30
 2723 024c 0200     		.2byte	0x2
 2724 024e 7D       		.byte	0x7d
 2725 024f 04       		.sleb128 4
 2726 0250 04000000 		.4byte	.LCFI30
 2727 0254 06000000 		.4byte	.LCFI31
 2728 0258 0200     		.2byte	0x2
 2729 025a 7D       		.byte	0x7d
 2730 025b 10       		.sleb128 16
 2731 025c 06000000 		.4byte	.LCFI31
 2732 0260 34000000 		.4byte	.LFE11
 2733 0264 0200     		.2byte	0x2
 2734 0266 77       		.byte	0x77
 2735 0267 10       		.sleb128 16
 2736 0268 00000000 		.4byte	0
 2737 026c 00000000 		.4byte	0
ARM GAS  C:\Users\GRAZIA~1.RAV\AppData\Local\Temp\ccBCmqGf.s 			page 79


 2738              	.LLST12:
 2739 0270 00000000 		.4byte	.LFB12
 2740 0274 02000000 		.4byte	.LCFI32
 2741 0278 0200     		.2byte	0x2
 2742 027a 7D       		.byte	0x7d
 2743 027b 00       		.sleb128 0
 2744 027c 02000000 		.4byte	.LCFI32
 2745 0280 04000000 		.4byte	.LCFI33
 2746 0284 0200     		.2byte	0x2
 2747 0286 7D       		.byte	0x7d
 2748 0287 08       		.sleb128 8
 2749 0288 04000000 		.4byte	.LCFI33
 2750 028c 06000000 		.4byte	.LCFI34
 2751 0290 0200     		.2byte	0x2
 2752 0292 7D       		.byte	0x7d
 2753 0293 10       		.sleb128 16
 2754 0294 06000000 		.4byte	.LCFI34
 2755 0298 56000000 		.4byte	.LFE12
 2756 029c 0200     		.2byte	0x2
 2757 029e 77       		.byte	0x77
 2758 029f 10       		.sleb128 16
 2759 02a0 00000000 		.4byte	0
 2760 02a4 00000000 		.4byte	0
 2761              	.LLST13:
 2762 02a8 00000000 		.4byte	.LFB13
 2763 02ac 02000000 		.4byte	.LCFI35
 2764 02b0 0200     		.2byte	0x2
 2765 02b2 7D       		.byte	0x7d
 2766 02b3 00       		.sleb128 0
 2767 02b4 02000000 		.4byte	.LCFI35
 2768 02b8 04000000 		.4byte	.LCFI36
 2769 02bc 0200     		.2byte	0x2
 2770 02be 7D       		.byte	0x7d
 2771 02bf 04       		.sleb128 4
 2772 02c0 04000000 		.4byte	.LCFI36
 2773 02c4 06000000 		.4byte	.LCFI37
 2774 02c8 0200     		.2byte	0x2
 2775 02ca 7D       		.byte	0x7d
 2776 02cb 10       		.sleb128 16
 2777 02cc 06000000 		.4byte	.LCFI37
 2778 02d0 14000000 		.4byte	.LFE13
 2779 02d4 0200     		.2byte	0x2
 2780 02d6 77       		.byte	0x77
 2781 02d7 10       		.sleb128 16
 2782 02d8 00000000 		.4byte	0
 2783 02dc 00000000 		.4byte	0
 2784              	.LLST14:
 2785 02e0 00000000 		.4byte	.LFB14
 2786 02e4 02000000 		.4byte	.LCFI38
 2787 02e8 0200     		.2byte	0x2
 2788 02ea 7D       		.byte	0x7d
 2789 02eb 00       		.sleb128 0
 2790 02ec 02000000 		.4byte	.LCFI38
 2791 02f0 04000000 		.4byte	.LCFI39
 2792 02f4 0200     		.2byte	0x2
 2793 02f6 7D       		.byte	0x7d
 2794 02f7 04       		.sleb128 4
ARM GAS  C:\Users\GRAZIA~1.RAV\AppData\Local\Temp\ccBCmqGf.s 			page 80


 2795 02f8 04000000 		.4byte	.LCFI39
 2796 02fc 06000000 		.4byte	.LCFI40
 2797 0300 0200     		.2byte	0x2
 2798 0302 7D       		.byte	0x7d
 2799 0303 10       		.sleb128 16
 2800 0304 06000000 		.4byte	.LCFI40
 2801 0308 20000000 		.4byte	.LFE14
 2802 030c 0200     		.2byte	0x2
 2803 030e 77       		.byte	0x77
 2804 030f 10       		.sleb128 16
 2805 0310 00000000 		.4byte	0
 2806 0314 00000000 		.4byte	0
 2807              	.LLST15:
 2808 0318 00000000 		.4byte	.LFB15
 2809 031c 02000000 		.4byte	.LCFI41
 2810 0320 0200     		.2byte	0x2
 2811 0322 7D       		.byte	0x7d
 2812 0323 00       		.sleb128 0
 2813 0324 02000000 		.4byte	.LCFI41
 2814 0328 04000000 		.4byte	.LCFI42
 2815 032c 0200     		.2byte	0x2
 2816 032e 7D       		.byte	0x7d
 2817 032f 04       		.sleb128 4
 2818 0330 04000000 		.4byte	.LCFI42
 2819 0334 06000000 		.4byte	.LCFI43
 2820 0338 0200     		.2byte	0x2
 2821 033a 7D       		.byte	0x7d
 2822 033b 10       		.sleb128 16
 2823 033c 06000000 		.4byte	.LCFI43
 2824 0340 20000000 		.4byte	.LFE15
 2825 0344 0200     		.2byte	0x2
 2826 0346 77       		.byte	0x77
 2827 0347 10       		.sleb128 16
 2828 0348 00000000 		.4byte	0
 2829 034c 00000000 		.4byte	0
 2830              	.LLST16:
 2831 0350 00000000 		.4byte	.LFB16
 2832 0354 02000000 		.4byte	.LCFI44
 2833 0358 0200     		.2byte	0x2
 2834 035a 7D       		.byte	0x7d
 2835 035b 00       		.sleb128 0
 2836 035c 02000000 		.4byte	.LCFI44
 2837 0360 04000000 		.4byte	.LCFI45
 2838 0364 0200     		.2byte	0x2
 2839 0366 7D       		.byte	0x7d
 2840 0367 04       		.sleb128 4
 2841 0368 04000000 		.4byte	.LCFI45
 2842 036c 06000000 		.4byte	.LCFI46
 2843 0370 0200     		.2byte	0x2
 2844 0372 7D       		.byte	0x7d
 2845 0373 10       		.sleb128 16
 2846 0374 06000000 		.4byte	.LCFI46
 2847 0378 20000000 		.4byte	.LFE16
 2848 037c 0200     		.2byte	0x2
 2849 037e 77       		.byte	0x77
 2850 037f 10       		.sleb128 16
 2851 0380 00000000 		.4byte	0
ARM GAS  C:\Users\GRAZIA~1.RAV\AppData\Local\Temp\ccBCmqGf.s 			page 81


 2852 0384 00000000 		.4byte	0
 2853              	.LLST17:
 2854 0388 00000000 		.4byte	.LFB17
 2855 038c 02000000 		.4byte	.LCFI47
 2856 0390 0200     		.2byte	0x2
 2857 0392 7D       		.byte	0x7d
 2858 0393 00       		.sleb128 0
 2859 0394 02000000 		.4byte	.LCFI47
 2860 0398 04000000 		.4byte	.LCFI48
 2861 039c 0200     		.2byte	0x2
 2862 039e 7D       		.byte	0x7d
 2863 039f 04       		.sleb128 4
 2864 03a0 04000000 		.4byte	.LCFI48
 2865 03a4 06000000 		.4byte	.LCFI49
 2866 03a8 0200     		.2byte	0x2
 2867 03aa 7D       		.byte	0x7d
 2868 03ab 10       		.sleb128 16
 2869 03ac 06000000 		.4byte	.LCFI49
 2870 03b0 2E000000 		.4byte	.LFE17
 2871 03b4 0200     		.2byte	0x2
 2872 03b6 77       		.byte	0x77
 2873 03b7 10       		.sleb128 16
 2874 03b8 00000000 		.4byte	0
 2875 03bc 00000000 		.4byte	0
 2876              	.LLST18:
 2877 03c0 00000000 		.4byte	.LFB18
 2878 03c4 02000000 		.4byte	.LCFI50
 2879 03c8 0200     		.2byte	0x2
 2880 03ca 7D       		.byte	0x7d
 2881 03cb 00       		.sleb128 0
 2882 03cc 02000000 		.4byte	.LCFI50
 2883 03d0 04000000 		.4byte	.LCFI51
 2884 03d4 0200     		.2byte	0x2
 2885 03d6 7D       		.byte	0x7d
 2886 03d7 04       		.sleb128 4
 2887 03d8 04000000 		.4byte	.LCFI51
 2888 03dc 18000000 		.4byte	.LFE18
 2889 03e0 0200     		.2byte	0x2
 2890 03e2 77       		.byte	0x77
 2891 03e3 04       		.sleb128 4
 2892 03e4 00000000 		.4byte	0
 2893 03e8 00000000 		.4byte	0
 2894              	.LLST19:
 2895 03ec 00000000 		.4byte	.LFB19
 2896 03f0 02000000 		.4byte	.LCFI52
 2897 03f4 0200     		.2byte	0x2
 2898 03f6 7D       		.byte	0x7d
 2899 03f7 00       		.sleb128 0
 2900 03f8 02000000 		.4byte	.LCFI52
 2901 03fc 04000000 		.4byte	.LCFI53
 2902 0400 0200     		.2byte	0x2
 2903 0402 7D       		.byte	0x7d
 2904 0403 04       		.sleb128 4
 2905 0404 04000000 		.4byte	.LCFI53
 2906 0408 06000000 		.4byte	.LCFI54
 2907 040c 0200     		.2byte	0x2
 2908 040e 7D       		.byte	0x7d
ARM GAS  C:\Users\GRAZIA~1.RAV\AppData\Local\Temp\ccBCmqGf.s 			page 82


 2909 040f 10       		.sleb128 16
 2910 0410 06000000 		.4byte	.LCFI54
 2911 0414 36000000 		.4byte	.LFE19
 2912 0418 0200     		.2byte	0x2
 2913 041a 77       		.byte	0x77
 2914 041b 10       		.sleb128 16
 2915 041c 00000000 		.4byte	0
 2916 0420 00000000 		.4byte	0
 2917              	.LLST20:
 2918 0424 00000000 		.4byte	.LFB20
 2919 0428 02000000 		.4byte	.LCFI55
 2920 042c 0200     		.2byte	0x2
 2921 042e 7D       		.byte	0x7d
 2922 042f 00       		.sleb128 0
 2923 0430 02000000 		.4byte	.LCFI55
 2924 0434 04000000 		.4byte	.LCFI56
 2925 0438 0200     		.2byte	0x2
 2926 043a 7D       		.byte	0x7d
 2927 043b 08       		.sleb128 8
 2928 043c 04000000 		.4byte	.LCFI56
 2929 0440 06000000 		.4byte	.LCFI57
 2930 0444 0200     		.2byte	0x2
 2931 0446 7D       		.byte	0x7d
 2932 0447 18       		.sleb128 24
 2933 0448 06000000 		.4byte	.LCFI57
 2934 044c 48000000 		.4byte	.LFE20
 2935 0450 0200     		.2byte	0x2
 2936 0452 77       		.byte	0x77
 2937 0453 18       		.sleb128 24
 2938 0454 00000000 		.4byte	0
 2939 0458 00000000 		.4byte	0
 2940              	.LLST21:
 2941 045c 00000000 		.4byte	.LFB21
 2942 0460 02000000 		.4byte	.LCFI58
 2943 0464 0200     		.2byte	0x2
 2944 0466 7D       		.byte	0x7d
 2945 0467 00       		.sleb128 0
 2946 0468 02000000 		.4byte	.LCFI58
 2947 046c 04000000 		.4byte	.LCFI59
 2948 0470 0200     		.2byte	0x2
 2949 0472 7D       		.byte	0x7d
 2950 0473 08       		.sleb128 8
 2951 0474 04000000 		.4byte	.LCFI59
 2952 0478 06000000 		.4byte	.LCFI60
 2953 047c 0200     		.2byte	0x2
 2954 047e 7D       		.byte	0x7d
 2955 047f 18       		.sleb128 24
 2956 0480 06000000 		.4byte	.LCFI60
 2957 0484 46000000 		.4byte	.LFE21
 2958 0488 0200     		.2byte	0x2
 2959 048a 77       		.byte	0x77
 2960 048b 18       		.sleb128 24
 2961 048c 00000000 		.4byte	0
 2962 0490 00000000 		.4byte	0
 2963              	.LLST22:
 2964 0494 00000000 		.4byte	.LFB22
 2965 0498 02000000 		.4byte	.LCFI61
ARM GAS  C:\Users\GRAZIA~1.RAV\AppData\Local\Temp\ccBCmqGf.s 			page 83


 2966 049c 0200     		.2byte	0x2
 2967 049e 7D       		.byte	0x7d
 2968 049f 00       		.sleb128 0
 2969 04a0 02000000 		.4byte	.LCFI61
 2970 04a4 04000000 		.4byte	.LCFI62
 2971 04a8 0200     		.2byte	0x2
 2972 04aa 7D       		.byte	0x7d
 2973 04ab 08       		.sleb128 8
 2974 04ac 04000000 		.4byte	.LCFI62
 2975 04b0 06000000 		.4byte	.LCFI63
 2976 04b4 0200     		.2byte	0x2
 2977 04b6 7D       		.byte	0x7d
 2978 04b7 10       		.sleb128 16
 2979 04b8 06000000 		.4byte	.LCFI63
 2980 04bc 38000000 		.4byte	.LFE22
 2981 04c0 0200     		.2byte	0x2
 2982 04c2 77       		.byte	0x77
 2983 04c3 10       		.sleb128 16
 2984 04c4 00000000 		.4byte	0
 2985 04c8 00000000 		.4byte	0
 2986              	.LLST23:
 2987 04cc 00000000 		.4byte	.LFB23
 2988 04d0 02000000 		.4byte	.LCFI64
 2989 04d4 0200     		.2byte	0x2
 2990 04d6 7D       		.byte	0x7d
 2991 04d7 00       		.sleb128 0
 2992 04d8 02000000 		.4byte	.LCFI64
 2993 04dc 04000000 		.4byte	.LCFI65
 2994 04e0 0200     		.2byte	0x2
 2995 04e2 7D       		.byte	0x7d
 2996 04e3 04       		.sleb128 4
 2997 04e4 04000000 		.4byte	.LCFI65
 2998 04e8 06000000 		.4byte	.LCFI66
 2999 04ec 0200     		.2byte	0x2
 3000 04ee 7D       		.byte	0x7d
 3001 04ef 10       		.sleb128 16
 3002 04f0 06000000 		.4byte	.LCFI66
 3003 04f4 4A000000 		.4byte	.LFE23
 3004 04f8 0200     		.2byte	0x2
 3005 04fa 77       		.byte	0x77
 3006 04fb 10       		.sleb128 16
 3007 04fc 00000000 		.4byte	0
 3008 0500 00000000 		.4byte	0
 3009              	.LLST24:
 3010 0504 00000000 		.4byte	.LFB24
 3011 0508 02000000 		.4byte	.LCFI67
 3012 050c 0200     		.2byte	0x2
 3013 050e 7D       		.byte	0x7d
 3014 050f 00       		.sleb128 0
 3015 0510 02000000 		.4byte	.LCFI67
 3016 0514 04000000 		.4byte	.LCFI68
 3017 0518 0200     		.2byte	0x2
 3018 051a 7D       		.byte	0x7d
 3019 051b 08       		.sleb128 8
 3020 051c 04000000 		.4byte	.LCFI68
 3021 0520 06000000 		.4byte	.LCFI69
 3022 0524 0200     		.2byte	0x2
ARM GAS  C:\Users\GRAZIA~1.RAV\AppData\Local\Temp\ccBCmqGf.s 			page 84


 3023 0526 7D       		.byte	0x7d
 3024 0527 10       		.sleb128 16
 3025 0528 06000000 		.4byte	.LCFI69
 3026 052c 56000000 		.4byte	.LFE24
 3027 0530 0200     		.2byte	0x2
 3028 0532 77       		.byte	0x77
 3029 0533 10       		.sleb128 16
 3030 0534 00000000 		.4byte	0
 3031 0538 00000000 		.4byte	0
 3032              	.LLST25:
 3033 053c 00000000 		.4byte	.LFB25
 3034 0540 02000000 		.4byte	.LCFI70
 3035 0544 0200     		.2byte	0x2
 3036 0546 7D       		.byte	0x7d
 3037 0547 00       		.sleb128 0
 3038 0548 02000000 		.4byte	.LCFI70
 3039 054c 04000000 		.4byte	.LCFI71
 3040 0550 0200     		.2byte	0x2
 3041 0552 7D       		.byte	0x7d
 3042 0553 08       		.sleb128 8
 3043 0554 04000000 		.4byte	.LCFI71
 3044 0558 06000000 		.4byte	.LCFI72
 3045 055c 0200     		.2byte	0x2
 3046 055e 7D       		.byte	0x7d
 3047 055f 18       		.sleb128 24
 3048 0560 06000000 		.4byte	.LCFI72
 3049 0564 AE000000 		.4byte	.LFE25
 3050 0568 0200     		.2byte	0x2
 3051 056a 77       		.byte	0x77
 3052 056b 18       		.sleb128 24
 3053 056c 00000000 		.4byte	0
 3054 0570 00000000 		.4byte	0
 3055              	.LLST26:
 3056 0574 00000000 		.4byte	.LFB26
 3057 0578 02000000 		.4byte	.LCFI73
 3058 057c 0200     		.2byte	0x2
 3059 057e 7D       		.byte	0x7d
 3060 057f 00       		.sleb128 0
 3061 0580 02000000 		.4byte	.LCFI73
 3062 0584 04000000 		.4byte	.LCFI74
 3063 0588 0200     		.2byte	0x2
 3064 058a 7D       		.byte	0x7d
 3065 058b 08       		.sleb128 8
 3066 058c 04000000 		.4byte	.LCFI74
 3067 0590 06000000 		.4byte	.LCFI75
 3068 0594 0200     		.2byte	0x2
 3069 0596 7D       		.byte	0x7d
 3070 0597 10       		.sleb128 16
 3071 0598 06000000 		.4byte	.LCFI75
 3072 059c 3E000000 		.4byte	.LFE26
 3073 05a0 0200     		.2byte	0x2
 3074 05a2 77       		.byte	0x77
 3075 05a3 10       		.sleb128 16
 3076 05a4 00000000 		.4byte	0
 3077 05a8 00000000 		.4byte	0
 3078              	.LLST27:
 3079 05ac 00000000 		.4byte	.LFB27
ARM GAS  C:\Users\GRAZIA~1.RAV\AppData\Local\Temp\ccBCmqGf.s 			page 85


 3080 05b0 02000000 		.4byte	.LCFI76
 3081 05b4 0200     		.2byte	0x2
 3082 05b6 7D       		.byte	0x7d
 3083 05b7 00       		.sleb128 0
 3084 05b8 02000000 		.4byte	.LCFI76
 3085 05bc 04000000 		.4byte	.LCFI77
 3086 05c0 0200     		.2byte	0x2
 3087 05c2 7D       		.byte	0x7d
 3088 05c3 08       		.sleb128 8
 3089 05c4 04000000 		.4byte	.LCFI77
 3090 05c8 26000000 		.4byte	.LFE27
 3091 05cc 0200     		.2byte	0x2
 3092 05ce 77       		.byte	0x77
 3093 05cf 08       		.sleb128 8
 3094 05d0 00000000 		.4byte	0
 3095 05d4 00000000 		.4byte	0
 3096              	.LLST28:
 3097 05d8 00000000 		.4byte	.LFB28
 3098 05dc 02000000 		.4byte	.LCFI78
 3099 05e0 0200     		.2byte	0x2
 3100 05e2 7D       		.byte	0x7d
 3101 05e3 00       		.sleb128 0
 3102 05e4 02000000 		.4byte	.LCFI78
 3103 05e8 04000000 		.4byte	.LCFI79
 3104 05ec 0200     		.2byte	0x2
 3105 05ee 7D       		.byte	0x7d
 3106 05ef 08       		.sleb128 8
 3107 05f0 04000000 		.4byte	.LCFI79
 3108 05f4 26000000 		.4byte	.LFE28
 3109 05f8 0200     		.2byte	0x2
 3110 05fa 77       		.byte	0x77
 3111 05fb 08       		.sleb128 8
 3112 05fc 00000000 		.4byte	0
 3113 0600 00000000 		.4byte	0
 3114              		.section	.debug_aranges,"",%progbits
 3115 0000 FC000000 		.4byte	0xfc
 3116 0004 0200     		.2byte	0x2
 3117 0006 00000000 		.4byte	.Ldebug_info0
 3118 000a 04       		.byte	0x4
 3119 000b 00       		.byte	0
 3120 000c 0000     		.2byte	0
 3121 000e 0000     		.2byte	0
 3122 0010 00000000 		.4byte	.LFB0
 3123 0014 2A000000 		.4byte	.LFE0-.LFB0
 3124 0018 00000000 		.4byte	.LFB1
 3125 001c 26000000 		.4byte	.LFE1-.LFB1
 3126 0020 00000000 		.4byte	.LFB2
 3127 0024 56000000 		.4byte	.LFE2-.LFB2
 3128 0028 00000000 		.4byte	.LFB3
 3129 002c 56000000 		.4byte	.LFE3-.LFB3
 3130 0030 00000000 		.4byte	.LFB4
 3131 0034 18000000 		.4byte	.LFE4-.LFB4
 3132 0038 00000000 		.4byte	.LFB5
 3133 003c 20000000 		.4byte	.LFE5-.LFB5
 3134 0040 00000000 		.4byte	.LFB6
 3135 0044 20000000 		.4byte	.LFE6-.LFB6
 3136 0048 00000000 		.4byte	.LFB7
ARM GAS  C:\Users\GRAZIA~1.RAV\AppData\Local\Temp\ccBCmqGf.s 			page 86


 3137 004c 20000000 		.4byte	.LFE7-.LFB7
 3138 0050 00000000 		.4byte	.LFB8
 3139 0054 26000000 		.4byte	.LFE8-.LFB8
 3140 0058 00000000 		.4byte	.LFB9
 3141 005c 4C000000 		.4byte	.LFE9-.LFB9
 3142 0060 00000000 		.4byte	.LFB10
 3143 0064 22000000 		.4byte	.LFE10-.LFB10
 3144 0068 00000000 		.4byte	.LFB11
 3145 006c 34000000 		.4byte	.LFE11-.LFB11
 3146 0070 00000000 		.4byte	.LFB12
 3147 0074 56000000 		.4byte	.LFE12-.LFB12
 3148 0078 00000000 		.4byte	.LFB13
 3149 007c 14000000 		.4byte	.LFE13-.LFB13
 3150 0080 00000000 		.4byte	.LFB14
 3151 0084 20000000 		.4byte	.LFE14-.LFB14
 3152 0088 00000000 		.4byte	.LFB15
 3153 008c 20000000 		.4byte	.LFE15-.LFB15
 3154 0090 00000000 		.4byte	.LFB16
 3155 0094 20000000 		.4byte	.LFE16-.LFB16
 3156 0098 00000000 		.4byte	.LFB17
 3157 009c 2E000000 		.4byte	.LFE17-.LFB17
 3158 00a0 00000000 		.4byte	.LFB18
 3159 00a4 18000000 		.4byte	.LFE18-.LFB18
 3160 00a8 00000000 		.4byte	.LFB19
 3161 00ac 36000000 		.4byte	.LFE19-.LFB19
 3162 00b0 00000000 		.4byte	.LFB20
 3163 00b4 48000000 		.4byte	.LFE20-.LFB20
 3164 00b8 00000000 		.4byte	.LFB21
 3165 00bc 46000000 		.4byte	.LFE21-.LFB21
 3166 00c0 00000000 		.4byte	.LFB22
 3167 00c4 38000000 		.4byte	.LFE22-.LFB22
 3168 00c8 00000000 		.4byte	.LFB23
 3169 00cc 4A000000 		.4byte	.LFE23-.LFB23
 3170 00d0 00000000 		.4byte	.LFB24
 3171 00d4 56000000 		.4byte	.LFE24-.LFB24
 3172 00d8 00000000 		.4byte	.LFB25
 3173 00dc AE000000 		.4byte	.LFE25-.LFB25
 3174 00e0 00000000 		.4byte	.LFB26
 3175 00e4 3E000000 		.4byte	.LFE26-.LFB26
 3176 00e8 00000000 		.4byte	.LFB27
 3177 00ec 26000000 		.4byte	.LFE27-.LFB27
 3178 00f0 00000000 		.4byte	.LFB28
 3179 00f4 26000000 		.4byte	.LFE28-.LFB28
 3180 00f8 00000000 		.4byte	0
 3181 00fc 00000000 		.4byte	0
 3182              		.section	.debug_ranges,"",%progbits
 3183              	.Ldebug_ranges0:
 3184 0000 00000000 		.4byte	.LFB0
 3185 0004 2A000000 		.4byte	.LFE0
 3186 0008 00000000 		.4byte	.LFB1
 3187 000c 26000000 		.4byte	.LFE1
 3188 0010 00000000 		.4byte	.LFB2
 3189 0014 56000000 		.4byte	.LFE2
 3190 0018 00000000 		.4byte	.LFB3
 3191 001c 56000000 		.4byte	.LFE3
 3192 0020 00000000 		.4byte	.LFB4
 3193 0024 18000000 		.4byte	.LFE4
ARM GAS  C:\Users\GRAZIA~1.RAV\AppData\Local\Temp\ccBCmqGf.s 			page 87


 3194 0028 00000000 		.4byte	.LFB5
 3195 002c 20000000 		.4byte	.LFE5
 3196 0030 00000000 		.4byte	.LFB6
 3197 0034 20000000 		.4byte	.LFE6
 3198 0038 00000000 		.4byte	.LFB7
 3199 003c 20000000 		.4byte	.LFE7
 3200 0040 00000000 		.4byte	.LFB8
 3201 0044 26000000 		.4byte	.LFE8
 3202 0048 00000000 		.4byte	.LFB9
 3203 004c 4C000000 		.4byte	.LFE9
 3204 0050 00000000 		.4byte	.LFB10
 3205 0054 22000000 		.4byte	.LFE10
 3206 0058 00000000 		.4byte	.LFB11
 3207 005c 34000000 		.4byte	.LFE11
 3208 0060 00000000 		.4byte	.LFB12
 3209 0064 56000000 		.4byte	.LFE12
 3210 0068 00000000 		.4byte	.LFB13
 3211 006c 14000000 		.4byte	.LFE13
 3212 0070 00000000 		.4byte	.LFB14
 3213 0074 20000000 		.4byte	.LFE14
 3214 0078 00000000 		.4byte	.LFB15
 3215 007c 20000000 		.4byte	.LFE15
 3216 0080 00000000 		.4byte	.LFB16
 3217 0084 20000000 		.4byte	.LFE16
 3218 0088 00000000 		.4byte	.LFB17
 3219 008c 2E000000 		.4byte	.LFE17
 3220 0090 00000000 		.4byte	.LFB18
 3221 0094 18000000 		.4byte	.LFE18
 3222 0098 00000000 		.4byte	.LFB19
 3223 009c 36000000 		.4byte	.LFE19
 3224 00a0 00000000 		.4byte	.LFB20
 3225 00a4 48000000 		.4byte	.LFE20
 3226 00a8 00000000 		.4byte	.LFB21
 3227 00ac 46000000 		.4byte	.LFE21
 3228 00b0 00000000 		.4byte	.LFB22
 3229 00b4 38000000 		.4byte	.LFE22
 3230 00b8 00000000 		.4byte	.LFB23
 3231 00bc 4A000000 		.4byte	.LFE23
 3232 00c0 00000000 		.4byte	.LFB24
 3233 00c4 56000000 		.4byte	.LFE24
 3234 00c8 00000000 		.4byte	.LFB25
 3235 00cc AE000000 		.4byte	.LFE25
 3236 00d0 00000000 		.4byte	.LFB26
 3237 00d4 3E000000 		.4byte	.LFE26
 3238 00d8 00000000 		.4byte	.LFB27
 3239 00dc 26000000 		.4byte	.LFE27
 3240 00e0 00000000 		.4byte	.LFB28
 3241 00e4 26000000 		.4byte	.LFE28
 3242 00e8 00000000 		.4byte	0
 3243 00ec 00000000 		.4byte	0
 3244              		.section	.debug_line,"",%progbits
 3245              	.Ldebug_line0:
 3246 0000 0E030000 		.section	.debug_str,"MS",%progbits,1
 3246      02004A00 
 3246      00000201 
 3246      FB0E0D00 
 3246      01010101 
ARM GAS  C:\Users\GRAZIA~1.RAV\AppData\Local\Temp\ccBCmqGf.s 			page 88


 3247              	.LASF43:
 3248 0000 55415254 		.ascii	"UART_4D_LCD_WriteTxData\000"
 3248      5F34445F 
 3248      4C43445F 
 3248      57726974 
 3248      65547844 
 3249              	.LASF10:
 3250 0018 75696E74 		.ascii	"uint16\000"
 3250      313600
 3251              	.LASF44:
 3252 001f 74784461 		.ascii	"txDataByte\000"
 3252      74614279 
 3252      746500
 3253              	.LASF48:
 3254 002a 73747269 		.ascii	"string\000"
 3254      6E6700
 3255              	.LASF39:
 3256 0031 55415254 		.ascii	"UART_4D_LCD_SetRxAddress1\000"
 3256      5F34445F 
 3256      4C43445F 
 3256      53657452 
 3256      78416464 
 3257              	.LASF41:
 3258 004b 55415254 		.ascii	"UART_4D_LCD_SetRxAddress2\000"
 3258      5F34445F 
 3258      4C43445F 
 3258      53657452 
 3258      78416464 
 3259              	.LASF30:
 3260 0065 55415254 		.ascii	"UART_4D_LCD_GetChar\000"
 3260      5F34445F 
 3260      4C43445F 
 3260      47657443 
 3260      68617200 
 3261              	.LASF7:
 3262 0079 6C6F6E67 		.ascii	"long long unsigned int\000"
 3262      206C6F6E 
 3262      6720756E 
 3262      7369676E 
 3262      65642069 
 3263              	.LASF62:
 3264 0090 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\UART_4D_LCD.c\000"
 3264      6E657261 
 3264      7465645F 
 3264      536F7572 
 3264      63655C50 
 3265              	.LASF64:
 3266 00b7 55415254 		.ascii	"UART_4D_LCD_initVar\000"
 3266      5F34445F 
 3266      4C43445F 
 3266      696E6974 
 3266      56617200 
 3267              	.LASF6:
 3268 00cb 6C6F6E67 		.ascii	"long long int\000"
 3268      206C6F6E 
 3268      6720696E 
 3268      7400
ARM GAS  C:\Users\GRAZIA~1.RAV\AppData\Local\Temp\ccBCmqGf.s 			page 89


 3269              	.LASF0:
 3270 00d9 7369676E 		.ascii	"signed char\000"
 3270      65642063 
 3270      68617200 
 3271              	.LASF63:
 3272 00e5 433A5C55 		.ascii	"C:\\Users\\Graziano G. Ravizza\\Documents\\PSoC Cre"
 3272      73657273 
 3272      5C477261 
 3272      7A69616E 
 3272      6F20472E 
 3273 0114 61746F72 		.ascii	"ator\\GOBEE DIRECTOR\\Vers.0.0-T15 2018-0220 C3.0 ("
 3273      5C474F42 
 3273      45452044 
 3273      49524543 
 3273      544F525C 
 3274 0145 4857204D 		.ascii	"HW MODS II)\\GobeeDir.cydsn\000"
 3274      4F445320 
 3274      4949295C 
 3274      476F6265 
 3274      65446972 
 3275              	.LASF34:
 3276 0160 55415254 		.ascii	"UART_4D_LCD_GetRxBufferSize\000"
 3276      5F34445F 
 3276      4C43445F 
 3276      47657452 
 3276      78427566 
 3277              	.LASF18:
 3278 017c 55415254 		.ascii	"UART_4D_LCD_Init\000"
 3278      5F34445F 
 3278      4C43445F 
 3278      496E6974 
 3278      00
 3279              	.LASF4:
 3280 018d 6C6F6E67 		.ascii	"long int\000"
 3280      20696E74 
 3280      00
 3281              	.LASF9:
 3282 0196 75696E74 		.ascii	"uint8\000"
 3282      3800
 3283              	.LASF12:
 3284 019c 646F7562 		.ascii	"double\000"
 3284      6C6500
 3285              	.LASF38:
 3286 01a3 61646472 		.ascii	"addressMode\000"
 3286      6573734D 
 3286      6F646500 
 3287              	.LASF23:
 3288 01af 55415254 		.ascii	"UART_4D_LCD_SetRxInterruptMode\000"
 3288      5F34445F 
 3288      4C43445F 
 3288      53657452 
 3288      78496E74 
 3289              	.LASF24:
 3290 01ce 636F6E74 		.ascii	"control\000"
 3290      726F6C00 
 3291              	.LASF52:
 3292 01d6 55415254 		.ascii	"UART_4D_LCD_PutCRLF\000"
ARM GAS  C:\Users\GRAZIA~1.RAV\AppData\Local\Temp\ccBCmqGf.s 			page 90


 3292      5F34445F 
 3292      4C43445F 
 3292      50757443 
 3292      524C4600 
 3293              	.LASF55:
 3294 01ea 55415254 		.ascii	"UART_4D_LCD_SendBreak\000"
 3294      5F34445F 
 3294      4C43445F 
 3294      53656E64 
 3294      42726561 
 3295              	.LASF56:
 3296 0200 7265744D 		.ascii	"retMode\000"
 3296      6F646500 
 3297              	.LASF8:
 3298 0208 756E7369 		.ascii	"unsigned int\000"
 3298      676E6564 
 3298      20696E74 
 3298      00
 3299              	.LASF17:
 3300 0215 55415254 		.ascii	"UART_4D_LCD_Start\000"
 3300      5F34445F 
 3300      4C43445F 
 3300      53746172 
 3300      7400
 3301              	.LASF46:
 3302 0227 55415254 		.ascii	"UART_4D_LCD_PutChar\000"
 3302      5F34445F 
 3302      4C43445F 
 3302      50757443 
 3302      68617200 
 3303              	.LASF60:
 3304 023b 55415254 		.ascii	"UART_4D_LCD_LoadRxConfig\000"
 3304      5F34445F 
 3304      4C43445F 
 3304      4C6F6164 
 3304      5278436F 
 3305              	.LASF45:
 3306 0254 55415254 		.ascii	"UART_4D_LCD_ReadTxStatus\000"
 3306      5F34445F 
 3306      4C43445F 
 3306      52656164 
 3306      54785374 
 3307              	.LASF27:
 3308 026d 55415254 		.ascii	"UART_4D_LCD_ReadRxData\000"
 3308      5F34445F 
 3308      4C43445F 
 3308      52656164 
 3308      52784461 
 3309              	.LASF5:
 3310 0284 6C6F6E67 		.ascii	"long unsigned int\000"
 3310      20756E73 
 3310      69676E65 
 3310      6420696E 
 3310      7400
 3311              	.LASF22:
 3312 0296 55415254 		.ascii	"UART_4D_LCD_WriteControlRegister\000"
 3312      5F34445F 
ARM GAS  C:\Users\GRAZIA~1.RAV\AppData\Local\Temp\ccBCmqGf.s 			page 91


 3312      4C43445F 
 3312      57726974 
 3312      65436F6E 
 3313              	.LASF35:
 3314 02b7 73697A65 		.ascii	"size\000"
 3314      00
 3315              	.LASF3:
 3316 02bc 73686F72 		.ascii	"short unsigned int\000"
 3316      7420756E 
 3316      7369676E 
 3316      65642069 
 3316      6E7400
 3317              	.LASF25:
 3318 02cf 696E7453 		.ascii	"intSrc\000"
 3318      726300
 3319              	.LASF36:
 3320 02d6 55415254 		.ascii	"UART_4D_LCD_ClearRxBuffer\000"
 3320      5F34445F 
 3320      4C43445F 
 3320      436C6561 
 3320      72527842 
 3321              	.LASF57:
 3322 02f0 746D7053 		.ascii	"tmpStat\000"
 3322      74617400 
 3323              	.LASF16:
 3324 02f8 73697A65 		.ascii	"sizetype\000"
 3324      74797065 
 3324      00
 3325              	.LASF40:
 3326 0301 61646472 		.ascii	"address\000"
 3326      65737300 
 3327              	.LASF47:
 3328 0309 55415254 		.ascii	"UART_4D_LCD_PutString\000"
 3328      5F34445F 
 3328      4C43445F 
 3328      50757453 
 3328      7472696E 
 3329              	.LASF31:
 3330 031f 72785374 		.ascii	"rxStatus\000"
 3330      61747573 
 3330      00
 3331              	.LASF32:
 3332 0328 55415254 		.ascii	"UART_4D_LCD_ReadControlRegister\000"
 3332      5F34445F 
 3332      4C43445F 
 3332      52656164 
 3332      436F6E74 
 3333              	.LASF42:
 3334 0348 55415254 		.ascii	"UART_4D_LCD_SetTxInterruptMode\000"
 3334      5F34445F 
 3334      4C43445F 
 3334      53657454 
 3334      78496E74 
 3335              	.LASF11:
 3336 0367 666C6F61 		.ascii	"float\000"
 3336      7400
 3337              	.LASF33:
ARM GAS  C:\Users\GRAZIA~1.RAV\AppData\Local\Temp\ccBCmqGf.s 			page 92


 3338 036d 55415254 		.ascii	"UART_4D_LCD_GetByte\000"
 3338      5F34445F 
 3338      4C43445F 
 3338      47657442 
 3338      79746500 
 3339              	.LASF53:
 3340 0381 55415254 		.ascii	"UART_4D_LCD_GetTxBufferSize\000"
 3340      5F34445F 
 3340      4C43445F 
 3340      47657454 
 3340      78427566 
 3341              	.LASF19:
 3342 039d 55415254 		.ascii	"UART_4D_LCD_Enable\000"
 3342      5F34445F 
 3342      4C43445F 
 3342      456E6162 
 3342      6C6500
 3343              	.LASF61:
 3344 03b0 474E5520 		.ascii	"GNU C 4.7.3 20130312 (release) [ARM/embedded-4_7-br"
 3344      4320342E 
 3344      372E3320 
 3344      32303133 
 3344      30333132 
 3345 03e3 616E6368 		.ascii	"anch revision 196615]\000"
 3345      20726576 
 3345      6973696F 
 3345      6E203139 
 3345      36363135 
 3346              	.LASF15:
 3347 03f9 72656738 		.ascii	"reg8\000"
 3347      00
 3348              	.LASF58:
 3349 03fe 55415254 		.ascii	"UART_4D_LCD_SetTxAddressMode\000"
 3349      5F34445F 
 3349      4C43445F 
 3349      53657454 
 3349      78416464 
 3350              	.LASF1:
 3351 041b 756E7369 		.ascii	"unsigned char\000"
 3351      676E6564 
 3351      20636861 
 3351      7200
 3352              	.LASF2:
 3353 0429 73686F72 		.ascii	"short int\000"
 3353      7420696E 
 3353      7400
 3354              	.LASF51:
 3355 0433 62797465 		.ascii	"byteCount\000"
 3355      436F756E 
 3355      7400
 3356              	.LASF26:
 3357 043d 72784461 		.ascii	"rxData\000"
 3357      746100
 3358              	.LASF59:
 3359 0444 55415254 		.ascii	"UART_4D_LCD_LoadTxConfig\000"
 3359      5F34445F 
 3359      4C43445F 
ARM GAS  C:\Users\GRAZIA~1.RAV\AppData\Local\Temp\ccBCmqGf.s 			page 93


 3359      4C6F6164 
 3359      5478436F 
 3360              	.LASF14:
 3361 045d 63686172 		.ascii	"char\000"
 3361      00
 3362              	.LASF20:
 3363 0462 55415254 		.ascii	"UART_4D_LCD_Stop\000"
 3363      5F34445F 
 3363      4C43445F 
 3363      53746F70 
 3363      00
 3364              	.LASF13:
 3365 0473 63686172 		.ascii	"char8\000"
 3365      3800
 3366              	.LASF50:
 3367 0479 55415254 		.ascii	"UART_4D_LCD_PutArray\000"
 3367      5F34445F 
 3367      4C43445F 
 3367      50757441 
 3367      72726179 
 3368              	.LASF54:
 3369 048e 55415254 		.ascii	"UART_4D_LCD_ClearTxBuffer\000"
 3369      5F34445F 
 3369      4C43445F 
 3369      436C6561 
 3369      72547842 
 3370              	.LASF37:
 3371 04a8 55415254 		.ascii	"UART_4D_LCD_SetRxAddressMode\000"
 3371      5F34445F 
 3371      4C43445F 
 3371      53657452 
 3371      78416464 
 3372              	.LASF21:
 3373 04c5 656E6162 		.ascii	"enableInterrupts\000"
 3373      6C65496E 
 3373      74657272 
 3373      75707473 
 3373      00
 3374              	.LASF29:
 3375 04d6 73746174 		.ascii	"status\000"
 3375      757300
 3376              	.LASF28:
 3377 04dd 55415254 		.ascii	"UART_4D_LCD_ReadRxStatus\000"
 3377      5F34445F 
 3377      4C43445F 
 3377      52656164 
 3377      52785374 
 3378              	.LASF49:
 3379 04f6 6275665F 		.ascii	"buf_index\000"
 3379      696E6465 
 3379      7800
 3380              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.7.3 20130312 (release) [ARM/embedded-4_7-br

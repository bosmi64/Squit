ARM GAS  C:\Users\gravi\AppData\Local\Temp\ccDOrhRe.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"estimators.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	__aeabi_fcmplt
  19              		.section	.text.SimpleJumpEventEstimator,"ax",%progbits
  20              		.align	2
  21              		.global	SimpleJumpEventEstimator
  22              		.thumb
  23              		.thumb_func
  24              		.type	SimpleJumpEventEstimator, %function
  25              	SimpleJumpEventEstimator:
  26              	.LFB56:
  27              		.file 1 ".\\estimators.c"
   1:.\estimators.c **** /* ========================================
   2:.\estimators.c ****  *
   3:.\estimators.c ****  * Copyright Logic brainstorm, 2015
   4:.\estimators.c ****  * All Rights Reserved
   5:.\estimators.c ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:.\estimators.c ****  *
   7:.\estimators.c ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:.\estimators.c ****  * WHICH IS THE PROPERTY OF your company.
   9:.\estimators.c ****  *
  10:.\estimators.c ****  * ========================================
  11:.\estimators.c **** */
  12:.\estimators.c **** 
  13:.\estimators.c **** #include <device.h>
  14:.\estimators.c **** #include <stdio.h>
  15:.\estimators.c **** #include <gobee.h>
  16:.\estimators.c **** #include <gobeelib.h>
  17:.\estimators.c **** #include <math.h>
  18:.\estimators.c **** #include <mover.h>
  19:.\estimators.c **** #include <estimators.h>
  20:.\estimators.c **** #include <clu.h>
  21:.\estimators.c **** #include <gml.h>
  22:.\estimators.c **** 
  23:.\estimators.c **** /* External Global Wars */
  24:.\estimators.c **** extern struct GOBEE_PARAMS gobee_param;
  25:.\estimators.c **** 
  26:.\estimators.c **** /* extern mover structure 	*/
  27:.\estimators.c **** extern mover_type mover_pan;			/* mover PAN structure 		*/
  28:.\estimators.c **** extern mover_type mover_tilt;			/* mover TILT structure 	*/
  29:.\estimators.c **** 
  30:.\estimators.c **** 
ARM GAS  C:\Users\gravi\AppData\Local\Temp\ccDOrhRe.s 			page 2


  31:.\estimators.c **** /* external events structure	*/
  32:.\estimators.c **** extern struct EVENTS events;
  33:.\estimators.c **** 
  34:.\estimators.c **** /* External CLU execution state machine */
  35:.\estimators.c **** extern struct CLU_STATEMACHINE clu_sm;	
  36:.\estimators.c **** 
  37:.\estimators.c **** /********************************************/
  38:.\estimators.c **** /* Simple Bike Jump Event Estimator			*/
  39:.\estimators.c **** /* input  : float (acc_x,y,z(t))			*/
  40:.\estimators.c **** /********************************************/
  41:.\estimators.c **** void SimpleJumpEventEstimator(float acc_x,float acc_y,float acc_z, float acc_modulo)
  42:.\estimators.c **** {	
  28              		.loc 1 42 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 16
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
  37 0002 84B0     		sub	sp, sp, #16
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 24
  40 0004 00AF     		add	r7, sp, #0
  41              	.LCFI2:
  42              		.cfi_def_cfa_register 7
  43 0006 F860     		str	r0, [r7, #12]	@ float
  44 0008 B960     		str	r1, [r7, #8]	@ float
  45 000a 7A60     		str	r2, [r7, #4]	@ float
  46 000c 3B60     		str	r3, [r7, #0]	@ float
  43:.\estimators.c **** 	static uint32 local_ticks=0;
  44:.\estimators.c **** 	
  45:.\estimators.c **** 	if (fabsf(acc_modulo) < gobee_param.jump_g_threshold.fnum)	
  47              		.loc 1 45 0
  48 000e 3B68     		ldr	r3, [r7, #0]
  49 0010 23F00042 		bic	r2, r3, #-2147483648
  50 0014 40F20003 		movw	r3, #:lower16:gobee_param
  51 0018 C0F20003 		movt	r3, #:upper16:gobee_param
  52 001c 1B69     		ldr	r3, [r3, #16]	@ float
  53 001e 1046     		mov	r0, r2
  54 0020 1946     		mov	r1, r3
  55 0022 FFF7FEFF 		bl	__aeabi_fcmplt
  56 0026 0346     		mov	r3, r0
  57 0028 002B     		cmp	r3, #0
  58 002a 0ED0     		beq	.L7
  59              	.L6:
  46:.\estimators.c **** 	{
  47:.\estimators.c **** 		events.inertial.jump = IM_JUMPING;
  60              		.loc 1 47 0
  61 002c 40F20003 		movw	r3, #:lower16:events
  62 0030 C0F20003 		movt	r3, #:upper16:events
  63 0034 4FF00A02 		mov	r2, #10
  64 0038 9A74     		strb	r2, [r3, #18]
  48:.\estimators.c **** 		local_ticks = 0;
  65              		.loc 1 48 0
  66 003a 40F20003 		movw	r3, #:lower16:local_ticks.8447
ARM GAS  C:\Users\gravi\AppData\Local\Temp\ccDOrhRe.s 			page 3


  67 003e C0F20003 		movt	r3, #:upper16:local_ticks.8447
  68 0042 4FF00002 		mov	r2, #0
  69 0046 1A60     		str	r2, [r3, #0]
  70 0048 1AE0     		b	.L1
  71              	.L7:
  49:.\estimators.c **** 	}
  50:.\estimators.c **** 	else
  51:.\estimators.c **** 	{
  52:.\estimators.c **** 		if (local_ticks < 50)	/* 0,5 sec pulse stretcher */ 
  72              		.loc 1 52 0
  73 004a 40F20003 		movw	r3, #:lower16:local_ticks.8447
  74 004e C0F20003 		movt	r3, #:upper16:local_ticks.8447
  75 0052 1B68     		ldr	r3, [r3, #0]
  76 0054 312B     		cmp	r3, #49
  77 0056 0CD8     		bhi	.L5
  53:.\estimators.c **** 		{
  54:.\estimators.c **** 			local_ticks++;
  78              		.loc 1 54 0
  79 0058 40F20003 		movw	r3, #:lower16:local_ticks.8447
  80 005c C0F20003 		movt	r3, #:upper16:local_ticks.8447
  81 0060 1B68     		ldr	r3, [r3, #0]
  82 0062 03F10102 		add	r2, r3, #1
  83 0066 40F20003 		movw	r3, #:lower16:local_ticks.8447
  84 006a C0F20003 		movt	r3, #:upper16:local_ticks.8447
  85 006e 1A60     		str	r2, [r3, #0]
  86 0070 06E0     		b	.L1
  87              	.L5:
  55:.\estimators.c **** 		}
  56:.\estimators.c **** 		else
  57:.\estimators.c **** 		{		
  58:.\estimators.c **** 			events.inertial.jump = NO_JUMP;	
  88              		.loc 1 58 0
  89 0072 40F20003 		movw	r3, #:lower16:events
  90 0076 C0F20003 		movt	r3, #:upper16:events
  91 007a 4FF00002 		mov	r2, #0
  92 007e 9A74     		strb	r2, [r3, #18]
  93              	.L1:
  59:.\estimators.c **** 		}			
  60:.\estimators.c **** 	}
  61:.\estimators.c **** }
  94              		.loc 1 61 0
  95 0080 07F11007 		add	r7, r7, #16
  96 0084 BD46     		mov	sp, r7
  97 0086 80BD     		pop	{r7, pc}
  98              		.cfi_endproc
  99              	.LFE56:
 100              		.size	SimpleJumpEventEstimator, .-SimpleJumpEventEstimator
 101              		.global	__aeabi_fcmpgt
 102              		.section	.text.SimpleHorizAccelerationEventsEstimator,"ax",%progbits
 103              		.align	2
 104              		.global	SimpleHorizAccelerationEventsEstimator
 105              		.thumb
 106              		.thumb_func
 107              		.type	SimpleHorizAccelerationEventsEstimator, %function
 108              	SimpleHorizAccelerationEventsEstimator:
 109              	.LFB57:
  62:.\estimators.c **** 
ARM GAS  C:\Users\gravi\AppData\Local\Temp\ccDOrhRe.s 			page 4


  63:.\estimators.c **** 
  64:.\estimators.c **** /********************************************************/
  65:.\estimators.c **** /* Simple Bike Horizontal Acceleration Event Estimator	*/
  66:.\estimators.c **** /* input  : float (horizontal acceleration)				*/
  67:.\estimators.c **** /********************************************************/
  68:.\estimators.c **** void SimpleHorizAccelerationEventsEstimator(float horiz_acc)
  69:.\estimators.c **** {	
 110              		.loc 1 69 0
 111              		.cfi_startproc
 112              		@ args = 0, pretend = 0, frame = 8
 113              		@ frame_needed = 1, uses_anonymous_args = 0
 114 0000 80B5     		push	{r7, lr}
 115              	.LCFI3:
 116              		.cfi_def_cfa_offset 8
 117              		.cfi_offset 7, -8
 118              		.cfi_offset 14, -4
 119 0002 82B0     		sub	sp, sp, #8
 120              	.LCFI4:
 121              		.cfi_def_cfa_offset 16
 122 0004 00AF     		add	r7, sp, #0
 123              	.LCFI5:
 124              		.cfi_def_cfa_register 7
 125 0006 7860     		str	r0, [r7, #4]	@ float
  70:.\estimators.c **** 	
  71:.\estimators.c **** 	if (horiz_acc > gobee_param.acc_g_threshold.fnum)	
 126              		.loc 1 71 0
 127 0008 40F20003 		movw	r3, #:lower16:gobee_param
 128 000c C0F20003 		movt	r3, #:upper16:gobee_param
 129 0010 5B69     		ldr	r3, [r3, #20]	@ float
 130 0012 1846     		mov	r0, r3
 131 0014 7968     		ldr	r1, [r7, #4]	@ float
 132 0016 FFF7FEFF 		bl	__aeabi_fcmplt
 133 001a 0346     		mov	r3, r0
 134 001c 002B     		cmp	r3, #0
 135 001e 07D0     		beq	.L16
 136              	.L14:
  72:.\estimators.c **** 	{
  73:.\estimators.c **** 		events.inertial.acceleration = BIKE_ACCELERATING;
 137              		.loc 1 73 0
 138 0020 40F20003 		movw	r3, #:lower16:events
 139 0024 C0F20003 		movt	r3, #:upper16:events
 140 0028 4FF00A02 		mov	r2, #10
 141 002c DA74     		strb	r2, [r3, #19]
 142 002e 1CE0     		b	.L8
 143              	.L16:
  74:.\estimators.c **** 	}
  75:.\estimators.c **** 	else if (horiz_acc < -gobee_param.acc_g_threshold.fnum)
 144              		.loc 1 75 0
 145 0030 40F20003 		movw	r3, #:lower16:gobee_param
 146 0034 C0F20003 		movt	r3, #:upper16:gobee_param
 147 0038 5B69     		ldr	r3, [r3, #20]	@ float
 148 003a 83F00043 		eor	r3, r3, #-2147483648
 149 003e 1846     		mov	r0, r3
 150 0040 7968     		ldr	r1, [r7, #4]	@ float
 151 0042 FFF7FEFF 		bl	__aeabi_fcmpgt
 152 0046 0346     		mov	r3, r0
 153 0048 002B     		cmp	r3, #0
ARM GAS  C:\Users\gravi\AppData\Local\Temp\ccDOrhRe.s 			page 5


 154 004a 07D0     		beq	.L17
 155              	.L15:
  76:.\estimators.c **** 	{
  77:.\estimators.c **** 		events.inertial.acceleration = BIKE_DECELERATING;	
 156              		.loc 1 77 0
 157 004c 40F20003 		movw	r3, #:lower16:events
 158 0050 C0F20003 		movt	r3, #:upper16:events
 159 0054 4FF00B02 		mov	r2, #11
 160 0058 DA74     		strb	r2, [r3, #19]
 161 005a 06E0     		b	.L8
 162              	.L17:
  78:.\estimators.c **** 	}
  79:.\estimators.c **** 	else
  80:.\estimators.c **** 	{
  81:.\estimators.c **** 		events.inertial.acceleration = BIKE_NO_ACCELERATION;	
 163              		.loc 1 81 0
 164 005c 40F20003 		movw	r3, #:lower16:events
 165 0060 C0F20003 		movt	r3, #:upper16:events
 166 0064 4FF00002 		mov	r2, #0
 167 0068 DA74     		strb	r2, [r3, #19]
 168              	.L8:
  82:.\estimators.c **** 	}
  83:.\estimators.c **** }
 169              		.loc 1 83 0
 170 006a 07F10807 		add	r7, r7, #8
 171 006e BD46     		mov	sp, r7
 172 0070 80BD     		pop	{r7, pc}
 173              		.cfi_endproc
 174              	.LFE57:
 175              		.size	SimpleHorizAccelerationEventsEstimator, .-SimpleHorizAccelerationEventsEstimator
 176              		.global	__aeabi_fcmple
 177 0072 00BF     		.section	.text.SimpleRollAngleEventsEstimator,"ax",%progbits
 178              		.align	2
 179              		.global	SimpleRollAngleEventsEstimator
 180              		.thumb
 181              		.thumb_func
 182              		.type	SimpleRollAngleEventsEstimator, %function
 183              	SimpleRollAngleEventsEstimator:
 184              	.LFB58:
  84:.\estimators.c **** 
  85:.\estimators.c **** 
  86:.\estimators.c **** /********************************************************/
  87:.\estimators.c **** /* Simple Bike Frame Roll Angle Events Estimator		*/
  88:.\estimators.c **** /* input  : float (bike roll angle(t))					*/
  89:.\estimators.c **** /********************************************************/
  90:.\estimators.c **** void SimpleRollAngleEventsEstimator(float angle)
  91:.\estimators.c **** {	
 185              		.loc 1 91 0
 186              		.cfi_startproc
 187              		@ args = 0, pretend = 0, frame = 16
 188              		@ frame_needed = 1, uses_anonymous_args = 0
 189 0000 80B5     		push	{r7, lr}
 190              	.LCFI6:
 191              		.cfi_def_cfa_offset 8
 192              		.cfi_offset 7, -8
 193              		.cfi_offset 14, -4
 194 0002 84B0     		sub	sp, sp, #16
ARM GAS  C:\Users\gravi\AppData\Local\Temp\ccDOrhRe.s 			page 6


 195              	.LCFI7:
 196              		.cfi_def_cfa_offset 24
 197 0004 00AF     		add	r7, sp, #0
 198              	.LCFI8:
 199              		.cfi_def_cfa_register 7
 200 0006 7860     		str	r0, [r7, #4]	@ float
  92:.\estimators.c **** 	float angle_abs = fabsf(angle);
 201              		.loc 1 92 0
 202 0008 7B68     		ldr	r3, [r7, #4]
 203 000a 23F00043 		bic	r3, r3, #-2147483648
 204 000e FB60     		str	r3, [r7, #12]	@ float
  93:.\estimators.c **** 	
  94:.\estimators.c **** 	if (angle_abs <= NO_ROLL_ANGLE)							/* [deg] */
 205              		.loc 1 94 0
 206 0010 F868     		ldr	r0, [r7, #12]	@ float
 207 0012 4FF00001 		mov	r1, #0
 208 0016 C4F2A001 		movt	r1, 16544
 209 001a FFF7FEFF 		bl	__aeabi_fcmple
 210 001e 0346     		mov	r3, r0
 211 0020 002B     		cmp	r3, #0
 212 0022 07D0     		beq	.L29
 213              	.L26:
  95:.\estimators.c **** 	{
  96:.\estimators.c **** 		events.inertial.roll_angle = NO_ROLL;
 214              		.loc 1 96 0
 215 0024 40F20003 		movw	r3, #:lower16:events
 216 0028 C0F20003 		movt	r3, #:upper16:events
 217 002c 4FF00002 		mov	r2, #0
 218 0030 5A74     		strb	r2, [r3, #17]
 219 0032 28E0     		b	.L18
 220              	.L29:
  97:.\estimators.c **** 	}
  98:.\estimators.c **** 	else if (angle_abs <= BIKE_SIMPLE_ROLLING_ANGLE)		/* [deg] */
 221              		.loc 1 98 0
 222 0034 F868     		ldr	r0, [r7, #12]	@ float
 223 0036 4FF08241 		mov	r1, #1090519040
 224 003a FFF7FEFF 		bl	__aeabi_fcmple
 225 003e 0346     		mov	r3, r0
 226 0040 002B     		cmp	r3, #0
 227 0042 07D0     		beq	.L30
 228              	.L27:
  99:.\estimators.c **** 	{
 100:.\estimators.c **** 		events.inertial.roll_angle = BIKE_SIMPLE_ROLLING;		
 229              		.loc 1 100 0
 230 0044 40F20003 		movw	r3, #:lower16:events
 231 0048 C0F20003 		movt	r3, #:upper16:events
 232 004c 4FF01002 		mov	r2, #16
 233 0050 5A74     		strb	r2, [r3, #17]
 234 0052 18E0     		b	.L18
 235              	.L30:
 101:.\estimators.c **** 	}
 102:.\estimators.c **** 	else if (angle_abs <= BIKE_ROLLING_ANGLE)				/* [deg] */
 236              		.loc 1 102 0
 237 0054 F868     		ldr	r0, [r7, #12]	@ float
 238 0056 4FF00001 		mov	r1, #0
 239 005a C4F24011 		movt	r1, 16704
 240 005e FFF7FEFF 		bl	__aeabi_fcmple
ARM GAS  C:\Users\gravi\AppData\Local\Temp\ccDOrhRe.s 			page 7


 241 0062 0346     		mov	r3, r0
 242 0064 002B     		cmp	r3, #0
 243 0066 07D0     		beq	.L31
 244              	.L28:
 103:.\estimators.c **** 	{
 104:.\estimators.c **** 		events.inertial.roll_angle = BIKE_ROLLING;		
 245              		.loc 1 104 0
 246 0068 40F20003 		movw	r3, #:lower16:events
 247 006c C0F20003 		movt	r3, #:upper16:events
 248 0070 4FF01102 		mov	r2, #17
 249 0074 5A74     		strb	r2, [r3, #17]
 250 0076 06E0     		b	.L18
 251              	.L31:
 105:.\estimators.c **** 	}	
 106:.\estimators.c **** 	else
 107:.\estimators.c **** 	{
 108:.\estimators.c **** 		events.inertial.roll_angle = BIKE_TOO_MUCH_ROLL;
 252              		.loc 1 108 0
 253 0078 40F20003 		movw	r3, #:lower16:events
 254 007c C0F20003 		movt	r3, #:upper16:events
 255 0080 4FF01202 		mov	r2, #18
 256 0084 5A74     		strb	r2, [r3, #17]
 257              	.L18:
 109:.\estimators.c **** 	}
 110:.\estimators.c **** }	
 258              		.loc 1 110 0
 259 0086 07F11007 		add	r7, r7, #16
 260 008a BD46     		mov	sp, r7
 261 008c 80BD     		pop	{r7, pc}
 262              		.cfi_endproc
 263              	.LFE58:
 264              		.size	SimpleRollAngleEventsEstimator, .-SimpleRollAngleEventsEstimator
 265              		.global	__aeabi_f2d
 266              		.global	__aeabi_dcmple
 267              		.global	__aeabi_dcmpgt
 268              		.global	__aeabi_dcmplt
 269 008e 00BF     		.section	.text.SimpleTiltAngleEventsEstimator,"ax",%progbits
 270              		.align	2
 271              		.global	SimpleTiltAngleEventsEstimator
 272              		.thumb
 273              		.thumb_func
 274              		.type	SimpleTiltAngleEventsEstimator, %function
 275              	SimpleTiltAngleEventsEstimator:
 276              	.LFB59:
 111:.\estimators.c **** 
 112:.\estimators.c **** /********************************************/
 113:.\estimators.c **** /* Simple Bike Pitch Angle Events Estimator	*/
 114:.\estimators.c **** /* input  : float (bike pitch angle(t))		*/
 115:.\estimators.c **** /********************************************/
 116:.\estimators.c **** void SimpleTiltAngleEventsEstimator(float angle)
 117:.\estimators.c **** {	
 277              		.loc 1 117 0
 278              		.cfi_startproc
 279              		@ args = 0, pretend = 0, frame = 8
 280              		@ frame_needed = 1, uses_anonymous_args = 0
 281 0000 80B5     		push	{r7, lr}
 282              	.LCFI9:
ARM GAS  C:\Users\gravi\AppData\Local\Temp\ccDOrhRe.s 			page 8


 283              		.cfi_def_cfa_offset 8
 284              		.cfi_offset 7, -8
 285              		.cfi_offset 14, -4
 286 0002 82B0     		sub	sp, sp, #8
 287              	.LCFI10:
 288              		.cfi_def_cfa_offset 16
 289 0004 00AF     		add	r7, sp, #0
 290              	.LCFI11:
 291              		.cfi_def_cfa_register 7
 292 0006 7860     		str	r0, [r7, #4]	@ float
 118:.\estimators.c **** 	if (fabsf(angle) <= 2.86)	
 293              		.loc 1 118 0
 294 0008 7B68     		ldr	r3, [r7, #4]
 295 000a 23F00043 		bic	r3, r3, #-2147483648
 296 000e 1846     		mov	r0, r3
 297 0010 FFF7FEFF 		bl	__aeabi_f2d
 298 0014 0246     		mov	r2, r0
 299 0016 0B46     		mov	r3, r1
 300 0018 1046     		mov	r0, r2
 301 001a 1946     		mov	r1, r3
 302 001c 52A3     		adr	r3, .L62
 303 001e D3E90023 		ldrd	r2, [r3]
 304 0022 FFF7FEFF 		bl	__aeabi_dcmple
 305 0026 0346     		mov	r3, r0
 306 0028 002B     		cmp	r3, #0
 307 002a 07D0     		beq	.L56
 308              	.L48:
 119:.\estimators.c **** 	{
 120:.\estimators.c **** 		events.inertial.tilt_angle = PLANE_MOTION;
 309              		.loc 1 120 0
 310 002c 40F20003 		movw	r3, #:lower16:events
 311 0030 C0F20003 		movt	r3, #:upper16:events
 312 0034 4FF00002 		mov	r2, #0
 313 0038 1A74     		strb	r2, [r3, #16]
 314 003a 90E0     		b	.L32
 315              	.L56:
 121:.\estimators.c **** 	}
 122:.\estimators.c **** 	else
 123:.\estimators.c **** 	if (angle > 0)
 316              		.loc 1 123 0
 317 003c 7868     		ldr	r0, [r7, #4]	@ float
 318 003e 4FF00001 		mov	r1, #0
 319 0042 FFF7FEFF 		bl	__aeabi_fcmpgt
 320 0046 0346     		mov	r3, r0
 321 0048 002B     		cmp	r3, #0
 322 004a 44D0     		beq	.L57
 323              	.L49:
 124:.\estimators.c **** 	{
 125:.\estimators.c **** 		if (angle > 11.31)	/* 20% climb	*/
 324              		.loc 1 125 0
 325 004c 7868     		ldr	r0, [r7, #4]	@ float
 326 004e FFF7FEFF 		bl	__aeabi_f2d
 327 0052 0246     		mov	r2, r0
 328 0054 0B46     		mov	r3, r1
 329 0056 1046     		mov	r0, r2
 330 0058 1946     		mov	r1, r3
 331 005a 45A3     		adr	r3, .L62+8
ARM GAS  C:\Users\gravi\AppData\Local\Temp\ccDOrhRe.s 			page 9


 332 005c D3E90023 		ldrd	r2, [r3]
 333 0060 FFF7FEFF 		bl	__aeabi_dcmpgt
 334 0064 0346     		mov	r3, r0
 335 0066 002B     		cmp	r3, #0
 336 0068 07D0     		beq	.L58
 337              	.L50:
 126:.\estimators.c **** 		{
 127:.\estimators.c **** 			events.inertial.tilt_angle = VERY_STEEP_DESCENT;
 338              		.loc 1 127 0
 339 006a 40F20003 		movw	r3, #:lower16:events
 340 006e C0F20003 		movt	r3, #:upper16:events
 341 0072 4FF01602 		mov	r2, #22
 342 0076 1A74     		strb	r2, [r3, #16]
 343 0078 71E0     		b	.L32
 344              	.L58:
 128:.\estimators.c **** 		}
 129:.\estimators.c **** 		else
 130:.\estimators.c **** 		if (angle > 5.71)	/* 10% climb */
 345              		.loc 1 130 0
 346 007a 7868     		ldr	r0, [r7, #4]	@ float
 347 007c FFF7FEFF 		bl	__aeabi_f2d
 348 0080 0246     		mov	r2, r0
 349 0082 0B46     		mov	r3, r1
 350 0084 1046     		mov	r0, r2
 351 0086 1946     		mov	r1, r3
 352 0088 3BA3     		adr	r3, .L62+16
 353 008a D3E90023 		ldrd	r2, [r3]
 354 008e FFF7FEFF 		bl	__aeabi_dcmpgt
 355 0092 0346     		mov	r3, r0
 356 0094 002B     		cmp	r3, #0
 357 0096 07D0     		beq	.L59
 358              	.L51:
 131:.\estimators.c **** 		{
 132:.\estimators.c **** 			events.inertial.tilt_angle = STEEP_DESCENT;
 359              		.loc 1 132 0
 360 0098 40F20003 		movw	r3, #:lower16:events
 361 009c C0F20003 		movt	r3, #:upper16:events
 362 00a0 4FF01502 		mov	r2, #21
 363 00a4 1A74     		strb	r2, [r3, #16]
 364 00a6 5AE0     		b	.L32
 365              	.L59:
 133:.\estimators.c **** 		}
 134:.\estimators.c **** 		else
 135:.\estimators.c **** 		if (angle > 2.86)	/* 5% climb */
 366              		.loc 1 135 0
 367 00a8 7868     		ldr	r0, [r7, #4]	@ float
 368 00aa FFF7FEFF 		bl	__aeabi_f2d
 369 00ae 0246     		mov	r2, r0
 370 00b0 0B46     		mov	r3, r1
 371 00b2 1046     		mov	r0, r2
 372 00b4 1946     		mov	r1, r3
 373 00b6 2CA3     		adr	r3, .L62
 374 00b8 D3E90023 		ldrd	r2, [r3]
 375 00bc FFF7FEFF 		bl	__aeabi_dcmpgt
 376 00c0 0346     		mov	r3, r0
 377 00c2 002B     		cmp	r3, #0
 378 00c4 4BD0     		beq	.L32
ARM GAS  C:\Users\gravi\AppData\Local\Temp\ccDOrhRe.s 			page 10


 379              	.L52:
 136:.\estimators.c **** 		{
 137:.\estimators.c **** 			events.inertial.tilt_angle = SIMPLE_DESCENT;
 380              		.loc 1 137 0
 381 00c6 40F20003 		movw	r3, #:lower16:events
 382 00ca C0F20003 		movt	r3, #:upper16:events
 383 00ce 4FF01402 		mov	r2, #20
 384 00d2 1A74     		strb	r2, [r3, #16]
 385 00d4 43E0     		b	.L32
 386              	.L57:
 138:.\estimators.c **** 		}
 139:.\estimators.c **** 	}
 140:.\estimators.c **** 	else /* angle < 0 */
 141:.\estimators.c **** 	{
 142:.\estimators.c **** 		if (angle < -11.31)	/* 20% descent	*/
 387              		.loc 1 142 0
 388 00d6 7868     		ldr	r0, [r7, #4]	@ float
 389 00d8 FFF7FEFF 		bl	__aeabi_f2d
 390 00dc 0246     		mov	r2, r0
 391 00de 0B46     		mov	r3, r1
 392 00e0 1046     		mov	r0, r2
 393 00e2 1946     		mov	r1, r3
 394 00e4 26A3     		adr	r3, .L62+24
 395 00e6 D3E90023 		ldrd	r2, [r3]
 396 00ea FFF7FEFF 		bl	__aeabi_dcmplt
 397 00ee 0346     		mov	r3, r0
 398 00f0 002B     		cmp	r3, #0
 399 00f2 07D0     		beq	.L60
 400              	.L53:
 143:.\estimators.c **** 		{
 144:.\estimators.c **** 			events.inertial.tilt_angle = VERY_STEEP_CLIMB;
 401              		.loc 1 144 0
 402 00f4 40F20003 		movw	r3, #:lower16:events
 403 00f8 C0F20003 		movt	r3, #:upper16:events
 404 00fc 4FF00C02 		mov	r2, #12
 405 0100 1A74     		strb	r2, [r3, #16]
 406 0102 2CE0     		b	.L32
 407              	.L60:
 145:.\estimators.c **** 		}
 146:.\estimators.c **** 		else
 147:.\estimators.c **** 		if (angle < -5.71)	/* 10% descent */
 408              		.loc 1 147 0
 409 0104 7868     		ldr	r0, [r7, #4]	@ float
 410 0106 FFF7FEFF 		bl	__aeabi_f2d
 411 010a 0246     		mov	r2, r0
 412 010c 0B46     		mov	r3, r1
 413 010e 1046     		mov	r0, r2
 414 0110 1946     		mov	r1, r3
 415 0112 1DA3     		adr	r3, .L62+32
 416 0114 D3E90023 		ldrd	r2, [r3]
 417 0118 FFF7FEFF 		bl	__aeabi_dcmplt
 418 011c 0346     		mov	r3, r0
 419 011e 002B     		cmp	r3, #0
 420 0120 07D0     		beq	.L61
 421              	.L54:
 148:.\estimators.c **** 		{
 149:.\estimators.c **** 			events.inertial.tilt_angle = STEEP_CLIMB;
ARM GAS  C:\Users\gravi\AppData\Local\Temp\ccDOrhRe.s 			page 11


 422              		.loc 1 149 0
 423 0122 40F20003 		movw	r3, #:lower16:events
 424 0126 C0F20003 		movt	r3, #:upper16:events
 425 012a 4FF00B02 		mov	r2, #11
 426 012e 1A74     		strb	r2, [r3, #16]
 427 0130 15E0     		b	.L32
 428              	.L61:
 150:.\estimators.c **** 		}
 151:.\estimators.c **** 		else
 152:.\estimators.c **** 		if (angle < -2.86)	/* 5% descent */
 429              		.loc 1 152 0
 430 0132 7868     		ldr	r0, [r7, #4]	@ float
 431 0134 FFF7FEFF 		bl	__aeabi_f2d
 432 0138 0246     		mov	r2, r0
 433 013a 0B46     		mov	r3, r1
 434 013c 1046     		mov	r0, r2
 435 013e 1946     		mov	r1, r3
 436 0140 13A3     		adr	r3, .L62+40
 437 0142 D3E90023 		ldrd	r2, [r3]
 438 0146 FFF7FEFF 		bl	__aeabi_dcmplt
 439 014a 0346     		mov	r3, r0
 440 014c 002B     		cmp	r3, #0
 441 014e 06D0     		beq	.L32
 442              	.L55:
 153:.\estimators.c **** 		{
 154:.\estimators.c **** 			events.inertial.tilt_angle = SIMPLE_CLIMB;
 443              		.loc 1 154 0
 444 0150 40F20003 		movw	r3, #:lower16:events
 445 0154 C0F20003 		movt	r3, #:upper16:events
 446 0158 4FF00A02 		mov	r2, #10
 447 015c 1A74     		strb	r2, [r3, #16]
 448              	.L32:
 155:.\estimators.c **** 		}
 156:.\estimators.c **** 	}	
 157:.\estimators.c **** }
 449              		.loc 1 157 0
 450 015e 07F10807 		add	r7, r7, #8
 451 0162 BD46     		mov	sp, r7
 452 0164 80BD     		pop	{r7, pc}
 453              	.L63:
 454 0166 00BF     		.align	3
 455              	.L62:
 456 0168 E17A14AE 		.word	-1374389535
 457 016c 47E10640 		.word	1074192711
 458 0170 1F85EB51 		.word	1374389535
 459 0174 B89E2640 		.word	1076272824
 460 0178 D7A3703D 		.word	1030792151
 461 017c 0AD71640 		.word	1075238666
 462 0180 1F85EB51 		.word	1374389535
 463 0184 B89E26C0 		.word	-1071210824
 464 0188 D7A3703D 		.word	1030792151
 465 018c 0AD716C0 		.word	-1072244982
 466 0190 E17A14AE 		.word	-1374389535
 467 0194 47E106C0 		.word	-1073290937
 468              		.cfi_endproc
 469              	.LFE59:
 470              		.size	SimpleTiltAngleEventsEstimator, .-SimpleTiltAngleEventsEstimator
ARM GAS  C:\Users\gravi\AppData\Local\Temp\ccDOrhRe.s 			page 12


 471              		.global	__aeabi_fcmpge
 472              		.section	.text.SimpleVibrationEventsEstimator,"ax",%progbits
 473              		.align	2
 474              		.global	SimpleVibrationEventsEstimator
 475              		.thumb
 476              		.thumb_func
 477              		.type	SimpleVibrationEventsEstimator, %function
 478              	SimpleVibrationEventsEstimator:
 479              	.LFB60:
 158:.\estimators.c **** 
 159:.\estimators.c **** /********************************************/
 160:.\estimators.c **** /* Simple Bike Vibration Events Estimator	*/
 161:.\estimators.c **** /* input  : float (system dynamic scalar(t))*/
 162:.\estimators.c **** /********************************************/
 163:.\estimators.c **** void SimpleVibrationEventsEstimator(float sysdyn)
 164:.\estimators.c **** {	
 480              		.loc 1 164 0
 481              		.cfi_startproc
 482              		@ args = 0, pretend = 0, frame = 8
 483              		@ frame_needed = 1, uses_anonymous_args = 0
 484 0000 80B5     		push	{r7, lr}
 485              	.LCFI12:
 486              		.cfi_def_cfa_offset 8
 487              		.cfi_offset 7, -8
 488              		.cfi_offset 14, -4
 489 0002 82B0     		sub	sp, sp, #8
 490              	.LCFI13:
 491              		.cfi_def_cfa_offset 16
 492 0004 00AF     		add	r7, sp, #0
 493              	.LCFI14:
 494              		.cfi_def_cfa_register 7
 495 0006 7860     		str	r0, [r7, #4]	@ float
 165:.\estimators.c **** 	if (fabsf(sysdyn) >= 10.0)
 496              		.loc 1 165 0
 497 0008 7B68     		ldr	r3, [r7, #4]
 498 000a 23F00043 		bic	r3, r3, #-2147483648
 499 000e 1846     		mov	r0, r3
 500 0010 4FF00001 		mov	r1, #0
 501 0014 C4F22011 		movt	r1, 16672
 502 0018 FFF7FEFF 		bl	__aeabi_fcmpge
 503 001c 0346     		mov	r3, r0
 504 001e 002B     		cmp	r3, #0
 505 0020 07D0     		beq	.L75
 506              	.L72:
 166:.\estimators.c **** 	{
 167:.\estimators.c **** 		events.inertial.vibration = HIGH_VIBRATION;
 507              		.loc 1 167 0
 508 0022 40F20003 		movw	r3, #:lower16:events
 509 0026 C0F20003 		movt	r3, #:upper16:events
 510 002a 4FF00C02 		mov	r2, #12
 511 002e 1A75     		strb	r2, [r3, #20]
 512 0030 2EE0     		b	.L64
 513              	.L75:
 168:.\estimators.c **** 	}
 169:.\estimators.c **** 	else 	if (fabsf(sysdyn) >= 5.0)
 514              		.loc 1 169 0
 515 0032 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\gravi\AppData\Local\Temp\ccDOrhRe.s 			page 13


 516 0034 23F00043 		bic	r3, r3, #-2147483648
 517 0038 1846     		mov	r0, r3
 518 003a 4FF00001 		mov	r1, #0
 519 003e C4F2A001 		movt	r1, 16544
 520 0042 FFF7FEFF 		bl	__aeabi_fcmpge
 521 0046 0346     		mov	r3, r0
 522 0048 002B     		cmp	r3, #0
 523 004a 07D0     		beq	.L76
 524              	.L73:
 170:.\estimators.c **** 	{
 171:.\estimators.c **** 		events.inertial.vibration = MEDIUM_VIBRATION;
 525              		.loc 1 171 0
 526 004c 40F20003 		movw	r3, #:lower16:events
 527 0050 C0F20003 		movt	r3, #:upper16:events
 528 0054 4FF00B02 		mov	r2, #11
 529 0058 1A75     		strb	r2, [r3, #20]
 530 005a 19E0     		b	.L64
 531              	.L76:
 172:.\estimators.c **** 	}	
 173:.\estimators.c **** 	else 	if (fabsf(sysdyn) >= 0.25)
 532              		.loc 1 173 0
 533 005c 7B68     		ldr	r3, [r7, #4]
 534 005e 23F00043 		bic	r3, r3, #-2147483648
 535 0062 1846     		mov	r0, r3
 536 0064 4FF07A51 		mov	r1, #1048576000
 537 0068 FFF7FEFF 		bl	__aeabi_fcmpge
 538 006c 0346     		mov	r3, r0
 539 006e 002B     		cmp	r3, #0
 540 0070 07D0     		beq	.L77
 541              	.L74:
 174:.\estimators.c **** 	{
 175:.\estimators.c **** 		events.inertial.vibration = VIBRATION;
 542              		.loc 1 175 0
 543 0072 40F20003 		movw	r3, #:lower16:events
 544 0076 C0F20003 		movt	r3, #:upper16:events
 545 007a 4FF00A02 		mov	r2, #10
 546 007e 1A75     		strb	r2, [r3, #20]
 547 0080 06E0     		b	.L64
 548              	.L77:
 176:.\estimators.c **** 	}
 177:.\estimators.c **** 	else
 178:.\estimators.c **** 	{
 179:.\estimators.c **** 		events.inertial.vibration = NO_VIBRATION;
 549              		.loc 1 179 0
 550 0082 40F20003 		movw	r3, #:lower16:events
 551 0086 C0F20003 		movt	r3, #:upper16:events
 552 008a 4FF00002 		mov	r2, #0
 553 008e 1A75     		strb	r2, [r3, #20]
 554              	.L64:
 180:.\estimators.c **** 	}	
 181:.\estimators.c **** }
 555              		.loc 1 181 0
 556 0090 07F10807 		add	r7, r7, #8
 557 0094 BD46     		mov	sp, r7
 558 0096 80BD     		pop	{r7, pc}
 559              		.cfi_endproc
 560              	.LFE60:
ARM GAS  C:\Users\gravi\AppData\Local\Temp\ccDOrhRe.s 			page 14


 561              		.size	SimpleVibrationEventsEstimator, .-SimpleVibrationEventsEstimator
 562              		.section	.rodata
 563              		.align	2
 564              	.LC0:
 565 0000 0D0A404D 		.ascii	"\015\012@MAPSM: MOVING TO FACE!\015\000"
 565      4150534D 
 565      3A204D4F 
 565      56494E47 
 565      20544F20 
 566 001b 00       		.align	2
 567              	.LC1:
 568 001c 0D0A404D 		.ascii	"\015\012@MAPSM: MOVING TO WHEEL!\015\000"
 568      4150534D 
 568      3A204D4F 
 568      56494E47 
 568      20544F20 
 569              		.align	2
 570              	.LC2:
 571 0038 0D0A404D 		.ascii	"\015\012@MAPSM: MOVING PANORAMIC PAN!\015\000"
 571      4150534D 
 571      3A204D4F 
 571      56494E47 
 571      2050414E 
 572 0059 000000   		.align	2
 573              	.LC3:
 574 005c 0D0A404D 		.ascii	"\015\012@MAPSM: MOVING JUMP PAN!\015\000"
 574      4150534D 
 574      3A204D4F 
 574      56494E47 
 574      204A554D 
 575              		.align	2
 576              	.LC4:
 577 0078 0D0A404D 		.ascii	"\015\012@MAPSM: GOTO HOME P+T!\015\000"
 577      4150534D 
 577      3A20474F 
 577      544F2048 
 577      4F4D4520 
 578 0092 0000     		.section	.text.MappingStateMachineExecution,"ax",%progbits
 579              		.align	2
 580              		.global	MappingStateMachineExecution
 581              		.thumb
 582              		.thumb_func
 583              		.type	MappingStateMachineExecution, %function
 584              	MappingStateMachineExecution:
 585              	.LFB61:
 182:.\estimators.c **** 
 183:.\estimators.c **** /****************************************/
 184:.\estimators.c **** /* MAPPING STATE MACHINE			 	*/
 185:.\estimators.c **** /****************************************/
 186:.\estimators.c **** void MappingStateMachineExecution(void)
 187:.\estimators.c **** {
 586              		.loc 1 187 0
 587              		.cfi_startproc
 588              		@ args = 0, pretend = 0, frame = 0
 589              		@ frame_needed = 1, uses_anonymous_args = 0
 590 0000 80B5     		push	{r7, lr}
 591              	.LCFI15:
ARM GAS  C:\Users\gravi\AppData\Local\Temp\ccDOrhRe.s 			page 15


 592              		.cfi_def_cfa_offset 8
 593              		.cfi_offset 7, -8
 594              		.cfi_offset 14, -4
 595 0002 00AF     		add	r7, sp, #0
 596              	.LCFI16:
 597              		.cfi_def_cfa_register 7
 188:.\estimators.c **** 	switch (events.mapping_sm_status)
 598              		.loc 1 188 0
 599 0004 40F20003 		movw	r3, #:lower16:events
 600 0008 C0F20003 		movt	r3, #:upper16:events
 601 000c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 602 000e 072B     		cmp	r3, #7
 603 0010 00F2D381 		bhi	.L112
 604 0014 01A2     		adr	r2, .L88
 605 0016 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 606 001a 00BF     		.align	2
 607              	.L88:
 608 001c 3D000000 		.word	.L80+1
 609 0020 D7010000 		.word	.L81+1
 610 0024 27020000 		.word	.L82+1
 611 0028 B5020000 		.word	.L83+1
 612 002c E3020000 		.word	.L84+1
 613 0030 0F030000 		.word	.L85+1
 614 0034 41030000 		.word	.L86+1
 615 0038 5F030000 		.word	.L87+1
 616              	.L80:
 189:.\estimators.c **** 	{
 190:.\estimators.c **** 		case SM_ON_ORIGIN:
 191:.\estimators.c **** 			events.timecode.on_origin_ticks++;
 617              		.loc 1 191 0
 618 003c 40F20003 		movw	r3, #:lower16:events
 619 0040 C0F20003 		movt	r3, #:upper16:events
 620 0044 DB68     		ldr	r3, [r3, #12]
 621 0046 03F10102 		add	r2, r3, #1
 622 004a 40F20003 		movw	r3, #:lower16:events
 623 004e C0F20003 		movt	r3, #:upper16:events
 624 0052 DA60     		str	r2, [r3, #12]
 192:.\estimators.c **** 		
 193:.\estimators.c **** 			if (events.inertial.tilt_angle == VERY_STEEP_CLIMB)
 625              		.loc 1 193 0
 626 0054 40F20003 		movw	r3, #:lower16:events
 627 0058 C0F20003 		movt	r3, #:upper16:events
 628 005c 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 629 005e 0C2B     		cmp	r3, #12
 630 0060 28D1     		bne	.L89
 194:.\estimators.c **** 			{	
 195:.\estimators.c **** 				events.mapping_sm_status = SM_MOVING_TO_FACE;
 631              		.loc 1 195 0
 632 0062 40F20003 		movw	r3, #:lower16:events
 633 0066 C0F20003 		movt	r3, #:upper16:events
 634 006a 4FF00102 		mov	r2, #1
 635 006e 1A70     		strb	r2, [r3, #0]
 196:.\estimators.c **** 				printf("\r\n@MAPSM: MOVING TO FACE!\r\n");
 636              		.loc 1 196 0
 637 0070 40F20000 		movw	r0, #:lower16:.LC0
 638 0074 C0F20000 		movt	r0, #:upper16:.LC0
 639 0078 FFF7FEFF 		bl	puts
ARM GAS  C:\Users\gravi\AppData\Local\Temp\ccDOrhRe.s 			page 16


 197:.\estimators.c **** 				if (gobee_param.director == STANLEY)
 640              		.loc 1 197 0
 641 007c 40F20003 		movw	r3, #:lower16:gobee_param
 642 0080 C0F20003 		movt	r3, #:upper16:gobee_param
 643 0084 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 644 0086 002B     		cmp	r3, #0
 645 0088 04D1     		bne	.L90
 198:.\estimators.c **** 				{
 199:.\estimators.c **** 					clu_sm_start(MOVING_TO_FACE_STANLEY_CLU);
 646              		.loc 1 199 0
 647 008a 4FF01000 		mov	r0, #16
 648 008e FFF7FEFF 		bl	clu_sm_start
 649 0092 0FE0     		b	.L89
 650              	.L90:
 200:.\estimators.c **** 				}
 201:.\estimators.c **** 				else if	(gobee_param.director == JJ)
 651              		.loc 1 201 0
 652 0094 40F20003 		movw	r3, #:lower16:gobee_param
 653 0098 C0F20003 		movt	r3, #:upper16:gobee_param
 654 009c 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 655 009e 122B     		cmp	r3, #18
 656 00a0 04D1     		bne	.L91
 202:.\estimators.c **** 				{
 203:.\estimators.c **** 					clu_sm_start(MOVING_TO_FACE_JJ_CLU);
 657              		.loc 1 203 0
 658 00a2 4FF01100 		mov	r0, #17
 659 00a6 FFF7FEFF 		bl	clu_sm_start
 660 00aa 03E0     		b	.L89
 661              	.L91:
 204:.\estimators.c **** 				}
 205:.\estimators.c **** 				else
 206:.\estimators.c **** 				{
 207:.\estimators.c **** 					clu_sm_start(MOVING_TO_FACE_GENERIC_CLU);
 662              		.loc 1 207 0
 663 00ac 4FF00A00 		mov	r0, #10
 664 00b0 FFF7FEFF 		bl	clu_sm_start
 665              	.L89:
 208:.\estimators.c **** 				}				
 209:.\estimators.c **** 			}
 210:.\estimators.c **** 			
 211:.\estimators.c **** 			if (events.inertial.tilt_angle == VERY_STEEP_DESCENT)
 666              		.loc 1 211 0
 667 00b4 40F20003 		movw	r3, #:lower16:events
 668 00b8 C0F20003 		movt	r3, #:upper16:events
 669 00bc 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 670 00be 162B     		cmp	r3, #22
 671 00c0 28D1     		bne	.L92
 212:.\estimators.c **** 			{	
 213:.\estimators.c **** 				events.mapping_sm_status = SM_MOVING_TO_WHEEL;
 672              		.loc 1 213 0
 673 00c2 40F20003 		movw	r3, #:lower16:events
 674 00c6 C0F20003 		movt	r3, #:upper16:events
 675 00ca 4FF00602 		mov	r2, #6
 676 00ce 1A70     		strb	r2, [r3, #0]
 214:.\estimators.c **** 				printf("\r\n@MAPSM: MOVING TO WHEEL!\r\n");
 677              		.loc 1 214 0
 678 00d0 40F20000 		movw	r0, #:lower16:.LC1
ARM GAS  C:\Users\gravi\AppData\Local\Temp\ccDOrhRe.s 			page 17


 679 00d4 C0F20000 		movt	r0, #:upper16:.LC1
 680 00d8 FFF7FEFF 		bl	puts
 215:.\estimators.c **** 				if (gobee_param.director == STANLEY)
 681              		.loc 1 215 0
 682 00dc 40F20003 		movw	r3, #:lower16:gobee_param
 683 00e0 C0F20003 		movt	r3, #:upper16:gobee_param
 684 00e4 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 685 00e6 002B     		cmp	r3, #0
 686 00e8 04D1     		bne	.L93
 216:.\estimators.c **** 				{
 217:.\estimators.c **** 					clu_sm_start(MOVING_TO_WHEEL_STANLEY_CLU);
 687              		.loc 1 217 0
 688 00ea 4FF01300 		mov	r0, #19
 689 00ee FFF7FEFF 		bl	clu_sm_start
 690 00f2 0FE0     		b	.L92
 691              	.L93:
 218:.\estimators.c **** 				}
 219:.\estimators.c **** 				else if	(gobee_param.director == JJ)
 692              		.loc 1 219 0
 693 00f4 40F20003 		movw	r3, #:lower16:gobee_param
 694 00f8 C0F20003 		movt	r3, #:upper16:gobee_param
 695 00fc 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 696 00fe 122B     		cmp	r3, #18
 697 0100 04D1     		bne	.L94
 220:.\estimators.c **** 				{
 221:.\estimators.c **** 					clu_sm_start(MOVING_TO_WHEEL_JJ_CLU);
 698              		.loc 1 221 0
 699 0102 4FF01400 		mov	r0, #20
 700 0106 FFF7FEFF 		bl	clu_sm_start
 701 010a 03E0     		b	.L92
 702              	.L94:
 222:.\estimators.c **** 				}
 223:.\estimators.c **** 				else
 224:.\estimators.c **** 				{
 225:.\estimators.c **** 					clu_sm_start(MOVING_TO_WHEEL_GENERIC_CLU);
 703              		.loc 1 225 0
 704 010c 4FF01200 		mov	r0, #18
 705 0110 FFF7FEFF 		bl	clu_sm_start
 706              	.L92:
 226:.\estimators.c **** 				}				
 227:.\estimators.c **** 			}			
 228:.\estimators.c **** 			
 229:.\estimators.c **** 			if (((events.inertial.tilt_angle == PLANE_MOTION) ||
 707              		.loc 1 229 0
 708 0114 40F20003 		movw	r3, #:lower16:events
 709 0118 C0F20003 		movt	r3, #:upper16:events
 710 011c 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 711 011e 002B     		cmp	r3, #0
 712 0120 0DD0     		beq	.L95
 230:.\estimators.c **** 				 (events.inertial.tilt_angle == SIMPLE_CLIMB) ||
 713              		.loc 1 230 0 discriminator 1
 714 0122 40F20003 		movw	r3, #:lower16:events
 715 0126 C0F20003 		movt	r3, #:upper16:events
 716 012a 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 229:.\estimators.c **** 			if (((events.inertial.tilt_angle == PLANE_MOTION) ||
 717              		.loc 1 229 0 discriminator 1
 718 012c 0A2B     		cmp	r3, #10
ARM GAS  C:\Users\gravi\AppData\Local\Temp\ccDOrhRe.s 			page 18


 719 012e 06D0     		beq	.L95
 231:.\estimators.c **** 				 (events.inertial.tilt_angle == SIMPLE_DESCENT)) &&
 720              		.loc 1 231 0
 721 0130 40F20003 		movw	r3, #:lower16:events
 722 0134 C0F20003 		movt	r3, #:upper16:events
 723 0138 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 230:.\estimators.c **** 				 (events.inertial.tilt_angle == SIMPLE_CLIMB) ||
 724              		.loc 1 230 0
 725 013a 142B     		cmp	r3, #20
 726 013c 31D1     		bne	.L96
 727              	.L95:
 232:.\estimators.c **** 				(events.timecode.on_origin_ticks >= 3000))
 728              		.loc 1 232 0
 729 013e 40F20003 		movw	r3, #:lower16:events
 730 0142 C0F20003 		movt	r3, #:upper16:events
 731 0146 DA68     		ldr	r2, [r3, #12]
 231:.\estimators.c **** 				 (events.inertial.tilt_angle == SIMPLE_DESCENT)) &&
 732              		.loc 1 231 0
 733 0148 40F6B733 		movw	r3, #2999
 734 014c 9A42     		cmp	r2, r3
 735 014e 28D9     		bls	.L96
 233:.\estimators.c **** 			{
 234:.\estimators.c **** 				events.mapping_sm_status = SM_MOVING_PANORAMIC;
 736              		.loc 1 234 0
 737 0150 40F20003 		movw	r3, #:lower16:events
 738 0154 C0F20003 		movt	r3, #:upper16:events
 739 0158 4FF00402 		mov	r2, #4
 740 015c 1A70     		strb	r2, [r3, #0]
 235:.\estimators.c **** 				printf("\r\n@MAPSM: MOVING PANORAMIC PAN!\r\n");
 741              		.loc 1 235 0
 742 015e 40F20000 		movw	r0, #:lower16:.LC2
 743 0162 C0F20000 		movt	r0, #:upper16:.LC2
 744 0166 FFF7FEFF 		bl	puts
 236:.\estimators.c **** 				
 237:.\estimators.c **** 				if (gobee_param.director == STANLEY)
 745              		.loc 1 237 0
 746 016a 40F20003 		movw	r3, #:lower16:gobee_param
 747 016e C0F20003 		movt	r3, #:upper16:gobee_param
 748 0172 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 749 0174 002B     		cmp	r3, #0
 750 0176 04D1     		bne	.L97
 238:.\estimators.c **** 				{
 239:.\estimators.c **** 					clu_sm_start(MOVING_PANORAMIC_STANLEY_CLU);
 751              		.loc 1 239 0
 752 0178 4FF00E00 		mov	r0, #14
 753 017c FFF7FEFF 		bl	clu_sm_start
 754 0180 0FE0     		b	.L96
 755              	.L97:
 240:.\estimators.c **** 				}
 241:.\estimators.c **** 				else if	(gobee_param.director == JJ)
 756              		.loc 1 241 0
 757 0182 40F20003 		movw	r3, #:lower16:gobee_param
 758 0186 C0F20003 		movt	r3, #:upper16:gobee_param
 759 018a 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 760 018c 122B     		cmp	r3, #18
 761 018e 04D1     		bne	.L98
 242:.\estimators.c **** 				{
ARM GAS  C:\Users\gravi\AppData\Local\Temp\ccDOrhRe.s 			page 19


 243:.\estimators.c **** 					clu_sm_start(MOVING_PANORAMIC_JJ_CLU);
 762              		.loc 1 243 0
 763 0190 4FF00F00 		mov	r0, #15
 764 0194 FFF7FEFF 		bl	clu_sm_start
 765 0198 03E0     		b	.L96
 766              	.L98:
 244:.\estimators.c **** 				}
 245:.\estimators.c **** 				else
 246:.\estimators.c **** 				{
 247:.\estimators.c **** 					clu_sm_start(MOVING_PANORAMIC_GENERIC_CLU);
 767              		.loc 1 247 0
 768 019a 4FF00C00 		mov	r0, #12
 769 019e FFF7FEFF 		bl	clu_sm_start
 770              	.L96:
 248:.\estimators.c **** 				}
 249:.\estimators.c **** 			}		
 250:.\estimators.c **** 			
 251:.\estimators.c **** 			if (events.inertial.jump == IM_JUMPING)
 771              		.loc 1 251 0
 772 01a2 40F20003 		movw	r3, #:lower16:events
 773 01a6 C0F20003 		movt	r3, #:upper16:events
 774 01aa 9B7C     		ldrb	r3, [r3, #18]	@ zero_extendqisi2
 775 01ac 0A2B     		cmp	r3, #10
 776 01ae 40F00681 		bne	.L113
 252:.\estimators.c **** 			{
 253:.\estimators.c **** 				events.mapping_sm_status = SM_MOVING_JUMP;
 777              		.loc 1 253 0
 778 01b2 40F20003 		movw	r3, #:lower16:events
 779 01b6 C0F20003 		movt	r3, #:upper16:events
 780 01ba 4FF00502 		mov	r2, #5
 781 01be 1A70     		strb	r2, [r3, #0]
 254:.\estimators.c **** 				printf("\r\n@MAPSM: MOVING JUMP PAN!\r\n");
 782              		.loc 1 254 0
 783 01c0 40F20000 		movw	r0, #:lower16:.LC3
 784 01c4 C0F20000 		movt	r0, #:upper16:.LC3
 785 01c8 FFF7FEFF 		bl	puts
 255:.\estimators.c **** 				clu_sm_start(MOVING_JUMP_CLU);
 786              		.loc 1 255 0
 787 01cc 4FF00D00 		mov	r0, #13
 788 01d0 FFF7FEFF 		bl	clu_sm_start
 256:.\estimators.c **** 			}			
 257:.\estimators.c **** 			break;
 789              		.loc 1 257 0
 790 01d4 F3E0     		b	.L113
 791              	.L81:
 258:.\estimators.c **** 		case SM_MOVING_TO_FACE:
 259:.\estimators.c **** 			//if ((mover_pan.status == MOVER_ENDED) && (mover_tilt.status == MOVER_ENDED))
 260:.\estimators.c **** 			if (clu_sm.status == CLUSM_END)
 792              		.loc 1 260 0
 793 01d6 40F20003 		movw	r3, #:lower16:clu_sm
 794 01da C0F20003 		movt	r3, #:upper16:clu_sm
 795 01de 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 796 01e0 0C2B     		cmp	r3, #12
 797 01e2 06D1     		bne	.L101
 261:.\estimators.c **** 			{
 262:.\estimators.c **** 				events.mapping_sm_status = SM_ON_FACE;				
 798              		.loc 1 262 0
ARM GAS  C:\Users\gravi\AppData\Local\Temp\ccDOrhRe.s 			page 20


 799 01e4 40F20003 		movw	r3, #:lower16:events
 800 01e8 C0F20003 		movt	r3, #:upper16:events
 801 01ec 4FF00202 		mov	r2, #2
 802 01f0 1A70     		strb	r2, [r3, #0]
 803              	.L101:
 263:.\estimators.c **** 			}
 264:.\estimators.c **** 			if (events.inertial.jump == IM_JUMPING)
 804              		.loc 1 264 0
 805 01f2 40F20003 		movw	r3, #:lower16:events
 806 01f6 C0F20003 		movt	r3, #:upper16:events
 807 01fa 9B7C     		ldrb	r3, [r3, #18]	@ zero_extendqisi2
 808 01fc 0A2B     		cmp	r3, #10
 809 01fe 40F0E080 		bne	.L114
 265:.\estimators.c **** 			{
 266:.\estimators.c **** 				events.mapping_sm_status = SM_MOVING_JUMP;
 810              		.loc 1 266 0
 811 0202 40F20003 		movw	r3, #:lower16:events
 812 0206 C0F20003 		movt	r3, #:upper16:events
 813 020a 4FF00502 		mov	r2, #5
 814 020e 1A70     		strb	r2, [r3, #0]
 267:.\estimators.c **** 				printf("\r\n@MAPSM: MOVING JUMP PAN!\r\n");
 815              		.loc 1 267 0
 816 0210 40F20000 		movw	r0, #:lower16:.LC3
 817 0214 C0F20000 		movt	r0, #:upper16:.LC3
 818 0218 FFF7FEFF 		bl	puts
 268:.\estimators.c **** 				clu_sm_start(MOVING_JUMP_CLU);
 819              		.loc 1 268 0
 820 021c 4FF00D00 		mov	r0, #13
 821 0220 FFF7FEFF 		bl	clu_sm_start
 269:.\estimators.c **** 			}				
 270:.\estimators.c **** 			break;
 822              		.loc 1 270 0
 823 0224 CDE0     		b	.L114
 824              	.L82:
 271:.\estimators.c **** 		case SM_ON_FACE:
 272:.\estimators.c **** 			if ((events.inertial.tilt_angle == VERY_STEEP_DESCENT) ||
 825              		.loc 1 272 0
 826 0226 40F20003 		movw	r3, #:lower16:events
 827 022a C0F20003 		movt	r3, #:upper16:events
 828 022e 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 829 0230 162B     		cmp	r3, #22
 830 0232 14D0     		beq	.L103
 273:.\estimators.c **** 				(events.inertial.tilt_angle == STEEP_DESCENT)	   ||
 831              		.loc 1 273 0 discriminator 1
 832 0234 40F20003 		movw	r3, #:lower16:events
 833 0238 C0F20003 		movt	r3, #:upper16:events
 834 023c 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 272:.\estimators.c **** 			if ((events.inertial.tilt_angle == VERY_STEEP_DESCENT) ||
 835              		.loc 1 272 0 discriminator 1
 836 023e 152B     		cmp	r3, #21
 837 0240 0DD0     		beq	.L103
 274:.\estimators.c **** 				(events.inertial.tilt_angle == SIMPLE_DESCENT)	   ||
 838              		.loc 1 274 0
 839 0242 40F20003 		movw	r3, #:lower16:events
 840 0246 C0F20003 		movt	r3, #:upper16:events
 841 024a 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 273:.\estimators.c **** 				(events.inertial.tilt_angle == STEEP_DESCENT)	   ||
ARM GAS  C:\Users\gravi\AppData\Local\Temp\ccDOrhRe.s 			page 21


 842              		.loc 1 273 0
 843 024c 142B     		cmp	r3, #20
 844 024e 06D0     		beq	.L103
 275:.\estimators.c **** 				(events.inertial.tilt_angle == PLANE_MOTION))
 845              		.loc 1 275 0
 846 0250 40F20003 		movw	r3, #:lower16:events
 847 0254 C0F20003 		movt	r3, #:upper16:events
 848 0258 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 274:.\estimators.c **** 				(events.inertial.tilt_angle == SIMPLE_DESCENT)	   ||
 849              		.loc 1 274 0
 850 025a 002B     		cmp	r3, #0
 851 025c 10D1     		bne	.L104
 852              	.L103:
 276:.\estimators.c **** 			{
 277:.\estimators.c **** 				events.mapping_sm_status = SM_MOVING_TO_ORIGIN;
 853              		.loc 1 277 0
 854 025e 40F20003 		movw	r3, #:lower16:events
 855 0262 C0F20003 		movt	r3, #:upper16:events
 856 0266 4FF00302 		mov	r2, #3
 857 026a 1A70     		strb	r2, [r3, #0]
 278:.\estimators.c **** 				printf("\r\n@MAPSM: GOTO HOME P+T!\r\n");
 858              		.loc 1 278 0
 859 026c 40F20000 		movw	r0, #:lower16:.LC4
 860 0270 C0F20000 		movt	r0, #:upper16:.LC4
 861 0274 FFF7FEFF 		bl	puts
 279:.\estimators.c **** 				clu_sm_start(GOTO_HOME_CLU);
 862              		.loc 1 279 0
 863 0278 4FF00B00 		mov	r0, #11
 864 027c FFF7FEFF 		bl	clu_sm_start
 865              	.L104:
 280:.\estimators.c **** 			}
 281:.\estimators.c **** 			if (events.inertial.jump == IM_JUMPING)
 866              		.loc 1 281 0
 867 0280 40F20003 		movw	r3, #:lower16:events
 868 0284 C0F20003 		movt	r3, #:upper16:events
 869 0288 9B7C     		ldrb	r3, [r3, #18]	@ zero_extendqisi2
 870 028a 0A2B     		cmp	r3, #10
 871 028c 40F09B80 		bne	.L115
 282:.\estimators.c **** 			{
 283:.\estimators.c **** 				events.mapping_sm_status = SM_MOVING_JUMP;
 872              		.loc 1 283 0
 873 0290 40F20003 		movw	r3, #:lower16:events
 874 0294 C0F20003 		movt	r3, #:upper16:events
 875 0298 4FF00502 		mov	r2, #5
 876 029c 1A70     		strb	r2, [r3, #0]
 284:.\estimators.c **** 				printf("\r\n@MAPSM: MOVING JUMP PAN!\r\n");
 877              		.loc 1 284 0
 878 029e 40F20000 		movw	r0, #:lower16:.LC3
 879 02a2 C0F20000 		movt	r0, #:upper16:.LC3
 880 02a6 FFF7FEFF 		bl	puts
 285:.\estimators.c **** 				clu_sm_start(MOVING_JUMP_CLU);
 881              		.loc 1 285 0
 882 02aa 4FF00D00 		mov	r0, #13
 883 02ae FFF7FEFF 		bl	clu_sm_start
 286:.\estimators.c **** 			}			
 287:.\estimators.c **** 			break;	
 884              		.loc 1 287 0
ARM GAS  C:\Users\gravi\AppData\Local\Temp\ccDOrhRe.s 			page 22


 885 02b2 88E0     		b	.L115
 886              	.L83:
 288:.\estimators.c **** 		case SM_MOVING_TO_ORIGIN:
 289:.\estimators.c **** 			//if ((mover_pan.status == MOVER_ENDED) && (mover_tilt.status == MOVER_ENDED))
 290:.\estimators.c **** 			if (clu_sm.status == CLUSM_END)
 887              		.loc 1 290 0
 888 02b4 40F20003 		movw	r3, #:lower16:clu_sm
 889 02b8 C0F20003 		movt	r3, #:upper16:clu_sm
 890 02bc 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 891 02be 0C2B     		cmp	r3, #12
 892 02c0 40F08380 		bne	.L116
 291:.\estimators.c **** 			{
 292:.\estimators.c **** 				events.mapping_sm_status = SM_ON_ORIGIN;
 893              		.loc 1 292 0
 894 02c4 40F20003 		movw	r3, #:lower16:events
 895 02c8 C0F20003 		movt	r3, #:upper16:events
 896 02cc 4FF00002 		mov	r2, #0
 897 02d0 1A70     		strb	r2, [r3, #0]
 293:.\estimators.c **** 				events.timecode.on_origin_ticks = 0;
 898              		.loc 1 293 0
 899 02d2 40F20003 		movw	r3, #:lower16:events
 900 02d6 C0F20003 		movt	r3, #:upper16:events
 901 02da 4FF00002 		mov	r2, #0
 902 02de DA60     		str	r2, [r3, #12]
 294:.\estimators.c **** 			}
 295:.\estimators.c **** 			break;
 903              		.loc 1 295 0
 904 02e0 73E0     		b	.L116
 905              	.L84:
 296:.\estimators.c **** 		case SM_MOVING_PANORAMIC:
 297:.\estimators.c **** 			//if ((mover_pan.status == MOVER_ENDED) && (mover_tilt.status == MOVER_ENDED))
 298:.\estimators.c **** 			if (clu_sm.status == CLUSM_END)
 906              		.loc 1 298 0
 907 02e2 40F20003 		movw	r3, #:lower16:clu_sm
 908 02e6 C0F20003 		movt	r3, #:upper16:clu_sm
 909 02ea 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 910 02ec 0C2B     		cmp	r3, #12
 911 02ee 6ED1     		bne	.L117
 299:.\estimators.c **** 			{
 300:.\estimators.c **** 				events.mapping_sm_status = SM_ON_ORIGIN;
 912              		.loc 1 300 0
 913 02f0 40F20003 		movw	r3, #:lower16:events
 914 02f4 C0F20003 		movt	r3, #:upper16:events
 915 02f8 4FF00002 		mov	r2, #0
 916 02fc 1A70     		strb	r2, [r3, #0]
 301:.\estimators.c **** 				events.timecode.on_origin_ticks = 0;				
 917              		.loc 1 301 0
 918 02fe 40F20003 		movw	r3, #:lower16:events
 919 0302 C0F20003 		movt	r3, #:upper16:events
 920 0306 4FF00002 		mov	r2, #0
 921 030a DA60     		str	r2, [r3, #12]
 302:.\estimators.c **** 			}
 303:.\estimators.c **** 			break;
 922              		.loc 1 303 0
 923 030c 5FE0     		b	.L117
 924              	.L85:
 304:.\estimators.c **** 		case SM_MOVING_JUMP:
ARM GAS  C:\Users\gravi\AppData\Local\Temp\ccDOrhRe.s 			page 23


 305:.\estimators.c **** 			//if ((mover_pan.status == MOVER_ENDED) && (mover_tilt.status == MOVER_ENDED))
 306:.\estimators.c **** 			if (clu_sm.status == CLUSM_END)
 925              		.loc 1 306 0
 926 030e 40F20003 		movw	r3, #:lower16:clu_sm
 927 0312 C0F20003 		movt	r3, #:upper16:clu_sm
 928 0316 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 929 0318 0C2B     		cmp	r3, #12
 930 031a 5AD1     		bne	.L118
 307:.\estimators.c **** 			{
 308:.\estimators.c **** 				events.mapping_sm_status = SM_MOVING_TO_ORIGIN;
 931              		.loc 1 308 0
 932 031c 40F20003 		movw	r3, #:lower16:events
 933 0320 C0F20003 		movt	r3, #:upper16:events
 934 0324 4FF00302 		mov	r2, #3
 935 0328 1A70     		strb	r2, [r3, #0]
 309:.\estimators.c **** 				printf("\r\n@MAPSM: GOTO HOME P+T!\r\n");
 936              		.loc 1 309 0
 937 032a 40F20000 		movw	r0, #:lower16:.LC4
 938 032e C0F20000 		movt	r0, #:upper16:.LC4
 939 0332 FFF7FEFF 		bl	puts
 310:.\estimators.c **** 				clu_sm_start(GOTO_HOME_CLU);			
 940              		.loc 1 310 0
 941 0336 4FF00B00 		mov	r0, #11
 942 033a FFF7FEFF 		bl	clu_sm_start
 311:.\estimators.c **** 			}			
 312:.\estimators.c **** 			break;	
 943              		.loc 1 312 0
 944 033e 48E0     		b	.L118
 945              	.L86:
 313:.\estimators.c **** 		case SM_MOVING_TO_WHEEL:
 314:.\estimators.c **** 			//if ((mover_pan.status == MOVER_ENDED) && (mover_tilt.status == MOVER_ENDED))
 315:.\estimators.c **** 			if (clu_sm.status == CLUSM_END)
 946              		.loc 1 315 0
 947 0340 40F20003 		movw	r3, #:lower16:clu_sm
 948 0344 C0F20003 		movt	r3, #:upper16:clu_sm
 949 0348 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 950 034a 0C2B     		cmp	r3, #12
 951 034c 43D1     		bne	.L119
 316:.\estimators.c **** 			{
 317:.\estimators.c **** 				events.mapping_sm_status = SM_ON_WHEEL;				
 952              		.loc 1 317 0
 953 034e 40F20003 		movw	r3, #:lower16:events
 954 0352 C0F20003 		movt	r3, #:upper16:events
 955 0356 4FF00702 		mov	r2, #7
 956 035a 1A70     		strb	r2, [r3, #0]
 318:.\estimators.c **** 			}
 319:.\estimators.c **** 			break;
 957              		.loc 1 319 0
 958 035c 3BE0     		b	.L119
 959              	.L87:
 320:.\estimators.c **** 		case SM_ON_WHEEL:
 321:.\estimators.c **** 			if ((events.inertial.tilt_angle == VERY_STEEP_CLIMB) ||
 960              		.loc 1 321 0
 961 035e 40F20003 		movw	r3, #:lower16:events
 962 0362 C0F20003 		movt	r3, #:upper16:events
 963 0366 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 964 0368 0C2B     		cmp	r3, #12
ARM GAS  C:\Users\gravi\AppData\Local\Temp\ccDOrhRe.s 			page 24


 965 036a 14D0     		beq	.L110
 322:.\estimators.c **** 				(events.inertial.tilt_angle == STEEP_CLIMB)	     ||
 966              		.loc 1 322 0 discriminator 1
 967 036c 40F20003 		movw	r3, #:lower16:events
 968 0370 C0F20003 		movt	r3, #:upper16:events
 969 0374 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 321:.\estimators.c **** 			if ((events.inertial.tilt_angle == VERY_STEEP_CLIMB) ||
 970              		.loc 1 321 0 discriminator 1
 971 0376 0B2B     		cmp	r3, #11
 972 0378 0DD0     		beq	.L110
 323:.\estimators.c **** 				(events.inertial.tilt_angle == SIMPLE_CLIMB)	 ||
 973              		.loc 1 323 0
 974 037a 40F20003 		movw	r3, #:lower16:events
 975 037e C0F20003 		movt	r3, #:upper16:events
 976 0382 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 322:.\estimators.c **** 				(events.inertial.tilt_angle == STEEP_CLIMB)	     ||
 977              		.loc 1 322 0
 978 0384 0A2B     		cmp	r3, #10
 979 0386 06D0     		beq	.L110
 324:.\estimators.c **** 				(events.inertial.tilt_angle == PLANE_MOTION))
 980              		.loc 1 324 0
 981 0388 40F20003 		movw	r3, #:lower16:events
 982 038c C0F20003 		movt	r3, #:upper16:events
 983 0390 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 323:.\estimators.c **** 				(events.inertial.tilt_angle == SIMPLE_CLIMB)	 ||
 984              		.loc 1 323 0
 985 0392 002B     		cmp	r3, #0
 986 0394 21D1     		bne	.L120
 987              	.L110:
 325:.\estimators.c **** 			{
 326:.\estimators.c **** 				events.mapping_sm_status = SM_MOVING_TO_ORIGIN;
 988              		.loc 1 326 0
 989 0396 40F20003 		movw	r3, #:lower16:events
 990 039a C0F20003 		movt	r3, #:upper16:events
 991 039e 4FF00302 		mov	r2, #3
 992 03a2 1A70     		strb	r2, [r3, #0]
 327:.\estimators.c **** 				printf("\r\n@MAPSM: GOTO HOME P+T!\r\n");
 993              		.loc 1 327 0
 994 03a4 40F20000 		movw	r0, #:lower16:.LC4
 995 03a8 C0F20000 		movt	r0, #:upper16:.LC4
 996 03ac FFF7FEFF 		bl	puts
 328:.\estimators.c **** 				clu_sm_start(GOTO_HOME_CLU);
 997              		.loc 1 328 0
 998 03b0 4FF00B00 		mov	r0, #11
 999 03b4 FFF7FEFF 		bl	clu_sm_start
 329:.\estimators.c **** 			}
 330:.\estimators.c **** 			break;				
 1000              		.loc 1 330 0
 1001 03b8 0FE0     		b	.L120
 1002              	.L112:
 331:.\estimators.c **** 		default:
 332:.\estimators.c **** 			//
 333:.\estimators.c **** 			break;
 1003              		.loc 1 333 0
 1004 03ba 00BF     		nop
 1005 03bc 0EE0     		b	.L78
 1006              	.L113:
ARM GAS  C:\Users\gravi\AppData\Local\Temp\ccDOrhRe.s 			page 25


 257:.\estimators.c **** 			break;
 1007              		.loc 1 257 0
 1008 03be 00BF     		nop
 1009 03c0 0CE0     		b	.L78
 1010              	.L114:
 270:.\estimators.c **** 			break;
 1011              		.loc 1 270 0
 1012 03c2 00BF     		nop
 1013 03c4 0AE0     		b	.L78
 1014              	.L115:
 287:.\estimators.c **** 			break;	
 1015              		.loc 1 287 0
 1016 03c6 00BF     		nop
 1017 03c8 08E0     		b	.L78
 1018              	.L116:
 295:.\estimators.c **** 			break;
 1019              		.loc 1 295 0
 1020 03ca 00BF     		nop
 1021 03cc 06E0     		b	.L78
 1022              	.L117:
 303:.\estimators.c **** 			break;
 1023              		.loc 1 303 0
 1024 03ce 00BF     		nop
 1025 03d0 04E0     		b	.L78
 1026              	.L118:
 312:.\estimators.c **** 			break;	
 1027              		.loc 1 312 0
 1028 03d2 00BF     		nop
 1029 03d4 02E0     		b	.L78
 1030              	.L119:
 319:.\estimators.c **** 			break;
 1031              		.loc 1 319 0
 1032 03d6 00BF     		nop
 1033 03d8 00E0     		b	.L78
 1034              	.L120:
 330:.\estimators.c **** 			break;				
 1035              		.loc 1 330 0
 1036 03da 00BF     		nop
 1037              	.L78:
 334:.\estimators.c **** 	}	
 335:.\estimators.c **** }
 1038              		.loc 1 335 0
 1039 03dc 80BD     		pop	{r7, pc}
 1040              		.cfi_endproc
 1041              	.LFE61:
 1042              		.size	MappingStateMachineExecution, .-MappingStateMachineExecution
 1043 03de 00BF     		.section	.text.MappingStateMachineInit,"ax",%progbits
 1044              		.align	2
 1045              		.global	MappingStateMachineInit
 1046              		.thumb
 1047              		.thumb_func
 1048              		.type	MappingStateMachineInit, %function
 1049              	MappingStateMachineInit:
 1050              	.LFB62:
 336:.\estimators.c **** 
 337:.\estimators.c **** /****************************************/
 338:.\estimators.c **** /* MAPPING STATE MACHINE INITIALIZATION	*/
ARM GAS  C:\Users\gravi\AppData\Local\Temp\ccDOrhRe.s 			page 26


 339:.\estimators.c **** /****************************************/
 340:.\estimators.c **** void MappingStateMachineInit(void)
 341:.\estimators.c **** {
 1051              		.loc 1 341 0
 1052              		.cfi_startproc
 1053              		@ args = 0, pretend = 0, frame = 0
 1054              		@ frame_needed = 1, uses_anonymous_args = 0
 1055              		@ link register save eliminated.
 1056 0000 80B4     		push	{r7}
 1057              	.LCFI17:
 1058              		.cfi_def_cfa_offset 4
 1059              		.cfi_offset 7, -4
 1060 0002 00AF     		add	r7, sp, #0
 1061              	.LCFI18:
 1062              		.cfi_def_cfa_register 7
 342:.\estimators.c **** 	events.mapping_sm_status = SM_STANDBY;
 1063              		.loc 1 342 0
 1064 0004 40F20003 		movw	r3, #:lower16:events
 1065 0008 C0F20003 		movt	r3, #:upper16:events
 1066 000c 4FF06302 		mov	r2, #99
 1067 0010 1A70     		strb	r2, [r3, #0]
 343:.\estimators.c **** 	events.timecode.on_origin_ticks = 0;	
 1068              		.loc 1 343 0
 1069 0012 40F20003 		movw	r3, #:lower16:events
 1070 0016 C0F20003 		movt	r3, #:upper16:events
 1071 001a 4FF00002 		mov	r2, #0
 1072 001e DA60     		str	r2, [r3, #12]
 344:.\estimators.c **** }
 1073              		.loc 1 344 0
 1074 0020 BD46     		mov	sp, r7
 1075 0022 80BC     		pop	{r7}
 1076 0024 7047     		bx	lr
 1077              		.cfi_endproc
 1078              	.LFE62:
 1079              		.size	MappingStateMachineInit, .-MappingStateMachineInit
 1080 0026 00BF     		.section	.text.MappingStateMachineStart,"ax",%progbits
 1081              		.align	2
 1082              		.global	MappingStateMachineStart
 1083              		.thumb
 1084              		.thumb_func
 1085              		.type	MappingStateMachineStart, %function
 1086              	MappingStateMachineStart:
 1087              	.LFB63:
 345:.\estimators.c **** 
 346:.\estimators.c **** /****************************************/
 347:.\estimators.c **** /* MAPPING STATE MACHINE START			*/
 348:.\estimators.c **** /****************************************/
 349:.\estimators.c **** void MappingStateMachineStart(void)
 350:.\estimators.c **** {
 1088              		.loc 1 350 0
 1089              		.cfi_startproc
 1090              		@ args = 0, pretend = 0, frame = 0
 1091              		@ frame_needed = 1, uses_anonymous_args = 0
 1092              		@ link register save eliminated.
 1093 0000 80B4     		push	{r7}
 1094              	.LCFI19:
 1095              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\gravi\AppData\Local\Temp\ccDOrhRe.s 			page 27


 1096              		.cfi_offset 7, -4
 1097 0002 00AF     		add	r7, sp, #0
 1098              	.LCFI20:
 1099              		.cfi_def_cfa_register 7
 351:.\estimators.c **** 	events.mapping_sm_status = SM_ON_ORIGIN;
 1100              		.loc 1 351 0
 1101 0004 40F20003 		movw	r3, #:lower16:events
 1102 0008 C0F20003 		movt	r3, #:upper16:events
 1103 000c 4FF00002 		mov	r2, #0
 1104 0010 1A70     		strb	r2, [r3, #0]
 352:.\estimators.c **** 	events.timecode.on_origin_ticks = 0;	
 1105              		.loc 1 352 0
 1106 0012 40F20003 		movw	r3, #:lower16:events
 1107 0016 C0F20003 		movt	r3, #:upper16:events
 1108 001a 4FF00002 		mov	r2, #0
 1109 001e DA60     		str	r2, [r3, #12]
 353:.\estimators.c **** }
 1110              		.loc 1 353 0
 1111 0020 BD46     		mov	sp, r7
 1112 0022 80BC     		pop	{r7}
 1113 0024 7047     		bx	lr
 1114              		.cfi_endproc
 1115              	.LFE63:
 1116              		.size	MappingStateMachineStart, .-MappingStateMachineStart
 1117 0026 00BF     		.bss
 1118              		.align	2
 1119              	local_ticks.8447:
 1120 0000 00000000 		.space	4
 1121              		.text
 1122              	.Letext0:
 1123              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.0\\psoc creator\\import\\gnu_cs\\arm\\4
 1124              		.file 3 "./Generated_Source/PSoC5/cytypes.h"
 1125              		.file 4 "./gobee.h"
 1126              		.file 5 "./clu.h"
 1127              		.file 6 "./Generated_Source/PSoC5/core_cm3.h"
 1128              		.section	.debug_info,"",%progbits
 1129              	.Ldebug_info0:
 1130 0000 67040000 		.4byte	0x467
 1131 0004 0200     		.2byte	0x2
 1132 0006 00000000 		.4byte	.Ldebug_abbrev0
 1133 000a 04       		.byte	0x4
 1134 000b 01       		.uleb128 0x1
 1135 000c 16010000 		.4byte	.LASF74
 1136 0010 01       		.byte	0x1
 1137 0011 BC000000 		.4byte	.LASF75
 1138 0015 91010000 		.4byte	.LASF76
 1139 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1140 001d 00000000 		.4byte	0
 1141 0021 00000000 		.4byte	0
 1142 0025 00000000 		.4byte	.Ldebug_line0
 1143 0029 02       		.uleb128 0x2
 1144 002a 01       		.byte	0x1
 1145 002b 06       		.byte	0x6
 1146 002c C0010000 		.4byte	.LASF0
 1147 0030 02       		.uleb128 0x2
 1148 0031 01       		.byte	0x1
 1149 0032 08       		.byte	0x8
ARM GAS  C:\Users\gravi\AppData\Local\Temp\ccDOrhRe.s 			page 28


 1150 0033 72010000 		.4byte	.LASF1
 1151 0037 02       		.uleb128 0x2
 1152 0038 02       		.byte	0x2
 1153 0039 05       		.byte	0x5
 1154 003a 2A000000 		.4byte	.LASF2
 1155 003e 02       		.uleb128 0x2
 1156 003f 02       		.byte	0x2
 1157 0040 07       		.byte	0x7
 1158 0041 39020000 		.4byte	.LASF3
 1159 0045 03       		.uleb128 0x3
 1160 0046 CC010000 		.4byte	.LASF9
 1161 004a 02       		.byte	0x2
 1162 004b 4F       		.byte	0x4f
 1163 004c 50000000 		.4byte	0x50
 1164 0050 02       		.uleb128 0x2
 1165 0051 04       		.byte	0x4
 1166 0052 05       		.byte	0x5
 1167 0053 FC000000 		.4byte	.LASF4
 1168 0057 02       		.uleb128 0x2
 1169 0058 04       		.byte	0x4
 1170 0059 07       		.byte	0x7
 1171 005a BE020000 		.4byte	.LASF5
 1172 005e 02       		.uleb128 0x2
 1173 005f 08       		.byte	0x8
 1174 0060 05       		.byte	0x5
 1175 0061 DB000000 		.4byte	.LASF6
 1176 0065 02       		.uleb128 0x2
 1177 0066 08       		.byte	0x8
 1178 0067 07       		.byte	0x7
 1179 0068 D4010000 		.4byte	.LASF7
 1180 006c 04       		.uleb128 0x4
 1181 006d 04       		.byte	0x4
 1182 006e 05       		.byte	0x5
 1183 006f 696E7400 		.ascii	"int\000"
 1184 0073 02       		.uleb128 0x2
 1185 0074 04       		.byte	0x4
 1186 0075 07       		.byte	0x7
 1187 0076 F3010000 		.4byte	.LASF8
 1188 007a 03       		.uleb128 0x3
 1189 007b AB000000 		.4byte	.LASF10
 1190 007f 03       		.byte	0x3
 1191 0080 5B       		.byte	0x5b
 1192 0081 30000000 		.4byte	0x30
 1193 0085 03       		.uleb128 0x3
 1194 0086 9E000000 		.4byte	.LASF11
 1195 008a 03       		.byte	0x3
 1196 008b 5C       		.byte	0x5c
 1197 008c 3E000000 		.4byte	0x3e
 1198 0090 03       		.uleb128 0x3
 1199 0091 B7020000 		.4byte	.LASF12
 1200 0095 03       		.byte	0x3
 1201 0096 5D       		.byte	0x5d
 1202 0097 57000000 		.4byte	0x57
 1203 009b 03       		.uleb128 0x3
 1204 009c A5000000 		.4byte	.LASF13
 1205 00a0 03       		.byte	0x3
 1206 00a1 5F       		.byte	0x5f
ARM GAS  C:\Users\gravi\AppData\Local\Temp\ccDOrhRe.s 			page 29


 1207 00a2 37000000 		.4byte	0x37
 1208 00a6 02       		.uleb128 0x2
 1209 00a7 04       		.byte	0x4
 1210 00a8 04       		.byte	0x4
 1211 00a9 CB000000 		.4byte	.LASF14
 1212 00ad 02       		.uleb128 0x2
 1213 00ae 08       		.byte	0x8
 1214 00af 04       		.byte	0x4
 1215 00b0 EF020000 		.4byte	.LASF15
 1216 00b4 03       		.uleb128 0x3
 1217 00b5 62000000 		.4byte	.LASF16
 1218 00b9 03       		.byte	0x3
 1219 00ba 6C       		.byte	0x6c
 1220 00bb BF000000 		.4byte	0xbf
 1221 00bf 02       		.uleb128 0x2
 1222 00c0 01       		.byte	0x1
 1223 00c1 08       		.byte	0x8
 1224 00c2 5F020000 		.4byte	.LASF17
 1225 00c6 02       		.uleb128 0x2
 1226 00c7 04       		.byte	0x4
 1227 00c8 07       		.byte	0x7
 1228 00c9 59000000 		.4byte	.LASF18
 1229 00cd 05       		.uleb128 0x5
 1230 00ce 04       		.byte	0x4
 1231 00cf 04       		.byte	0x4
 1232 00d0 1B01     		.2byte	0x11b
 1233 00d2 EF000000 		.4byte	0xef
 1234 00d6 06       		.uleb128 0x6
 1235 00d7 0B020000 		.4byte	.LASF19
 1236 00db 04       		.byte	0x4
 1237 00dc 1D01     		.2byte	0x11d
 1238 00de EF000000 		.4byte	0xef
 1239 00e2 06       		.uleb128 0x6
 1240 00e3 0C000000 		.4byte	.LASF20
 1241 00e7 04       		.byte	0x4
 1242 00e8 1E01     		.2byte	0x11e
 1243 00ea A6000000 		.4byte	0xa6
 1244 00ee 00       		.byte	0
 1245 00ef 07       		.uleb128 0x7
 1246 00f0 B4000000 		.4byte	0xb4
 1247 00f4 FF000000 		.4byte	0xff
 1248 00f8 08       		.uleb128 0x8
 1249 00f9 C6000000 		.4byte	0xc6
 1250 00fd 03       		.byte	0x3
 1251 00fe 00       		.byte	0
 1252 00ff 09       		.uleb128 0x9
 1253 0100 D7030000 		.4byte	.LASF21
 1254 0104 04       		.byte	0x4
 1255 0105 1F01     		.2byte	0x11f
 1256 0107 CD000000 		.4byte	0xcd
 1257 010b 0A       		.uleb128 0xa
 1258 010c 99020000 		.4byte	.LASF30
 1259 0110 18       		.byte	0x18
 1260 0111 04       		.byte	0x4
 1261 0112 3401     		.2byte	0x134
 1262 0114 91010000 		.4byte	0x191
 1263 0118 0B       		.uleb128 0xb
ARM GAS  C:\Users\gravi\AppData\Local\Temp\ccDOrhRe.s 			page 30


 1264 0119 78000000 		.4byte	.LASF22
 1265 011d 04       		.byte	0x4
 1266 011e 3601     		.2byte	0x136
 1267 0120 7A000000 		.4byte	0x7a
 1268 0124 02       		.byte	0x2
 1269 0125 23       		.byte	0x23
 1270 0126 00       		.uleb128 0
 1271 0127 0B       		.uleb128 0xb
 1272 0128 00040000 		.4byte	.LASF23
 1273 012c 04       		.byte	0x4
 1274 012d 3A01     		.2byte	0x13a
 1275 012f 7A000000 		.4byte	0x7a
 1276 0133 02       		.byte	0x2
 1277 0134 23       		.byte	0x23
 1278 0135 01       		.uleb128 0x1
 1279 0136 0B       		.uleb128 0xb
 1280 0137 B2020000 		.4byte	.LASF24
 1281 013b 04       		.byte	0x4
 1282 013c 3C01     		.2byte	0x13c
 1283 013e FF000000 		.4byte	0xff
 1284 0142 02       		.byte	0x2
 1285 0143 23       		.byte	0x23
 1286 0144 04       		.uleb128 0x4
 1287 0145 0B       		.uleb128 0xb
 1288 0146 0D030000 		.4byte	.LASF25
 1289 014a 04       		.byte	0x4
 1290 014b 4001     		.2byte	0x140
 1291 014d 9B000000 		.4byte	0x9b
 1292 0151 02       		.byte	0x2
 1293 0152 23       		.byte	0x23
 1294 0153 08       		.uleb128 0x8
 1295 0154 0B       		.uleb128 0xb
 1296 0155 05010000 		.4byte	.LASF26
 1297 0159 04       		.byte	0x4
 1298 015a 4101     		.2byte	0x141
 1299 015c 9B000000 		.4byte	0x9b
 1300 0160 02       		.byte	0x2
 1301 0161 23       		.byte	0x23
 1302 0162 0A       		.uleb128 0xa
 1303 0163 0B       		.uleb128 0xb
 1304 0164 80010000 		.4byte	.LASF27
 1305 0168 04       		.byte	0x4
 1306 0169 4201     		.2byte	0x142
 1307 016b 9B000000 		.4byte	0x9b
 1308 016f 02       		.byte	0x2
 1309 0170 23       		.byte	0x23
 1310 0171 0C       		.uleb128 0xc
 1311 0172 0B       		.uleb128 0xb
 1312 0173 7D000000 		.4byte	.LASF28
 1313 0177 04       		.byte	0x4
 1314 0178 4601     		.2byte	0x146
 1315 017a FF000000 		.4byte	0xff
 1316 017e 02       		.byte	0x2
 1317 017f 23       		.byte	0x23
 1318 0180 10       		.uleb128 0x10
 1319 0181 0B       		.uleb128 0xb
 1320 0182 8E000000 		.4byte	.LASF29
ARM GAS  C:\Users\gravi\AppData\Local\Temp\ccDOrhRe.s 			page 31


 1321 0186 04       		.byte	0x4
 1322 0187 4701     		.2byte	0x147
 1323 0189 FF000000 		.4byte	0xff
 1324 018d 02       		.byte	0x2
 1325 018e 23       		.byte	0x23
 1326 018f 14       		.uleb128 0x14
 1327 0190 00       		.byte	0
 1328 0191 0A       		.uleb128 0xa
 1329 0192 30030000 		.4byte	.LASF31
 1330 0196 0C       		.byte	0xc
 1331 0197 04       		.byte	0x4
 1332 0198 5702     		.2byte	0x257
 1333 019a CC010000 		.4byte	0x1cc
 1334 019e 0B       		.uleb128 0xb
 1335 019f 5A020000 		.4byte	.LASF32
 1336 01a3 04       		.byte	0x4
 1337 01a4 5902     		.2byte	0x259
 1338 01a6 90000000 		.4byte	0x90
 1339 01aa 02       		.byte	0x2
 1340 01ab 23       		.byte	0x23
 1341 01ac 00       		.uleb128 0
 1342 01ad 0C       		.uleb128 0xc
 1343 01ae 73656300 		.ascii	"sec\000"
 1344 01b2 04       		.byte	0x4
 1345 01b3 5A02     		.2byte	0x25a
 1346 01b5 90000000 		.4byte	0x90
 1347 01b9 02       		.byte	0x2
 1348 01ba 23       		.byte	0x23
 1349 01bb 04       		.uleb128 0x4
 1350 01bc 0B       		.uleb128 0xb
 1351 01bd 89020000 		.4byte	.LASF33
 1352 01c1 04       		.byte	0x4
 1353 01c2 5B02     		.2byte	0x25b
 1354 01c4 90000000 		.4byte	0x90
 1355 01c8 02       		.byte	0x2
 1356 01c9 23       		.byte	0x23
 1357 01ca 08       		.uleb128 0x8
 1358 01cb 00       		.byte	0
 1359 01cc 0A       		.uleb128 0xa
 1360 01cd E9000000 		.4byte	.LASF34
 1361 01d1 05       		.byte	0x5
 1362 01d2 04       		.byte	0x4
 1363 01d3 5E02     		.2byte	0x25e
 1364 01d5 25020000 		.4byte	0x225
 1365 01d9 0B       		.uleb128 0xb
 1366 01da B1000000 		.4byte	.LASF35
 1367 01de 04       		.byte	0x4
 1368 01df 6002     		.2byte	0x260
 1369 01e1 7A000000 		.4byte	0x7a
 1370 01e5 02       		.byte	0x2
 1371 01e6 23       		.byte	0x23
 1372 01e7 00       		.uleb128 0
 1373 01e8 0B       		.uleb128 0xb
 1374 01e9 68030000 		.4byte	.LASF36
 1375 01ed 04       		.byte	0x4
 1376 01ee 6102     		.2byte	0x261
 1377 01f0 7A000000 		.4byte	0x7a
ARM GAS  C:\Users\gravi\AppData\Local\Temp\ccDOrhRe.s 			page 32


 1378 01f4 02       		.byte	0x2
 1379 01f5 23       		.byte	0x23
 1380 01f6 01       		.uleb128 0x1
 1381 01f7 0B       		.uleb128 0xb
 1382 01f8 68000000 		.4byte	.LASF37
 1383 01fc 04       		.byte	0x4
 1384 01fd 6202     		.2byte	0x262
 1385 01ff 7A000000 		.4byte	0x7a
 1386 0203 02       		.byte	0x2
 1387 0204 23       		.byte	0x23
 1388 0205 02       		.uleb128 0x2
 1389 0206 0B       		.uleb128 0xb
 1390 0207 11000000 		.4byte	.LASF38
 1391 020b 04       		.byte	0x4
 1392 020c 6302     		.2byte	0x263
 1393 020e 7A000000 		.4byte	0x7a
 1394 0212 02       		.byte	0x2
 1395 0213 23       		.byte	0x23
 1396 0214 03       		.uleb128 0x3
 1397 0215 0B       		.uleb128 0xb
 1398 0216 D1000000 		.4byte	.LASF39
 1399 021a 04       		.byte	0x4
 1400 021b 6402     		.2byte	0x264
 1401 021d 7A000000 		.4byte	0x7a
 1402 0221 02       		.byte	0x2
 1403 0222 23       		.byte	0x23
 1404 0223 04       		.uleb128 0x4
 1405 0224 00       		.byte	0
 1406 0225 0A       		.uleb128 0xa
 1407 0226 53020000 		.4byte	.LASF40
 1408 022a 18       		.byte	0x18
 1409 022b 04       		.byte	0x4
 1410 022c 5302     		.2byte	0x253
 1411 022e 60020000 		.4byte	0x260
 1412 0232 0B       		.uleb128 0xb
 1413 0233 1E030000 		.4byte	.LASF41
 1414 0237 04       		.byte	0x4
 1415 0238 5502     		.2byte	0x255
 1416 023a 7A000000 		.4byte	0x7a
 1417 023e 02       		.byte	0x2
 1418 023f 23       		.byte	0x23
 1419 0240 00       		.uleb128 0
 1420 0241 0B       		.uleb128 0xb
 1421 0242 11020000 		.4byte	.LASF42
 1422 0246 04       		.byte	0x4
 1423 0247 5C02     		.2byte	0x25c
 1424 0249 91010000 		.4byte	0x191
 1425 024d 02       		.byte	0x2
 1426 024e 23       		.byte	0x23
 1427 024f 04       		.uleb128 0x4
 1428 0250 0B       		.uleb128 0xb
 1429 0251 F7030000 		.4byte	.LASF43
 1430 0255 04       		.byte	0x4
 1431 0256 6502     		.2byte	0x265
 1432 0258 CC010000 		.4byte	0x1cc
 1433 025c 02       		.byte	0x2
 1434 025d 23       		.byte	0x23
ARM GAS  C:\Users\gravi\AppData\Local\Temp\ccDOrhRe.s 			page 33


 1435 025e 10       		.uleb128 0x10
 1436 025f 00       		.byte	0
 1437 0260 02       		.uleb128 0x2
 1438 0261 08       		.byte	0x8
 1439 0262 04       		.byte	0x4
 1440 0263 5F010000 		.4byte	.LASF44
 1441 0267 0D       		.uleb128 0xd
 1442 0268 78020000 		.4byte	.LASF45
 1443 026c 0A       		.byte	0xa
 1444 026d 05       		.byte	0x5
 1445 026e 18       		.byte	0x18
 1446 026f D6020000 		.4byte	0x2d6
 1447 0273 0E       		.uleb128 0xe
 1448 0274 4C020000 		.4byte	.LASF46
 1449 0278 05       		.byte	0x5
 1450 0279 1A       		.byte	0x1a
 1451 027a 7A000000 		.4byte	0x7a
 1452 027e 02       		.byte	0x2
 1453 027f 23       		.byte	0x23
 1454 0280 00       		.uleb128 0
 1455 0281 0E       		.uleb128 0xe
 1456 0282 F2000000 		.4byte	.LASF47
 1457 0286 05       		.byte	0x5
 1458 0287 1B       		.byte	0x1b
 1459 0288 7A000000 		.4byte	0x7a
 1460 028c 02       		.byte	0x2
 1461 028d 23       		.byte	0x23
 1462 028e 01       		.uleb128 0x1
 1463 028f 0E       		.uleb128 0xe
 1464 0290 EB010000 		.4byte	.LASF48
 1465 0294 05       		.byte	0x5
 1466 0295 1C       		.byte	0x1c
 1467 0296 7A000000 		.4byte	0x7a
 1468 029a 02       		.byte	0x2
 1469 029b 23       		.byte	0x23
 1470 029c 02       		.uleb128 0x2
 1471 029d 0E       		.uleb128 0xe
 1472 029e 00020000 		.4byte	.LASF49
 1473 02a2 05       		.byte	0x5
 1474 02a3 1D       		.byte	0x1d
 1475 02a4 85000000 		.4byte	0x85
 1476 02a8 02       		.byte	0x2
 1477 02a9 23       		.byte	0x23
 1478 02aa 04       		.uleb128 0x4
 1479 02ab 0E       		.uleb128 0xe
 1480 02ac 5F030000 		.4byte	.LASF50
 1481 02b0 05       		.byte	0x5
 1482 02b1 1E       		.byte	0x1e
 1483 02b2 85000000 		.4byte	0x85
 1484 02b6 02       		.byte	0x2
 1485 02b7 23       		.byte	0x23
 1486 02b8 06       		.uleb128 0x6
 1487 02b9 0E       		.uleb128 0xe
 1488 02ba 64020000 		.4byte	.LASF51
 1489 02be 05       		.byte	0x5
 1490 02bf 1F       		.byte	0x1f
 1491 02c0 7A000000 		.4byte	0x7a
ARM GAS  C:\Users\gravi\AppData\Local\Temp\ccDOrhRe.s 			page 34


 1492 02c4 02       		.byte	0x2
 1493 02c5 23       		.byte	0x23
 1494 02c6 08       		.uleb128 0x8
 1495 02c7 0E       		.uleb128 0xe
 1496 02c8 6E020000 		.4byte	.LASF52
 1497 02cc 05       		.byte	0x5
 1498 02cd 20       		.byte	0x20
 1499 02ce 7A000000 		.4byte	0x7a
 1500 02d2 02       		.byte	0x2
 1501 02d3 23       		.byte	0x23
 1502 02d4 09       		.uleb128 0x9
 1503 02d5 00       		.byte	0
 1504 02d6 0F       		.uleb128 0xf
 1505 02d7 01       		.byte	0x1
 1506 02d8 39030000 		.4byte	.LASF57
 1507 02dc 01       		.byte	0x1
 1508 02dd 29       		.byte	0x29
 1509 02de 01       		.byte	0x1
 1510 02df 00000000 		.4byte	.LFB56
 1511 02e3 88000000 		.4byte	.LFE56
 1512 02e7 00000000 		.4byte	.LLST0
 1513 02eb 01       		.byte	0x1
 1514 02ec 3A030000 		.4byte	0x33a
 1515 02f0 10       		.uleb128 0x10
 1516 02f1 00000000 		.4byte	.LASF53
 1517 02f5 01       		.byte	0x1
 1518 02f6 29       		.byte	0x29
 1519 02f7 A6000000 		.4byte	0xa6
 1520 02fb 02       		.byte	0x2
 1521 02fc 91       		.byte	0x91
 1522 02fd 74       		.sleb128 -12
 1523 02fe 10       		.uleb128 0x10
 1524 02ff 06000000 		.4byte	.LASF54
 1525 0303 01       		.byte	0x1
 1526 0304 29       		.byte	0x29
 1527 0305 A6000000 		.4byte	0xa6
 1528 0309 02       		.byte	0x2
 1529 030a 91       		.byte	0x91
 1530 030b 70       		.sleb128 -16
 1531 030c 10       		.uleb128 0x10
 1532 030d 53000000 		.4byte	.LASF55
 1533 0311 01       		.byte	0x1
 1534 0312 29       		.byte	0x29
 1535 0313 A6000000 		.4byte	0xa6
 1536 0317 02       		.byte	0x2
 1537 0318 91       		.byte	0x91
 1538 0319 6C       		.sleb128 -20
 1539 031a 10       		.uleb128 0x10
 1540 031b 6D000000 		.4byte	.LASF56
 1541 031f 01       		.byte	0x1
 1542 0320 29       		.byte	0x29
 1543 0321 A6000000 		.4byte	0xa6
 1544 0325 02       		.byte	0x2
 1545 0326 91       		.byte	0x91
 1546 0327 68       		.sleb128 -24
 1547 0328 11       		.uleb128 0x11
 1548 0329 1E000000 		.4byte	.LASF62
ARM GAS  C:\Users\gravi\AppData\Local\Temp\ccDOrhRe.s 			page 35


 1549 032d 01       		.byte	0x1
 1550 032e 2B       		.byte	0x2b
 1551 032f 90000000 		.4byte	0x90
 1552 0333 05       		.byte	0x5
 1553 0334 03       		.byte	0x3
 1554 0335 00000000 		.4byte	local_ticks.8447
 1555 0339 00       		.byte	0
 1556 033a 0F       		.uleb128 0xf
 1557 033b 01       		.byte	0x1
 1558 033c 8C030000 		.4byte	.LASF58
 1559 0340 01       		.byte	0x1
 1560 0341 44       		.byte	0x44
 1561 0342 01       		.byte	0x1
 1562 0343 00000000 		.4byte	.LFB57
 1563 0347 72000000 		.4byte	.LFE57
 1564 034b 38000000 		.4byte	.LLST1
 1565 034f 01       		.byte	0x1
 1566 0350 63030000 		.4byte	0x363
 1567 0354 10       		.uleb128 0x10
 1568 0355 03030000 		.4byte	.LASF59
 1569 0359 01       		.byte	0x1
 1570 035a 44       		.byte	0x44
 1571 035b A6000000 		.4byte	0xa6
 1572 035f 02       		.byte	0x2
 1573 0360 91       		.byte	0x91
 1574 0361 74       		.sleb128 -12
 1575 0362 00       		.byte	0
 1576 0363 0F       		.uleb128 0xf
 1577 0364 01       		.byte	0x1
 1578 0365 D0020000 		.4byte	.LASF60
 1579 0369 01       		.byte	0x1
 1580 036a 5A       		.byte	0x5a
 1581 036b 01       		.byte	0x1
 1582 036c 00000000 		.4byte	.LFB58
 1583 0370 8E000000 		.4byte	.LFE58
 1584 0374 70000000 		.4byte	.LLST2
 1585 0378 01       		.byte	0x1
 1586 0379 9A030000 		.4byte	0x39a
 1587 037d 10       		.uleb128 0x10
 1588 037e 52030000 		.4byte	.LASF61
 1589 0382 01       		.byte	0x1
 1590 0383 5A       		.byte	0x5a
 1591 0384 A6000000 		.4byte	0xa6
 1592 0388 02       		.byte	0x2
 1593 0389 91       		.byte	0x91
 1594 038a 6C       		.sleb128 -20
 1595 038b 11       		.uleb128 0x11
 1596 038c 09040000 		.4byte	.LASF63
 1597 0390 01       		.byte	0x1
 1598 0391 5C       		.byte	0x5c
 1599 0392 A6000000 		.4byte	0xa6
 1600 0396 02       		.byte	0x2
 1601 0397 91       		.byte	0x91
 1602 0398 74       		.sleb128 -12
 1603 0399 00       		.byte	0
 1604 039a 0F       		.uleb128 0xf
 1605 039b 01       		.byte	0x1
ARM GAS  C:\Users\gravi\AppData\Local\Temp\ccDOrhRe.s 			page 36


 1606 039c 1A020000 		.4byte	.LASF64
 1607 03a0 01       		.byte	0x1
 1608 03a1 74       		.byte	0x74
 1609 03a2 01       		.byte	0x1
 1610 03a3 00000000 		.4byte	.LFB59
 1611 03a7 98010000 		.4byte	.LFE59
 1612 03ab A8000000 		.4byte	.LLST3
 1613 03af 01       		.byte	0x1
 1614 03b0 C3030000 		.4byte	0x3c3
 1615 03b4 10       		.uleb128 0x10
 1616 03b5 52030000 		.4byte	.LASF61
 1617 03b9 01       		.byte	0x1
 1618 03ba 74       		.byte	0x74
 1619 03bb A6000000 		.4byte	0xa6
 1620 03bf 02       		.byte	0x2
 1621 03c0 91       		.byte	0x91
 1622 03c1 74       		.sleb128 -12
 1623 03c2 00       		.byte	0
 1624 03c3 0F       		.uleb128 0xf
 1625 03c4 01       		.byte	0x1
 1626 03c5 34000000 		.4byte	.LASF65
 1627 03c9 01       		.byte	0x1
 1628 03ca A3       		.byte	0xa3
 1629 03cb 01       		.byte	0x1
 1630 03cc 00000000 		.4byte	.LFB60
 1631 03d0 98000000 		.4byte	.LFE60
 1632 03d4 E0000000 		.4byte	.LLST4
 1633 03d8 01       		.byte	0x1
 1634 03d9 EC030000 		.4byte	0x3ec
 1635 03dd 10       		.uleb128 0x10
 1636 03de B3030000 		.4byte	.LASF66
 1637 03e2 01       		.byte	0x1
 1638 03e3 A3       		.byte	0xa3
 1639 03e4 A6000000 		.4byte	0xa6
 1640 03e8 02       		.byte	0x2
 1641 03e9 91       		.byte	0x91
 1642 03ea 74       		.sleb128 -12
 1643 03eb 00       		.byte	0
 1644 03ec 12       		.uleb128 0x12
 1645 03ed 01       		.byte	0x1
 1646 03ee BA030000 		.4byte	.LASF67
 1647 03f2 01       		.byte	0x1
 1648 03f3 BA       		.byte	0xba
 1649 03f4 01       		.byte	0x1
 1650 03f5 00000000 		.4byte	.LFB61
 1651 03f9 DE030000 		.4byte	.LFE61
 1652 03fd 18010000 		.4byte	.LLST5
 1653 0401 01       		.byte	0x1
 1654 0402 13       		.uleb128 0x13
 1655 0403 01       		.byte	0x1
 1656 0404 DF030000 		.4byte	.LASF68
 1657 0408 01       		.byte	0x1
 1658 0409 5401     		.2byte	0x154
 1659 040b 01       		.byte	0x1
 1660 040c 00000000 		.4byte	.LFB62
 1661 0410 26000000 		.4byte	.LFE62
 1662 0414 44010000 		.4byte	.LLST6
ARM GAS  C:\Users\gravi\AppData\Local\Temp\ccDOrhRe.s 			page 37


 1663 0418 01       		.byte	0x1
 1664 0419 13       		.uleb128 0x13
 1665 041a 01       		.byte	0x1
 1666 041b 73030000 		.4byte	.LASF69
 1667 041f 01       		.byte	0x1
 1668 0420 5D01     		.2byte	0x15d
 1669 0422 01       		.byte	0x1
 1670 0423 00000000 		.4byte	.LFB63
 1671 0427 26000000 		.4byte	.LFE63
 1672 042b 70010000 		.4byte	.LLST7
 1673 042f 01       		.byte	0x1
 1674 0430 14       		.uleb128 0x14
 1675 0431 F6020000 		.4byte	.LASF70
 1676 0435 06       		.byte	0x6
 1677 0436 1606     		.2byte	0x616
 1678 0438 3E040000 		.4byte	0x43e
 1679 043c 01       		.byte	0x1
 1680 043d 01       		.byte	0x1
 1681 043e 15       		.uleb128 0x15
 1682 043f 45000000 		.4byte	0x45
 1683 0443 16       		.uleb128 0x16
 1684 0444 A6020000 		.4byte	.LASF71
 1685 0448 01       		.byte	0x1
 1686 0449 18       		.byte	0x18
 1687 044a 0B010000 		.4byte	0x10b
 1688 044e 01       		.byte	0x1
 1689 044f 01       		.byte	0x1
 1690 0450 16       		.uleb128 0x16
 1691 0451 58030000 		.4byte	.LASF72
 1692 0455 01       		.byte	0x1
 1693 0456 20       		.byte	0x20
 1694 0457 25020000 		.4byte	0x225
 1695 045b 01       		.byte	0x1
 1696 045c 01       		.byte	0x1
 1697 045d 16       		.uleb128 0x16
 1698 045e 6B010000 		.4byte	.LASF73
 1699 0462 01       		.byte	0x1
 1700 0463 23       		.byte	0x23
 1701 0464 67020000 		.4byte	0x267
 1702 0468 01       		.byte	0x1
 1703 0469 01       		.byte	0x1
 1704 046a 00       		.byte	0
 1705              		.section	.debug_abbrev,"",%progbits
 1706              	.Ldebug_abbrev0:
 1707 0000 01       		.uleb128 0x1
 1708 0001 11       		.uleb128 0x11
 1709 0002 01       		.byte	0x1
 1710 0003 25       		.uleb128 0x25
 1711 0004 0E       		.uleb128 0xe
 1712 0005 13       		.uleb128 0x13
 1713 0006 0B       		.uleb128 0xb
 1714 0007 03       		.uleb128 0x3
 1715 0008 0E       		.uleb128 0xe
 1716 0009 1B       		.uleb128 0x1b
 1717 000a 0E       		.uleb128 0xe
 1718 000b 55       		.uleb128 0x55
 1719 000c 06       		.uleb128 0x6
ARM GAS  C:\Users\gravi\AppData\Local\Temp\ccDOrhRe.s 			page 38


 1720 000d 11       		.uleb128 0x11
 1721 000e 01       		.uleb128 0x1
 1722 000f 52       		.uleb128 0x52
 1723 0010 01       		.uleb128 0x1
 1724 0011 10       		.uleb128 0x10
 1725 0012 06       		.uleb128 0x6
 1726 0013 00       		.byte	0
 1727 0014 00       		.byte	0
 1728 0015 02       		.uleb128 0x2
 1729 0016 24       		.uleb128 0x24
 1730 0017 00       		.byte	0
 1731 0018 0B       		.uleb128 0xb
 1732 0019 0B       		.uleb128 0xb
 1733 001a 3E       		.uleb128 0x3e
 1734 001b 0B       		.uleb128 0xb
 1735 001c 03       		.uleb128 0x3
 1736 001d 0E       		.uleb128 0xe
 1737 001e 00       		.byte	0
 1738 001f 00       		.byte	0
 1739 0020 03       		.uleb128 0x3
 1740 0021 16       		.uleb128 0x16
 1741 0022 00       		.byte	0
 1742 0023 03       		.uleb128 0x3
 1743 0024 0E       		.uleb128 0xe
 1744 0025 3A       		.uleb128 0x3a
 1745 0026 0B       		.uleb128 0xb
 1746 0027 3B       		.uleb128 0x3b
 1747 0028 0B       		.uleb128 0xb
 1748 0029 49       		.uleb128 0x49
 1749 002a 13       		.uleb128 0x13
 1750 002b 00       		.byte	0
 1751 002c 00       		.byte	0
 1752 002d 04       		.uleb128 0x4
 1753 002e 24       		.uleb128 0x24
 1754 002f 00       		.byte	0
 1755 0030 0B       		.uleb128 0xb
 1756 0031 0B       		.uleb128 0xb
 1757 0032 3E       		.uleb128 0x3e
 1758 0033 0B       		.uleb128 0xb
 1759 0034 03       		.uleb128 0x3
 1760 0035 08       		.uleb128 0x8
 1761 0036 00       		.byte	0
 1762 0037 00       		.byte	0
 1763 0038 05       		.uleb128 0x5
 1764 0039 17       		.uleb128 0x17
 1765 003a 01       		.byte	0x1
 1766 003b 0B       		.uleb128 0xb
 1767 003c 0B       		.uleb128 0xb
 1768 003d 3A       		.uleb128 0x3a
 1769 003e 0B       		.uleb128 0xb
 1770 003f 3B       		.uleb128 0x3b
 1771 0040 05       		.uleb128 0x5
 1772 0041 01       		.uleb128 0x1
 1773 0042 13       		.uleb128 0x13
 1774 0043 00       		.byte	0
 1775 0044 00       		.byte	0
 1776 0045 06       		.uleb128 0x6
ARM GAS  C:\Users\gravi\AppData\Local\Temp\ccDOrhRe.s 			page 39


 1777 0046 0D       		.uleb128 0xd
 1778 0047 00       		.byte	0
 1779 0048 03       		.uleb128 0x3
 1780 0049 0E       		.uleb128 0xe
 1781 004a 3A       		.uleb128 0x3a
 1782 004b 0B       		.uleb128 0xb
 1783 004c 3B       		.uleb128 0x3b
 1784 004d 05       		.uleb128 0x5
 1785 004e 49       		.uleb128 0x49
 1786 004f 13       		.uleb128 0x13
 1787 0050 00       		.byte	0
 1788 0051 00       		.byte	0
 1789 0052 07       		.uleb128 0x7
 1790 0053 01       		.uleb128 0x1
 1791 0054 01       		.byte	0x1
 1792 0055 49       		.uleb128 0x49
 1793 0056 13       		.uleb128 0x13
 1794 0057 01       		.uleb128 0x1
 1795 0058 13       		.uleb128 0x13
 1796 0059 00       		.byte	0
 1797 005a 00       		.byte	0
 1798 005b 08       		.uleb128 0x8
 1799 005c 21       		.uleb128 0x21
 1800 005d 00       		.byte	0
 1801 005e 49       		.uleb128 0x49
 1802 005f 13       		.uleb128 0x13
 1803 0060 2F       		.uleb128 0x2f
 1804 0061 0B       		.uleb128 0xb
 1805 0062 00       		.byte	0
 1806 0063 00       		.byte	0
 1807 0064 09       		.uleb128 0x9
 1808 0065 16       		.uleb128 0x16
 1809 0066 00       		.byte	0
 1810 0067 03       		.uleb128 0x3
 1811 0068 0E       		.uleb128 0xe
 1812 0069 3A       		.uleb128 0x3a
 1813 006a 0B       		.uleb128 0xb
 1814 006b 3B       		.uleb128 0x3b
 1815 006c 05       		.uleb128 0x5
 1816 006d 49       		.uleb128 0x49
 1817 006e 13       		.uleb128 0x13
 1818 006f 00       		.byte	0
 1819 0070 00       		.byte	0
 1820 0071 0A       		.uleb128 0xa
 1821 0072 13       		.uleb128 0x13
 1822 0073 01       		.byte	0x1
 1823 0074 03       		.uleb128 0x3
 1824 0075 0E       		.uleb128 0xe
 1825 0076 0B       		.uleb128 0xb
 1826 0077 0B       		.uleb128 0xb
 1827 0078 3A       		.uleb128 0x3a
 1828 0079 0B       		.uleb128 0xb
 1829 007a 3B       		.uleb128 0x3b
 1830 007b 05       		.uleb128 0x5
 1831 007c 01       		.uleb128 0x1
 1832 007d 13       		.uleb128 0x13
 1833 007e 00       		.byte	0
ARM GAS  C:\Users\gravi\AppData\Local\Temp\ccDOrhRe.s 			page 40


 1834 007f 00       		.byte	0
 1835 0080 0B       		.uleb128 0xb
 1836 0081 0D       		.uleb128 0xd
 1837 0082 00       		.byte	0
 1838 0083 03       		.uleb128 0x3
 1839 0084 0E       		.uleb128 0xe
 1840 0085 3A       		.uleb128 0x3a
 1841 0086 0B       		.uleb128 0xb
 1842 0087 3B       		.uleb128 0x3b
 1843 0088 05       		.uleb128 0x5
 1844 0089 49       		.uleb128 0x49
 1845 008a 13       		.uleb128 0x13
 1846 008b 38       		.uleb128 0x38
 1847 008c 0A       		.uleb128 0xa
 1848 008d 00       		.byte	0
 1849 008e 00       		.byte	0
 1850 008f 0C       		.uleb128 0xc
 1851 0090 0D       		.uleb128 0xd
 1852 0091 00       		.byte	0
 1853 0092 03       		.uleb128 0x3
 1854 0093 08       		.uleb128 0x8
 1855 0094 3A       		.uleb128 0x3a
 1856 0095 0B       		.uleb128 0xb
 1857 0096 3B       		.uleb128 0x3b
 1858 0097 05       		.uleb128 0x5
 1859 0098 49       		.uleb128 0x49
 1860 0099 13       		.uleb128 0x13
 1861 009a 38       		.uleb128 0x38
 1862 009b 0A       		.uleb128 0xa
 1863 009c 00       		.byte	0
 1864 009d 00       		.byte	0
 1865 009e 0D       		.uleb128 0xd
 1866 009f 13       		.uleb128 0x13
 1867 00a0 01       		.byte	0x1
 1868 00a1 03       		.uleb128 0x3
 1869 00a2 0E       		.uleb128 0xe
 1870 00a3 0B       		.uleb128 0xb
 1871 00a4 0B       		.uleb128 0xb
 1872 00a5 3A       		.uleb128 0x3a
 1873 00a6 0B       		.uleb128 0xb
 1874 00a7 3B       		.uleb128 0x3b
 1875 00a8 0B       		.uleb128 0xb
 1876 00a9 01       		.uleb128 0x1
 1877 00aa 13       		.uleb128 0x13
 1878 00ab 00       		.byte	0
 1879 00ac 00       		.byte	0
 1880 00ad 0E       		.uleb128 0xe
 1881 00ae 0D       		.uleb128 0xd
 1882 00af 00       		.byte	0
 1883 00b0 03       		.uleb128 0x3
 1884 00b1 0E       		.uleb128 0xe
 1885 00b2 3A       		.uleb128 0x3a
 1886 00b3 0B       		.uleb128 0xb
 1887 00b4 3B       		.uleb128 0x3b
 1888 00b5 0B       		.uleb128 0xb
 1889 00b6 49       		.uleb128 0x49
 1890 00b7 13       		.uleb128 0x13
ARM GAS  C:\Users\gravi\AppData\Local\Temp\ccDOrhRe.s 			page 41


 1891 00b8 38       		.uleb128 0x38
 1892 00b9 0A       		.uleb128 0xa
 1893 00ba 00       		.byte	0
 1894 00bb 00       		.byte	0
 1895 00bc 0F       		.uleb128 0xf
 1896 00bd 2E       		.uleb128 0x2e
 1897 00be 01       		.byte	0x1
 1898 00bf 3F       		.uleb128 0x3f
 1899 00c0 0C       		.uleb128 0xc
 1900 00c1 03       		.uleb128 0x3
 1901 00c2 0E       		.uleb128 0xe
 1902 00c3 3A       		.uleb128 0x3a
 1903 00c4 0B       		.uleb128 0xb
 1904 00c5 3B       		.uleb128 0x3b
 1905 00c6 0B       		.uleb128 0xb
 1906 00c7 27       		.uleb128 0x27
 1907 00c8 0C       		.uleb128 0xc
 1908 00c9 11       		.uleb128 0x11
 1909 00ca 01       		.uleb128 0x1
 1910 00cb 12       		.uleb128 0x12
 1911 00cc 01       		.uleb128 0x1
 1912 00cd 40       		.uleb128 0x40
 1913 00ce 06       		.uleb128 0x6
 1914 00cf 9642     		.uleb128 0x2116
 1915 00d1 0C       		.uleb128 0xc
 1916 00d2 01       		.uleb128 0x1
 1917 00d3 13       		.uleb128 0x13
 1918 00d4 00       		.byte	0
 1919 00d5 00       		.byte	0
 1920 00d6 10       		.uleb128 0x10
 1921 00d7 05       		.uleb128 0x5
 1922 00d8 00       		.byte	0
 1923 00d9 03       		.uleb128 0x3
 1924 00da 0E       		.uleb128 0xe
 1925 00db 3A       		.uleb128 0x3a
 1926 00dc 0B       		.uleb128 0xb
 1927 00dd 3B       		.uleb128 0x3b
 1928 00de 0B       		.uleb128 0xb
 1929 00df 49       		.uleb128 0x49
 1930 00e0 13       		.uleb128 0x13
 1931 00e1 02       		.uleb128 0x2
 1932 00e2 0A       		.uleb128 0xa
 1933 00e3 00       		.byte	0
 1934 00e4 00       		.byte	0
 1935 00e5 11       		.uleb128 0x11
 1936 00e6 34       		.uleb128 0x34
 1937 00e7 00       		.byte	0
 1938 00e8 03       		.uleb128 0x3
 1939 00e9 0E       		.uleb128 0xe
 1940 00ea 3A       		.uleb128 0x3a
 1941 00eb 0B       		.uleb128 0xb
 1942 00ec 3B       		.uleb128 0x3b
 1943 00ed 0B       		.uleb128 0xb
 1944 00ee 49       		.uleb128 0x49
 1945 00ef 13       		.uleb128 0x13
 1946 00f0 02       		.uleb128 0x2
 1947 00f1 0A       		.uleb128 0xa
ARM GAS  C:\Users\gravi\AppData\Local\Temp\ccDOrhRe.s 			page 42


 1948 00f2 00       		.byte	0
 1949 00f3 00       		.byte	0
 1950 00f4 12       		.uleb128 0x12
 1951 00f5 2E       		.uleb128 0x2e
 1952 00f6 00       		.byte	0
 1953 00f7 3F       		.uleb128 0x3f
 1954 00f8 0C       		.uleb128 0xc
 1955 00f9 03       		.uleb128 0x3
 1956 00fa 0E       		.uleb128 0xe
 1957 00fb 3A       		.uleb128 0x3a
 1958 00fc 0B       		.uleb128 0xb
 1959 00fd 3B       		.uleb128 0x3b
 1960 00fe 0B       		.uleb128 0xb
 1961 00ff 27       		.uleb128 0x27
 1962 0100 0C       		.uleb128 0xc
 1963 0101 11       		.uleb128 0x11
 1964 0102 01       		.uleb128 0x1
 1965 0103 12       		.uleb128 0x12
 1966 0104 01       		.uleb128 0x1
 1967 0105 40       		.uleb128 0x40
 1968 0106 06       		.uleb128 0x6
 1969 0107 9642     		.uleb128 0x2116
 1970 0109 0C       		.uleb128 0xc
 1971 010a 00       		.byte	0
 1972 010b 00       		.byte	0
 1973 010c 13       		.uleb128 0x13
 1974 010d 2E       		.uleb128 0x2e
 1975 010e 00       		.byte	0
 1976 010f 3F       		.uleb128 0x3f
 1977 0110 0C       		.uleb128 0xc
 1978 0111 03       		.uleb128 0x3
 1979 0112 0E       		.uleb128 0xe
 1980 0113 3A       		.uleb128 0x3a
 1981 0114 0B       		.uleb128 0xb
 1982 0115 3B       		.uleb128 0x3b
 1983 0116 05       		.uleb128 0x5
 1984 0117 27       		.uleb128 0x27
 1985 0118 0C       		.uleb128 0xc
 1986 0119 11       		.uleb128 0x11
 1987 011a 01       		.uleb128 0x1
 1988 011b 12       		.uleb128 0x12
 1989 011c 01       		.uleb128 0x1
 1990 011d 40       		.uleb128 0x40
 1991 011e 06       		.uleb128 0x6
 1992 011f 9742     		.uleb128 0x2117
 1993 0121 0C       		.uleb128 0xc
 1994 0122 00       		.byte	0
 1995 0123 00       		.byte	0
 1996 0124 14       		.uleb128 0x14
 1997 0125 34       		.uleb128 0x34
 1998 0126 00       		.byte	0
 1999 0127 03       		.uleb128 0x3
 2000 0128 0E       		.uleb128 0xe
 2001 0129 3A       		.uleb128 0x3a
 2002 012a 0B       		.uleb128 0xb
 2003 012b 3B       		.uleb128 0x3b
 2004 012c 05       		.uleb128 0x5
ARM GAS  C:\Users\gravi\AppData\Local\Temp\ccDOrhRe.s 			page 43


 2005 012d 49       		.uleb128 0x49
 2006 012e 13       		.uleb128 0x13
 2007 012f 3F       		.uleb128 0x3f
 2008 0130 0C       		.uleb128 0xc
 2009 0131 3C       		.uleb128 0x3c
 2010 0132 0C       		.uleb128 0xc
 2011 0133 00       		.byte	0
 2012 0134 00       		.byte	0
 2013 0135 15       		.uleb128 0x15
 2014 0136 35       		.uleb128 0x35
 2015 0137 00       		.byte	0
 2016 0138 49       		.uleb128 0x49
 2017 0139 13       		.uleb128 0x13
 2018 013a 00       		.byte	0
 2019 013b 00       		.byte	0
 2020 013c 16       		.uleb128 0x16
 2021 013d 34       		.uleb128 0x34
 2022 013e 00       		.byte	0
 2023 013f 03       		.uleb128 0x3
 2024 0140 0E       		.uleb128 0xe
 2025 0141 3A       		.uleb128 0x3a
 2026 0142 0B       		.uleb128 0xb
 2027 0143 3B       		.uleb128 0x3b
 2028 0144 0B       		.uleb128 0xb
 2029 0145 49       		.uleb128 0x49
 2030 0146 13       		.uleb128 0x13
 2031 0147 3F       		.uleb128 0x3f
 2032 0148 0C       		.uleb128 0xc
 2033 0149 3C       		.uleb128 0x3c
 2034 014a 0C       		.uleb128 0xc
 2035 014b 00       		.byte	0
 2036 014c 00       		.byte	0
 2037 014d 00       		.byte	0
 2038              		.section	.debug_loc,"",%progbits
 2039              	.Ldebug_loc0:
 2040              	.LLST0:
 2041 0000 00000000 		.4byte	.LFB56
 2042 0004 02000000 		.4byte	.LCFI0
 2043 0008 0200     		.2byte	0x2
 2044 000a 7D       		.byte	0x7d
 2045 000b 00       		.sleb128 0
 2046 000c 02000000 		.4byte	.LCFI0
 2047 0010 04000000 		.4byte	.LCFI1
 2048 0014 0200     		.2byte	0x2
 2049 0016 7D       		.byte	0x7d
 2050 0017 08       		.sleb128 8
 2051 0018 04000000 		.4byte	.LCFI1
 2052 001c 06000000 		.4byte	.LCFI2
 2053 0020 0200     		.2byte	0x2
 2054 0022 7D       		.byte	0x7d
 2055 0023 18       		.sleb128 24
 2056 0024 06000000 		.4byte	.LCFI2
 2057 0028 88000000 		.4byte	.LFE56
 2058 002c 0200     		.2byte	0x2
 2059 002e 77       		.byte	0x77
 2060 002f 18       		.sleb128 24
 2061 0030 00000000 		.4byte	0
ARM GAS  C:\Users\gravi\AppData\Local\Temp\ccDOrhRe.s 			page 44


 2062 0034 00000000 		.4byte	0
 2063              	.LLST1:
 2064 0038 00000000 		.4byte	.LFB57
 2065 003c 02000000 		.4byte	.LCFI3
 2066 0040 0200     		.2byte	0x2
 2067 0042 7D       		.byte	0x7d
 2068 0043 00       		.sleb128 0
 2069 0044 02000000 		.4byte	.LCFI3
 2070 0048 04000000 		.4byte	.LCFI4
 2071 004c 0200     		.2byte	0x2
 2072 004e 7D       		.byte	0x7d
 2073 004f 08       		.sleb128 8
 2074 0050 04000000 		.4byte	.LCFI4
 2075 0054 06000000 		.4byte	.LCFI5
 2076 0058 0200     		.2byte	0x2
 2077 005a 7D       		.byte	0x7d
 2078 005b 10       		.sleb128 16
 2079 005c 06000000 		.4byte	.LCFI5
 2080 0060 72000000 		.4byte	.LFE57
 2081 0064 0200     		.2byte	0x2
 2082 0066 77       		.byte	0x77
 2083 0067 10       		.sleb128 16
 2084 0068 00000000 		.4byte	0
 2085 006c 00000000 		.4byte	0
 2086              	.LLST2:
 2087 0070 00000000 		.4byte	.LFB58
 2088 0074 02000000 		.4byte	.LCFI6
 2089 0078 0200     		.2byte	0x2
 2090 007a 7D       		.byte	0x7d
 2091 007b 00       		.sleb128 0
 2092 007c 02000000 		.4byte	.LCFI6
 2093 0080 04000000 		.4byte	.LCFI7
 2094 0084 0200     		.2byte	0x2
 2095 0086 7D       		.byte	0x7d
 2096 0087 08       		.sleb128 8
 2097 0088 04000000 		.4byte	.LCFI7
 2098 008c 06000000 		.4byte	.LCFI8
 2099 0090 0200     		.2byte	0x2
 2100 0092 7D       		.byte	0x7d
 2101 0093 18       		.sleb128 24
 2102 0094 06000000 		.4byte	.LCFI8
 2103 0098 8E000000 		.4byte	.LFE58
 2104 009c 0200     		.2byte	0x2
 2105 009e 77       		.byte	0x77
 2106 009f 18       		.sleb128 24
 2107 00a0 00000000 		.4byte	0
 2108 00a4 00000000 		.4byte	0
 2109              	.LLST3:
 2110 00a8 00000000 		.4byte	.LFB59
 2111 00ac 02000000 		.4byte	.LCFI9
 2112 00b0 0200     		.2byte	0x2
 2113 00b2 7D       		.byte	0x7d
 2114 00b3 00       		.sleb128 0
 2115 00b4 02000000 		.4byte	.LCFI9
 2116 00b8 04000000 		.4byte	.LCFI10
 2117 00bc 0200     		.2byte	0x2
 2118 00be 7D       		.byte	0x7d
ARM GAS  C:\Users\gravi\AppData\Local\Temp\ccDOrhRe.s 			page 45


 2119 00bf 08       		.sleb128 8
 2120 00c0 04000000 		.4byte	.LCFI10
 2121 00c4 06000000 		.4byte	.LCFI11
 2122 00c8 0200     		.2byte	0x2
 2123 00ca 7D       		.byte	0x7d
 2124 00cb 10       		.sleb128 16
 2125 00cc 06000000 		.4byte	.LCFI11
 2126 00d0 98010000 		.4byte	.LFE59
 2127 00d4 0200     		.2byte	0x2
 2128 00d6 77       		.byte	0x77
 2129 00d7 10       		.sleb128 16
 2130 00d8 00000000 		.4byte	0
 2131 00dc 00000000 		.4byte	0
 2132              	.LLST4:
 2133 00e0 00000000 		.4byte	.LFB60
 2134 00e4 02000000 		.4byte	.LCFI12
 2135 00e8 0200     		.2byte	0x2
 2136 00ea 7D       		.byte	0x7d
 2137 00eb 00       		.sleb128 0
 2138 00ec 02000000 		.4byte	.LCFI12
 2139 00f0 04000000 		.4byte	.LCFI13
 2140 00f4 0200     		.2byte	0x2
 2141 00f6 7D       		.byte	0x7d
 2142 00f7 08       		.sleb128 8
 2143 00f8 04000000 		.4byte	.LCFI13
 2144 00fc 06000000 		.4byte	.LCFI14
 2145 0100 0200     		.2byte	0x2
 2146 0102 7D       		.byte	0x7d
 2147 0103 10       		.sleb128 16
 2148 0104 06000000 		.4byte	.LCFI14
 2149 0108 98000000 		.4byte	.LFE60
 2150 010c 0200     		.2byte	0x2
 2151 010e 77       		.byte	0x77
 2152 010f 10       		.sleb128 16
 2153 0110 00000000 		.4byte	0
 2154 0114 00000000 		.4byte	0
 2155              	.LLST5:
 2156 0118 00000000 		.4byte	.LFB61
 2157 011c 02000000 		.4byte	.LCFI15
 2158 0120 0200     		.2byte	0x2
 2159 0122 7D       		.byte	0x7d
 2160 0123 00       		.sleb128 0
 2161 0124 02000000 		.4byte	.LCFI15
 2162 0128 04000000 		.4byte	.LCFI16
 2163 012c 0200     		.2byte	0x2
 2164 012e 7D       		.byte	0x7d
 2165 012f 08       		.sleb128 8
 2166 0130 04000000 		.4byte	.LCFI16
 2167 0134 DE030000 		.4byte	.LFE61
 2168 0138 0200     		.2byte	0x2
 2169 013a 77       		.byte	0x77
 2170 013b 08       		.sleb128 8
 2171 013c 00000000 		.4byte	0
 2172 0140 00000000 		.4byte	0
 2173              	.LLST6:
 2174 0144 00000000 		.4byte	.LFB62
 2175 0148 02000000 		.4byte	.LCFI17
ARM GAS  C:\Users\gravi\AppData\Local\Temp\ccDOrhRe.s 			page 46


 2176 014c 0200     		.2byte	0x2
 2177 014e 7D       		.byte	0x7d
 2178 014f 00       		.sleb128 0
 2179 0150 02000000 		.4byte	.LCFI17
 2180 0154 04000000 		.4byte	.LCFI18
 2181 0158 0200     		.2byte	0x2
 2182 015a 7D       		.byte	0x7d
 2183 015b 04       		.sleb128 4
 2184 015c 04000000 		.4byte	.LCFI18
 2185 0160 26000000 		.4byte	.LFE62
 2186 0164 0200     		.2byte	0x2
 2187 0166 77       		.byte	0x77
 2188 0167 04       		.sleb128 4
 2189 0168 00000000 		.4byte	0
 2190 016c 00000000 		.4byte	0
 2191              	.LLST7:
 2192 0170 00000000 		.4byte	.LFB63
 2193 0174 02000000 		.4byte	.LCFI19
 2194 0178 0200     		.2byte	0x2
 2195 017a 7D       		.byte	0x7d
 2196 017b 00       		.sleb128 0
 2197 017c 02000000 		.4byte	.LCFI19
 2198 0180 04000000 		.4byte	.LCFI20
 2199 0184 0200     		.2byte	0x2
 2200 0186 7D       		.byte	0x7d
 2201 0187 04       		.sleb128 4
 2202 0188 04000000 		.4byte	.LCFI20
 2203 018c 26000000 		.4byte	.LFE63
 2204 0190 0200     		.2byte	0x2
 2205 0192 77       		.byte	0x77
 2206 0193 04       		.sleb128 4
 2207 0194 00000000 		.4byte	0
 2208 0198 00000000 		.4byte	0
 2209              		.section	.debug_aranges,"",%progbits
 2210 0000 54000000 		.4byte	0x54
 2211 0004 0200     		.2byte	0x2
 2212 0006 00000000 		.4byte	.Ldebug_info0
 2213 000a 04       		.byte	0x4
 2214 000b 00       		.byte	0
 2215 000c 0000     		.2byte	0
 2216 000e 0000     		.2byte	0
 2217 0010 00000000 		.4byte	.LFB56
 2218 0014 88000000 		.4byte	.LFE56-.LFB56
 2219 0018 00000000 		.4byte	.LFB57
 2220 001c 72000000 		.4byte	.LFE57-.LFB57
 2221 0020 00000000 		.4byte	.LFB58
 2222 0024 8E000000 		.4byte	.LFE58-.LFB58
 2223 0028 00000000 		.4byte	.LFB59
 2224 002c 98010000 		.4byte	.LFE59-.LFB59
 2225 0030 00000000 		.4byte	.LFB60
 2226 0034 98000000 		.4byte	.LFE60-.LFB60
 2227 0038 00000000 		.4byte	.LFB61
 2228 003c DE030000 		.4byte	.LFE61-.LFB61
 2229 0040 00000000 		.4byte	.LFB62
 2230 0044 26000000 		.4byte	.LFE62-.LFB62
 2231 0048 00000000 		.4byte	.LFB63
 2232 004c 26000000 		.4byte	.LFE63-.LFB63
ARM GAS  C:\Users\gravi\AppData\Local\Temp\ccDOrhRe.s 			page 47


 2233 0050 00000000 		.4byte	0
 2234 0054 00000000 		.4byte	0
 2235              		.section	.debug_ranges,"",%progbits
 2236              	.Ldebug_ranges0:
 2237 0000 00000000 		.4byte	.LFB56
 2238 0004 88000000 		.4byte	.LFE56
 2239 0008 00000000 		.4byte	.LFB57
 2240 000c 72000000 		.4byte	.LFE57
 2241 0010 00000000 		.4byte	.LFB58
 2242 0014 8E000000 		.4byte	.LFE58
 2243 0018 00000000 		.4byte	.LFB59
 2244 001c 98010000 		.4byte	.LFE59
 2245 0020 00000000 		.4byte	.LFB60
 2246 0024 98000000 		.4byte	.LFE60
 2247 0028 00000000 		.4byte	.LFB61
 2248 002c DE030000 		.4byte	.LFE61
 2249 0030 00000000 		.4byte	.LFB62
 2250 0034 26000000 		.4byte	.LFE62
 2251 0038 00000000 		.4byte	.LFB63
 2252 003c 26000000 		.4byte	.LFE63
 2253 0040 00000000 		.4byte	0
 2254 0044 00000000 		.4byte	0
 2255              		.section	.debug_line,"",%progbits
 2256              	.Ldebug_line0:
 2257 0000 55020000 		.section	.debug_str,"MS",%progbits,1
 2257      02001701 
 2257      00000201 
 2257      FB0E0D00 
 2257      01010101 
 2258              	.LASF53:
 2259 0000 6163635F 		.ascii	"acc_x\000"
 2259      7800
 2260              	.LASF54:
 2261 0006 6163635F 		.ascii	"acc_y\000"
 2261      7900
 2262              	.LASF20:
 2263 000c 666E756D 		.ascii	"fnum\000"
 2263      00
 2264              	.LASF38:
 2265 0011 61636365 		.ascii	"acceleration\000"
 2265      6C657261 
 2265      74696F6E 
 2265      00
 2266              	.LASF62:
 2267 001e 6C6F6361 		.ascii	"local_ticks\000"
 2267      6C5F7469 
 2267      636B7300 
 2268              	.LASF2:
 2269 002a 73686F72 		.ascii	"short int\000"
 2269      7420696E 
 2269      7400
 2270              	.LASF65:
 2271 0034 53696D70 		.ascii	"SimpleVibrationEventsEstimator\000"
 2271      6C655669 
 2271      62726174 
 2271      696F6E45 
 2271      76656E74 
ARM GAS  C:\Users\gravi\AppData\Local\Temp\ccDOrhRe.s 			page 48


 2272              	.LASF55:
 2273 0053 6163635F 		.ascii	"acc_z\000"
 2273      7A00
 2274              	.LASF18:
 2275 0059 73697A65 		.ascii	"sizetype\000"
 2275      74797065 
 2275      00
 2276              	.LASF16:
 2277 0062 63686172 		.ascii	"char8\000"
 2277      3800
 2278              	.LASF37:
 2279 0068 6A756D70 		.ascii	"jump\000"
 2279      00
 2280              	.LASF56:
 2281 006d 6163635F 		.ascii	"acc_modulo\000"
 2281      6D6F6475 
 2281      6C6F00
 2282              	.LASF22:
 2283 0078 6D6F6465 		.ascii	"mode\000"
 2283      00
 2284              	.LASF28:
 2285 007d 6A756D70 		.ascii	"jump_g_threshold\000"
 2285      5F675F74 
 2285      68726573 
 2285      686F6C64 
 2285      00
 2286              	.LASF29:
 2287 008e 6163635F 		.ascii	"acc_g_threshold\000"
 2287      675F7468 
 2287      72657368 
 2287      6F6C6400 
 2288              	.LASF11:
 2289 009e 75696E74 		.ascii	"uint16\000"
 2289      313600
 2290              	.LASF13:
 2291 00a5 696E7431 		.ascii	"int16\000"
 2291      3600
 2292              	.LASF10:
 2293 00ab 75696E74 		.ascii	"uint8\000"
 2293      3800
 2294              	.LASF35:
 2295 00b1 74696C74 		.ascii	"tilt_angle\000"
 2295      5F616E67 
 2295      6C6500
 2296              	.LASF75:
 2297 00bc 2E5C6573 		.ascii	".\\estimators.c\000"
 2297      74696D61 
 2297      746F7273 
 2297      2E6300
 2298              	.LASF14:
 2299 00cb 666C6F61 		.ascii	"float\000"
 2299      7400
 2300              	.LASF39:
 2301 00d1 76696272 		.ascii	"vibration\000"
 2301      6174696F 
 2301      6E00
 2302              	.LASF6:
ARM GAS  C:\Users\gravi\AppData\Local\Temp\ccDOrhRe.s 			page 49


 2303 00db 6C6F6E67 		.ascii	"long long int\000"
 2303      206C6F6E 
 2303      6720696E 
 2303      7400
 2304              	.LASF34:
 2305 00e9 494E4552 		.ascii	"INERTIAL\000"
 2305      5449414C 
 2305      00
 2306              	.LASF47:
 2307 00f2 636C756E 		.ascii	"clunumber\000"
 2307      756D6265 
 2307      7200
 2308              	.LASF4:
 2309 00fc 6C6F6E67 		.ascii	"long int\000"
 2309      20696E74 
 2309      00
 2310              	.LASF26:
 2311 0105 795F6163 		.ascii	"y_acc_ADC_offset\000"
 2311      635F4144 
 2311      435F6F66 
 2311      66736574 
 2311      00
 2312              	.LASF74:
 2313 0116 474E5520 		.ascii	"GNU C 4.7.3 20130312 (release) [ARM/embedded-4_7-br"
 2313      4320342E 
 2313      372E3320 
 2313      32303133 
 2313      30333132 
 2314 0149 616E6368 		.ascii	"anch revision 196615]\000"
 2314      20726576 
 2314      6973696F 
 2314      6E203139 
 2314      36363135 
 2315              	.LASF44:
 2316 015f 6C6F6E67 		.ascii	"long double\000"
 2316      20646F75 
 2316      626C6500 
 2317              	.LASF73:
 2318 016b 636C755F 		.ascii	"clu_sm\000"
 2318      736D00
 2319              	.LASF1:
 2320 0172 756E7369 		.ascii	"unsigned char\000"
 2320      676E6564 
 2320      20636861 
 2320      7200
 2321              	.LASF27:
 2322 0180 7A5F6163 		.ascii	"z_acc_ADC_offset\000"
 2322      635F4144 
 2322      435F6F66 
 2322      66736574 
 2322      00
 2323              	.LASF76:
 2324 0191 443A5C5F 		.ascii	"D:\\_GITHUB repos\\Squit-HW0.0\\Squit-Proto.cydsn\000"
 2324      47495448 
 2324      55422072 
 2324      65706F73 
 2324      5C537175 
ARM GAS  C:\Users\gravi\AppData\Local\Temp\ccDOrhRe.s 			page 50


 2325              	.LASF0:
 2326 01c0 7369676E 		.ascii	"signed char\000"
 2326      65642063 
 2326      68617200 
 2327              	.LASF9:
 2328 01cc 696E7433 		.ascii	"int32_t\000"
 2328      325F7400 
 2329              	.LASF7:
 2330 01d4 6C6F6E67 		.ascii	"long long unsigned int\000"
 2330      206C6F6E 
 2330      6720756E 
 2330      7369676E 
 2330      65642069 
 2331              	.LASF48:
 2332 01eb 636C756C 		.ascii	"cluline\000"
 2332      696E6500 
 2333              	.LASF8:
 2334 01f3 756E7369 		.ascii	"unsigned int\000"
 2334      676E6564 
 2334      20696E74 
 2334      00
 2335              	.LASF49:
 2336 0200 70617573 		.ascii	"pauseticks\000"
 2336      65746963 
 2336      6B7300
 2337              	.LASF19:
 2338 020b 66627974 		.ascii	"fbyte\000"
 2338      6500
 2339              	.LASF42:
 2340 0211 74696D65 		.ascii	"timecode\000"
 2340      636F6465 
 2340      00
 2341              	.LASF64:
 2342 021a 53696D70 		.ascii	"SimpleTiltAngleEventsEstimator\000"
 2342      6C655469 
 2342      6C74416E 
 2342      676C6545 
 2342      76656E74 
 2343              	.LASF3:
 2344 0239 73686F72 		.ascii	"short unsigned int\000"
 2344      7420756E 
 2344      7369676E 
 2344      65642069 
 2344      6E7400
 2345              	.LASF46:
 2346 024c 73746174 		.ascii	"status\000"
 2346      757300
 2347              	.LASF40:
 2348 0253 4556454E 		.ascii	"EVENTS\000"
 2348      545300
 2349              	.LASF32:
 2350 025a 64736563 		.ascii	"dsec\000"
 2350      00
 2351              	.LASF17:
 2352 025f 63686172 		.ascii	"char\000"
 2352      00
 2353              	.LASF51:
ARM GAS  C:\Users\gravi\AppData\Local\Temp\ccDOrhRe.s 			page 51


 2354 0264 70747261 		.ascii	"ptrap_num\000"
 2354      705F6E75 
 2354      6D00
 2355              	.LASF52:
 2356 026e 74747261 		.ascii	"ttrap_num\000"
 2356      705F6E75 
 2356      6D00
 2357              	.LASF45:
 2358 0278 434C555F 		.ascii	"CLU_STATEMACHINE\000"
 2358      53544154 
 2358      454D4143 
 2358      48494E45 
 2358      00
 2359              	.LASF33:
 2360 0289 6F6E5F6F 		.ascii	"on_origin_ticks\000"
 2360      72696769 
 2360      6E5F7469 
 2360      636B7300 
 2361              	.LASF30:
 2362 0299 474F4245 		.ascii	"GOBEE_PARAMS\000"
 2362      455F5041 
 2362      52414D53 
 2362      00
 2363              	.LASF71:
 2364 02a6 676F6265 		.ascii	"gobee_param\000"
 2364      655F7061 
 2364      72616D00 
 2365              	.LASF24:
 2366 02b2 62657461 		.ascii	"beta\000"
 2366      00
 2367              	.LASF12:
 2368 02b7 75696E74 		.ascii	"uint32\000"
 2368      333200
 2369              	.LASF5:
 2370 02be 6C6F6E67 		.ascii	"long unsigned int\000"
 2370      20756E73 
 2370      69676E65 
 2370      6420696E 
 2370      7400
 2371              	.LASF60:
 2372 02d0 53696D70 		.ascii	"SimpleRollAngleEventsEstimator\000"
 2372      6C65526F 
 2372      6C6C416E 
 2372      676C6545 
 2372      76656E74 
 2373              	.LASF15:
 2374 02ef 646F7562 		.ascii	"double\000"
 2374      6C6500
 2375              	.LASF70:
 2376 02f6 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2376      52784275 
 2376      66666572 
 2376      00
 2377              	.LASF59:
 2378 0303 686F7269 		.ascii	"horiz_acc\000"
 2378      7A5F6163 
 2378      6300
ARM GAS  C:\Users\gravi\AppData\Local\Temp\ccDOrhRe.s 			page 52


 2379              	.LASF25:
 2380 030d 785F6163 		.ascii	"x_acc_ADC_offset\000"
 2380      635F4144 
 2380      435F6F66 
 2380      66736574 
 2380      00
 2381              	.LASF41:
 2382 031e 6D617070 		.ascii	"mapping_sm_status\000"
 2382      696E675F 
 2382      736D5F73 
 2382      74617475 
 2382      7300
 2383              	.LASF31:
 2384 0330 54494D45 		.ascii	"TIMECODE\000"
 2384      434F4445 
 2384      00
 2385              	.LASF57:
 2386 0339 53696D70 		.ascii	"SimpleJumpEventEstimator\000"
 2386      6C654A75 
 2386      6D704576 
 2386      656E7445 
 2386      7374696D 
 2387              	.LASF61:
 2388 0352 616E676C 		.ascii	"angle\000"
 2388      6500
 2389              	.LASF72:
 2390 0358 6576656E 		.ascii	"events\000"
 2390      747300
 2391              	.LASF50:
 2392 035f 70617573 		.ascii	"pausemax\000"
 2392      656D6178 
 2392      00
 2393              	.LASF36:
 2394 0368 726F6C6C 		.ascii	"roll_angle\000"
 2394      5F616E67 
 2394      6C6500
 2395              	.LASF69:
 2396 0373 4D617070 		.ascii	"MappingStateMachineStart\000"
 2396      696E6753 
 2396      74617465 
 2396      4D616368 
 2396      696E6553 
 2397              	.LASF58:
 2398 038c 53696D70 		.ascii	"SimpleHorizAccelerationEventsEstimator\000"
 2398      6C65486F 
 2398      72697A41 
 2398      6363656C 
 2398      65726174 
 2399              	.LASF66:
 2400 03b3 73797364 		.ascii	"sysdyn\000"
 2400      796E00
 2401              	.LASF67:
 2402 03ba 4D617070 		.ascii	"MappingStateMachineExecution\000"
 2402      696E6753 
 2402      74617465 
 2402      4D616368 
 2402      696E6545 
ARM GAS  C:\Users\gravi\AppData\Local\Temp\ccDOrhRe.s 			page 53


 2403              	.LASF21:
 2404 03d7 666C6F61 		.ascii	"floatEE\000"
 2404      74454500 
 2405              	.LASF68:
 2406 03df 4D617070 		.ascii	"MappingStateMachineInit\000"
 2406      696E6753 
 2406      74617465 
 2406      4D616368 
 2406      696E6549 
 2407              	.LASF43:
 2408 03f7 696E6572 		.ascii	"inertial\000"
 2408      7469616C 
 2408      00
 2409              	.LASF23:
 2410 0400 64697265 		.ascii	"director\000"
 2410      63746F72 
 2410      00
 2411              	.LASF63:
 2412 0409 616E676C 		.ascii	"angle_abs\000"
 2412      655F6162 
 2412      7300
 2413              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.7.3 20130312 (release) [ARM/embedded-4_7-br
